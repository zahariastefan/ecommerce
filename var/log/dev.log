[2022-07-28T19:58:21.618785+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T19:58:22.979786+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T19:58:23.052640+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T19:58:23.052767+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T19:58:23.052846+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T19:58:23.052916+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T19:58:23.052993+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T19:58:24.683854+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T19:58:26.666398+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:26.700574+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:26.771383+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:26.771849+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T19:58:26.833613+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:26.834112+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T19:58:26.835263+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:26.835607+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T19:58:26.837852+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T19:58:26.877035+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T19:58:27.001499+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:27.330170+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T19:58:27.858711+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4fd2c6"},"request_uri":"http://192.168.0.167/_wdt/4fd2c6","method":"GET"} []
[2022-07-28T19:58:28.770017+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/register")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/register\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T19:58:29.171439+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T19:58:29.183920+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:29.186680+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:29.203891+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:29.204374+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T19:58:29.216412+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:29.216929+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T19:58:29.218060+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:29.218454+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T19:58:29.220861+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T19:58:29.224393+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T19:58:29.230480+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:29.302863+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T19:58:36.433773+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-28T19:58:36.467067+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T19:58:36.467181+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T19:58:36.467272+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T19:58:36.467342+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T19:58:36.467763+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T19:58:36.630250+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T19:58:39.116937+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"guido.ondricka@dibbert.biz"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"guido.ondricka@dibbert.biz"},"types":{"1":2}} []
[2022-07-28T19:58:39.969432+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T19:58:40.011261+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"guido.ondricka@dibbert.biz","2":"[]","3":null,"4":"$2y$13$fCyTf3WH6ir02Pvr/LvBNelPA.Rv8FU6ncjhPkRMHUb77SaSJ/g4O","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"guido.ondricka@dibbert.biz","2":"[]","3":null,"4":"$2y$13$fCyTf3WH6ir02Pvr/LvBNelPA.Rv8FU6ncjhPkRMHUb77SaSJ/g4O","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T19:58:40.012566+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T19:58:40.644728+02:00] messenger.INFO: Sending message Symfony\Component\Mailer\Messenger\SendEmailMessage with async sender using Symfony\Component\Messenger\Bridge\Doctrine\Transport\DoctrineTransport {"class":"Symfony\\Component\\Mailer\\Messenger\\SendEmailMessage","alias":"async","sender":"Symfony\\Component\\Messenger\\Bridge\\Doctrine\\Transport\\DoctrineTransport"} []
[2022-07-28T19:58:40.705350+02:00] doctrine.DEBUG: Executing statement: INSERT INTO messenger_messages (body, headers, queue_name, created_at, available_at) VALUES(?, ?, ?, ?, ?) (parameters: array{"1":"O:36:\\\"Symfony\\\\Component\\\\Messenger\\\\Envelope\\\":2:{s:44:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0stamps\\\";a:1:{s:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\";a:1:{i:0;O:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\":1:{s:55:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\0busName\\\";s:21:\\\"messenger.bus.default\\\";}}}s:45:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0message\\\";O:51:\\\"Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\\":2:{s:60:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0message\\\";O:39:\\\"Symfony\\\\Bridge\\\\Twig\\\\Mime\\\\TemplatedEmail\\\":4:{i:0;s:41:\\\"registration/confirmation_email.html.twig\\\";i:1;N;i:2;a:3:{s:9:\\\"signedUrl\\\";s:177:\\\"http://192.168.0.167/verify/email?expires=1659034720&id=152&signature=SHfpo9N4GG%2FPmkSsxiDxPt%2BSNQWyUUGg%2BdMQsJqyB7M%3D&token=FgW1lBNOfKlZalxG9g43kenv5H%2BhL0hGWVt6zSya6eU%3D\\\";s:19:\\\"expiresAtMessageKey\\\";s:26:\\\"%count% hour|%count% hours\\\";s:20:\\\"expiresAtMessageData\\\";a:1:{s:7:\\\"%count%\\\";i:1;}}i:3;a:6:{i:0;N;i:1;N;i:2;N;i:3;N;i:4;a:0:{}i:5;a:2:{i:0;O:37:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\\":2:{s:46:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0headers\\\";a:3:{s:4:\\\"from\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:4:\\\"From\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"zstefan290@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:15:\\\"Steve Developer\\\";}}}}s:2:\\\"to\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:2:\\\"To\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:26:\\\"guido.ondricka@dibbert.biz\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:0:\\\"\\\";}}}}s:7:\\\"subject\\\";a:1:{i:0;O:48:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:7:\\\"Subject\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:55:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\0value\\\";s:25:\\\"Please Confirm your Email\\\";}}}s:49:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0lineLength\\\";i:76;}i:1;N;}}}s:61:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0envelope\\\";N;}}","2":"[]","3":"default","4":"2022-07-28 19:58:40","5":"2022-07-28 19:58:40"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO messenger_messages (body, headers, queue_name, created_at, available_at) VALUES(?, ?, ?, ?, ?)","params":{"1":"O:36:\\\"Symfony\\\\Component\\\\Messenger\\\\Envelope\\\":2:{s:44:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0stamps\\\";a:1:{s:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\";a:1:{i:0;O:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\":1:{s:55:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\0busName\\\";s:21:\\\"messenger.bus.default\\\";}}}s:45:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0message\\\";O:51:\\\"Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\\":2:{s:60:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0message\\\";O:39:\\\"Symfony\\\\Bridge\\\\Twig\\\\Mime\\\\TemplatedEmail\\\":4:{i:0;s:41:\\\"registration/confirmation_email.html.twig\\\";i:1;N;i:2;a:3:{s:9:\\\"signedUrl\\\";s:177:\\\"http://192.168.0.167/verify/email?expires=1659034720&id=152&signature=SHfpo9N4GG%2FPmkSsxiDxPt%2BSNQWyUUGg%2BdMQsJqyB7M%3D&token=FgW1lBNOfKlZalxG9g43kenv5H%2BhL0hGWVt6zSya6eU%3D\\\";s:19:\\\"expiresAtMessageKey\\\";s:26:\\\"%count% hour|%count% hours\\\";s:20:\\\"expiresAtMessageData\\\";a:1:{s:7:\\\"%count%\\\";i:1;}}i:3;a:6:{i:0;N;i:1;N;i:2;N;i:3;N;i:4;a:0:{}i:5;a:2:{i:0;O:37:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\\":2:{s:46:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0headers\\\";a:3:{s:4:\\\"from\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:4:\\\"From\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"zstefan290@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:15:\\\"Steve Developer\\\";}}}}s:2:\\\"to\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:2:\\\"To\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:26:\\\"guido.ondricka@dibbert.biz\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:0:\\\"\\\";}}}}s:7:\\\"subject\\\";a:1:{i:0;O:48:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:7:\\\"Subject\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:55:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\0value\\\";s:25:\\\"Please Confirm your Email\\\";}}}s:49:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0lineLength\\\";i:76;}i:1;N;}}}s:61:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0envelope\\\";N;}}","2":"[]","3":"default","4":"2022-07-28 19:58:40","5":"2022-07-28 19:58:40"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2}} []
[2022-07-28T19:58:40.755696+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:40.756591+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:40.762247+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:40.762682+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T19:58:40.774373+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:40.774839+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T19:58:40.775990+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:40.776401+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T19:58:40.778883+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T19:58:40.782184+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T19:58:40.786935+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:40.820260+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T19:58:41.063709+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T19:58:41.086398+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T19:58:41.086509+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T19:58:41.086584+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T19:58:41.086652+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T19:58:41.086725+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T19:58:41.163065+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T19:58:41.605782+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T19:58:41.718347+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:41.719343+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T19:58:41.724719+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:41.725044+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T19:58:41.738527+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:41.739014+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T19:58:41.740122+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:41.740536+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T19:58:41.743070+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T19:58:41.747054+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T19:58:41.751697+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T19:58:41.783413+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T19:58:42.202951+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"80b393"},"request_uri":"http://192.168.0.167/_wdt/80b393","method":"GET"} []
[2022-07-28T20:06:44.537701+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:06:44.669135+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/register" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/register\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/register/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:06:44.823194+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:06:44.837571+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:06:44.843172+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:06:44.868977+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:06:44.869388+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:06:44.883923+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:06:44.884410+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:06:44.885618+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:06:44.885971+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:06:44.888206+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:06:44.893177+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:06:44.902439+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:06:44.974657+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:06:45.351084+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99cc68"},"request_uri":"http://192.168.0.167/_wdt/99cc68","method":"GET"} []
[2022-07-28T20:07:10.183612+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:07:10.277663+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:07:10.292282+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:07:10.292396+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:10.292483+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:10.292554+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:10.292630+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:10.418394+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:07:10.617011+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:10.619723+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:10.626109+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:10.626541+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:07:10.638688+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:10.639128+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:07:10.640270+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:10.640702+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:07:10.642959+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:07:10.646301+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:07:10.652594+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:10.702484+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:07:11.353379+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98b1dd"},"request_uri":"http://192.168.0.167/_wdt/98b1dd","method":"GET"} []
[2022-07-28T20:07:12.171669+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/register")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/register\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:07:12.368414+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:07:12.378650+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:12.381054+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:12.397268+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:12.397643+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:07:12.410901+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:12.411364+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:07:12.412399+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:12.412747+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:07:12.415058+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:07:12.418396+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:07:12.424255+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:12.483836+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:07:19.271377+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-28T20:07:19.304226+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:07:19.304402+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:19.304490+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:19.304557+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:19.305016+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:19.453627+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:07:19.668651+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-28T20:07:19.904481+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:19.905421+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:19.911131+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:19.911509+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:07:19.925346+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:19.925870+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:07:19.927068+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:19.927497+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:07:19.929927+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:07:19.933047+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:07:19.937836+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:19.978403+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:07:20.345536+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"098a38"},"request_uri":"http://192.168.0.167/_wdt/098a38","method":"GET"} []
[2022-07-28T20:07:28.774699+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-28T20:07:28.816049+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:07:28.816163+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:28.816251+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:28.816319+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:28.816821+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:28.983249+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:07:29.102783+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"stee@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"stee@example.com"},"types":{"1":2}} []
[2022-07-28T20:07:29.747945+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T20:07:29.750246+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"stee@example.com","2":"[]","3":null,"4":"$2y$13$/TrFvNSHFXNTJ6Pb6TLyO.Obq70CRwgrvQiADwG08aeXhANfXP2pW","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"stee@example.com","2":"[]","3":null,"4":"$2y$13$/TrFvNSHFXNTJ6Pb6TLyO.Obq70CRwgrvQiADwG08aeXhANfXP2pW","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T20:07:29.751311+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T20:07:29.888216+02:00] security.DEBUG: Remember me skipped: your authenticator does not support it. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:29.894951+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:07:29.911232+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:29.912162+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:29.918284+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:29.918688+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:07:29.930709+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:29.931175+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:07:29.932310+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:29.932707+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:07:29.935064+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:07:29.938463+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:07:29.944196+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:29.978888+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:07:30.213447+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:07:30.236084+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:07:30.236194+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:30.236271+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:07:30.236341+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:30.236417+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:07:30.360015+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:07:30.451619+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:07:30.461432+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":153}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":153},"types":{"1":1}} []
[2022-07-28T20:07:30.469875+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stee@example.com"} []
[2022-07-28T20:07:30.519285+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:07:30.529980+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:30.530882+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:07:30.536452+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:30.536808+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:07:30.548422+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:30.549015+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:07:30.550637+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:30.551051+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:07:30.553438+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:07:30.556436+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:07:30.561031+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:07:30.600757+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:07:30.931642+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"474e73"},"request_uri":"http://192.168.0.167/_wdt/474e73","method":"GET"} []
[2022-07-28T20:28:22.088728+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:28:22.124157+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:28:22.124284+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:28:22.124366+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:28:22.124432+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:28:22.124505+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:28:22.295996+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:28:23.265080+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:28:23.279955+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":153}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":153},"types":{"1":1}} []
[2022-07-28T20:28:23.290059+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stee@example.com"} []
[2022-07-28T20:28:23.343542+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:28:23.356967+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:28:23.357915+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:28:23.364057+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:23.364431+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:28:23.378669+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:23.379446+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:28:23.380780+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:23.381209+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:28:23.383643+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:28:23.387356+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:28:23.393395+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:23.443063+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:28:24.173043+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84b5ee"},"request_uri":"http://192.168.0.167/_wdt/84b5ee","method":"GET"} []
[2022-07-28T20:28:24.648042+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/register")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/register\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:28:24.852789+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:28:24.863235+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:28:24.865809+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:28:24.882798+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:24.883232+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:28:24.894963+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:24.895486+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:28:24.896645+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:24.897051+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:28:24.899545+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:28:24.903057+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:28:24.908836+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:28:24.968760+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:32:04.709314+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:32:04.801408+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:32:04.814886+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:32:04.814982+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:04.815062+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:04.815139+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:04.815218+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:04.911497+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:32:05.014250+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:32:05.028376+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":153}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":153},"types":{"1":1}} []
[2022-07-28T20:32:05.038028+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stee@example.com"} []
[2022-07-28T20:32:05.144668+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:32:05.160213+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:05.161153+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:05.168388+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:05.168812+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:32:05.181066+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:05.181552+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:32:05.182915+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:05.183309+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:32:05.186183+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:32:05.189911+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:32:05.196855+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:05.250522+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:32:05.967776+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"429811"},"request_uri":"http://192.168.0.167/_wdt/429811","method":"GET"} []
[2022-07-28T20:32:06.711894+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/register")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/register\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:32:06.923453+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:32:06.951030+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:06.953690+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:06.970230+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:06.970667+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:32:06.987233+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:06.987698+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:32:06.988756+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:06.989158+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:32:06.991650+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:32:06.995101+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:32:07.000918+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:07.067239+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:32:33.494121+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:32:33.584515+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:32:33.597910+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:32:33.598020+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:33.598098+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:33.598168+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:33.598246+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:33.730460+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:32:33.854472+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:32:33.868594+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":153}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":153},"types":{"1":1}} []
[2022-07-28T20:32:33.878527+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stee@example.com"} []
[2022-07-28T20:32:33.925813+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:32:33.938849+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:33.939689+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:33.945885+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:33.946266+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:32:33.959435+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:33.959916+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:32:33.961144+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:33.961568+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:32:33.963947+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:32:33.967387+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:32:33.973840+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:34.025682+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:32:34.615464+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7de1b"},"request_uri":"http://192.168.0.167/_wdt/c7de1b","method":"GET"} []
[2022-07-28T20:32:35.338906+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/register")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/register\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:32:35.539747+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:32:35.564662+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:35.567180+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:35.584029+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:35.584487+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:32:35.601792+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:35.602311+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:32:35.603574+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:35.604006+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:32:35.606410+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:32:35.609884+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:32:35.615768+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:35.676309+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:32:41.753707+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-28T20:32:41.793420+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:32:41.855816+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:32:41.889367+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":153}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":153},"types":{"1":1}} []
[2022-07-28T20:32:41.898243+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stee@example.com"} []
[2022-07-28T20:32:41.898358+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:32:41.898442+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:41.898528+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:41.898595+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:41.899017+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:42.149791+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"stefyer432@stefy.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"stefyer432@stefy.com"},"types":{"1":2}} []
[2022-07-28T20:32:42.786991+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T20:32:42.788894+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"stefyer432@stefy.com","2":"[]","3":null,"4":"$2y$13$0LdnQ34iXIi.BTuYhp5E9.OwLGoXPtiE6ZK/J5cJAMSX1SZ/UIUCa","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"stefyer432@stefy.com","2":"[]","3":null,"4":"$2y$13$0LdnQ34iXIi.BTuYhp5E9.OwLGoXPtiE6ZK/J5cJAMSX1SZ/UIUCa","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T20:32:42.790159+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T20:32:42.870111+02:00] messenger.INFO: Sending message Symfony\Component\Mailer\Messenger\SendEmailMessage with async sender using Symfony\Component\Messenger\Bridge\Doctrine\Transport\DoctrineTransport {"class":"Symfony\\Component\\Mailer\\Messenger\\SendEmailMessage","alias":"async","sender":"Symfony\\Component\\Messenger\\Bridge\\Doctrine\\Transport\\DoctrineTransport"} []
[2022-07-28T20:32:42.875011+02:00] doctrine.DEBUG: Executing statement: INSERT INTO messenger_messages (body, headers, queue_name, created_at, available_at) VALUES(?, ?, ?, ?, ?) (parameters: array{"1":"O:36:\\\"Symfony\\\\Component\\\\Messenger\\\\Envelope\\\":2:{s:44:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0stamps\\\";a:1:{s:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\";a:1:{i:0;O:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\":1:{s:55:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\0busName\\\";s:21:\\\"messenger.bus.default\\\";}}}s:45:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0message\\\";O:51:\\\"Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\\":2:{s:60:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0message\\\";O:39:\\\"Symfony\\\\Bridge\\\\Twig\\\\Mime\\\\TemplatedEmail\\\":4:{i:0;s:41:\\\"registration/confirmation_email.html.twig\\\";i:1;N;i:2;a:3:{s:9:\\\"signedUrl\\\";s:179:\\\"http://192.168.0.167/verify/email?expires=1659036762&id=154&signature=%2BVWAFu%2F8ykPiAY77xffygF1UPm727RuclW0o2v2vcZ4%3D&token=eIZgQkzjVP33xQkidXTxWubEO%2FIn%2BmlHKO8aPhHna%2Bg%3D\\\";s:19:\\\"expiresAtMessageKey\\\";s:26:\\\"%count% hour|%count% hours\\\";s:20:\\\"expiresAtMessageData\\\";a:1:{s:7:\\\"%count%\\\";i:1;}}i:3;a:6:{i:0;N;i:1;N;i:2;N;i:3;N;i:4;a:0:{}i:5;a:2:{i:0;O:37:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\\":2:{s:46:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0headers\\\";a:3:{s:4:\\\"from\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:4:\\\"From\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"zstefan290@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:15:\\\"Steve Developer\\\";}}}}s:2:\\\"to\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:2:\\\"To\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"stefyer432@stefy.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:0:\\\"\\\";}}}}s:7:\\\"subject\\\";a:1:{i:0;O:48:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:7:\\\"Subject\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:55:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\0value\\\";s:25:\\\"Please Confirm your Email\\\";}}}s:49:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0lineLength\\\";i:76;}i:1;N;}}}s:61:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0envelope\\\";N;}}","2":"[]","3":"default","4":"2022-07-28 20:32:42","5":"2022-07-28 20:32:42"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO messenger_messages (body, headers, queue_name, created_at, available_at) VALUES(?, ?, ?, ?, ?)","params":{"1":"O:36:\\\"Symfony\\\\Component\\\\Messenger\\\\Envelope\\\":2:{s:44:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0stamps\\\";a:1:{s:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\";a:1:{i:0;O:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\":1:{s:55:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\0busName\\\";s:21:\\\"messenger.bus.default\\\";}}}s:45:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0message\\\";O:51:\\\"Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\\":2:{s:60:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0message\\\";O:39:\\\"Symfony\\\\Bridge\\\\Twig\\\\Mime\\\\TemplatedEmail\\\":4:{i:0;s:41:\\\"registration/confirmation_email.html.twig\\\";i:1;N;i:2;a:3:{s:9:\\\"signedUrl\\\";s:179:\\\"http://192.168.0.167/verify/email?expires=1659036762&id=154&signature=%2BVWAFu%2F8ykPiAY77xffygF1UPm727RuclW0o2v2vcZ4%3D&token=eIZgQkzjVP33xQkidXTxWubEO%2FIn%2BmlHKO8aPhHna%2Bg%3D\\\";s:19:\\\"expiresAtMessageKey\\\";s:26:\\\"%count% hour|%count% hours\\\";s:20:\\\"expiresAtMessageData\\\";a:1:{s:7:\\\"%count%\\\";i:1;}}i:3;a:6:{i:0;N;i:1;N;i:2;N;i:3;N;i:4;a:0:{}i:5;a:2:{i:0;O:37:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\\":2:{s:46:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0headers\\\";a:3:{s:4:\\\"from\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:4:\\\"From\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"zstefan290@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:15:\\\"Steve Developer\\\";}}}}s:2:\\\"to\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:2:\\\"To\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"stefyer432@stefy.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:0:\\\"\\\";}}}}s:7:\\\"subject\\\";a:1:{i:0;O:48:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:7:\\\"Subject\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:55:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\0value\\\";s:25:\\\"Please Confirm your Email\\\";}}}s:49:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0lineLength\\\";i:76;}i:1;N;}}}s:61:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0envelope\\\";N;}}","2":"[]","3":"default","4":"2022-07-28 20:32:42","5":"2022-07-28 20:32:42"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2}} []
[2022-07-28T20:32:42.886939+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:32:42.899864+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:42.900811+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:42.906381+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:42.906710+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:32:42.918324+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:42.918845+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:32:42.920044+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:42.920444+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:32:42.922879+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:32:42.925989+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:32:42.930696+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:42.962698+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:32:43.201353+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:32:43.223970+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:32:43.224079+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:43.224154+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:32:43.224221+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:43.224295+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:32:43.300931+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:32:43.380082+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:32:43.427626+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:32:43.435529+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":153}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":153},"types":{"1":1}} []
[2022-07-28T20:32:43.436783+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stee@example.com"} []
[2022-07-28T20:32:43.452066+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:32:43.461970+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:43.462883+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:32:43.468319+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:43.468645+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:32:43.481288+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:43.481772+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:32:43.482993+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:43.483411+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:32:43.486029+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:32:43.489239+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:32:43.493778+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:32:43.524567+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:32:43.957135+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3738c6"},"request_uri":"http://192.168.0.167/_wdt/3738c6","method":"GET"} []
[2022-07-28T20:36:16.637130+02:00] request.INFO: Matched route "app_logout". {"route":"app_logout","route_parameters":{"_route":"app_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"http://192.168.0.167/logout","method":"GET"} []
[2022-07-28T20:36:16.670425+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:16.670545+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:16.670625+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:16.670697+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:16.670777+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:16.707419+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:36:16.793374+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:16.817602+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":153}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":153},"types":{"1":1}} []
[2022-07-28T20:36:16.839480+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stee@example.com"} []
[2022-07-28T20:36:16.846846+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T20:36:16.894755+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:16.895724+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:16.902016+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:16.902411+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:16.916034+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:16.916562+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:16.917707+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:16.918113+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:16.920509+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:16.924066+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:16.930039+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:16.960687+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:17.196060+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:36:17.219689+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:17.219807+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:17.219885+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:17.219956+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:17.220033+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:17.306985+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:17.351129+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:36:17.420430+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:17.421321+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:17.426827+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:17.427278+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:17.438353+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:17.438774+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:17.439935+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:17.440259+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:17.442633+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:17.445844+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:17.450335+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:17.490085+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:17.845218+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d89d1f"},"request_uri":"http://192.168.0.167/_wdt/d89d1f","method":"GET"} []
[2022-07-28T20:36:19.413181+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-28T20:36:19.436226+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:19.436343+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:19.436423+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:19.436496+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:19.436574+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:19.556678+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:19.588794+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:19.591073+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:19.605016+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:19.605571+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:19.617115+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:19.617619+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:19.618886+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:19.619317+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:19.621728+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:19.624820+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:19.629378+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:19.661783+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:20.009209+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a882ab"},"request_uri":"http://192.168.0.167/_wdt/a882ab","method":"GET"} []
[2022-07-28T20:36:23.446918+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-28T20:36:23.477292+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:23.477480+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:23.477611+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:23.478031+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:23.646937+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:23.677286+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-28T20:36:24.336590+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"abraca_admin@example.com\", roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:24.348424+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T20:36:24.349334+02:00] security.DEBUG: Remember-me was requested; setting cookie. [] []
[2022-07-28T20:36:24.364385+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:24.384787+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:36:24.398383+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:24.399329+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:24.404860+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.405233+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:24.416710+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.417202+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:24.418424+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.418842+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:24.421241+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:24.424485+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:24.429121+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.452737+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:24.697012+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:36:24.722203+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:24.722317+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:24.722392+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:24.722459+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:24.722532+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T20:36:24.797467+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:24.854965+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:36:24.903991+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:36:24.912013+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":130}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":130},"types":{"1":1}} []
[2022-07-28T20:36:24.913302+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T20:36:24.914287+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:24.929731+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:36:24.939728+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:24.940606+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:24.946129+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.946478+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:24.953128+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.953578+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:24.954813+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.955187+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:24.957444+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:24.960456+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:24.965071+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:24.997900+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:25.352795+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d4a98"},"request_uri":"http://192.168.0.167/_wdt/3d4a98","method":"GET"} []
[2022-07-28T20:36:30.698966+02:00] request.INFO: Matched route "app_logout". {"route":"app_logout","route_parameters":{"_route":"app_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"http://192.168.0.167/logout","method":"GET"} []
[2022-07-28T20:36:30.721053+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:30.721157+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:30.721253+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:30.721416+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:30.721495+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T20:36:30.734582+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:36:30.794556+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:30.834975+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":130}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":130},"types":{"1":1}} []
[2022-07-28T20:36:30.843485+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T20:36:30.844383+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:30.850061+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T20:36:30.884231+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:30.885164+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:30.890513+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:30.890880+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:30.903588+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:30.904098+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:30.905328+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:30.905704+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:30.907991+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:30.911004+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:30.915544+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:30.942165+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:31.171010+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:36:31.192772+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:31.192894+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:31.192969+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:31.193037+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:31.193109+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:31.266449+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:31.315624+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:36:31.382124+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:31.383054+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:31.388384+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:31.388717+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:31.401354+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:31.401808+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:31.403028+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:31.403398+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:31.405815+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:31.409096+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:31.413732+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:31.443476+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:31.812190+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41fa64"},"request_uri":"http://192.168.0.167/_wdt/41fa64","method":"GET"} []
[2022-07-28T20:36:32.967087+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:36:32.989684+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:32.989796+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:32.989874+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:32.989942+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:32.990017+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:33.141166+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:33.291264+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:33.293694+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:33.300012+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:33.300481+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:33.312504+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:33.312970+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:33.314101+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:33.314462+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:33.316855+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:33.320150+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:33.324823+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:33.363158+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:33.721709+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3fb60"},"request_uri":"http://192.168.0.167/_wdt/e3fb60","method":"GET"} []
[2022-07-28T20:36:37.940081+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-28T20:36:37.969064+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:37.969176+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:37.969265+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:37.969354+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:37.969712+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:38.099086+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:38.211542+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"stefy.zaharia@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"stefy.zaharia@gmail.com"},"types":{"1":2}} []
[2022-07-28T20:36:38.848738+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T20:36:38.850667+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"stefy.zaharia@gmail.com","2":"[]","3":null,"4":"$2y$13$1tNLis.etOzPZyaukKgN/Oc2gVlhUeDPu4OpOuv7ukhzFi4g5fOCK","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"stefy.zaharia@gmail.com","2":"[]","3":null,"4":"$2y$13$1tNLis.etOzPZyaukKgN/Oc2gVlhUeDPu4OpOuv7ukhzFi4g5fOCK","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T20:36:38.851194+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T20:36:38.924934+02:00] messenger.INFO: Sending message Symfony\Component\Mailer\Messenger\SendEmailMessage with async sender using Symfony\Component\Messenger\Bridge\Doctrine\Transport\DoctrineTransport {"class":"Symfony\\Component\\Mailer\\Messenger\\SendEmailMessage","alias":"async","sender":"Symfony\\Component\\Messenger\\Bridge\\Doctrine\\Transport\\DoctrineTransport"} []
[2022-07-28T20:36:38.928676+02:00] doctrine.DEBUG: Executing statement: INSERT INTO messenger_messages (body, headers, queue_name, created_at, available_at) VALUES(?, ?, ?, ?, ?) (parameters: array{"1":"O:36:\\\"Symfony\\\\Component\\\\Messenger\\\\Envelope\\\":2:{s:44:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0stamps\\\";a:1:{s:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\";a:1:{i:0;O:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\":1:{s:55:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\0busName\\\";s:21:\\\"messenger.bus.default\\\";}}}s:45:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0message\\\";O:51:\\\"Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\\":2:{s:60:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0message\\\";O:39:\\\"Symfony\\\\Bridge\\\\Twig\\\\Mime\\\\TemplatedEmail\\\":4:{i:0;s:41:\\\"registration/confirmation_email.html.twig\\\";i:1;N;i:2;a:3:{s:9:\\\"signedUrl\\\";s:175:\\\"http://192.168.0.167/verify/email?expires=1659036998&id=155&signature=CHpgBWePIxN030MC6%2Bma4SNszr32RbYWCikjYM9VDrY%3D&token=2nla2ePzZ%2FDTRUUkiH%2FWCPfKA3L91V7XAHgxjJ2e6nc%3D\\\";s:19:\\\"expiresAtMessageKey\\\";s:26:\\\"%count% hour|%count% hours\\\";s:20:\\\"expiresAtMessageData\\\";a:1:{s:7:\\\"%count%\\\";i:1;}}i:3;a:6:{i:0;N;i:1;N;i:2;N;i:3;N;i:4;a:0:{}i:5;a:2:{i:0;O:37:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\\":2:{s:46:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0headers\\\";a:3:{s:4:\\\"from\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:4:\\\"From\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"zstefan290@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:15:\\\"Steve Developer\\\";}}}}s:2:\\\"to\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:2:\\\"To\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:23:\\\"stefy.zaharia@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:0:\\\"\\\";}}}}s:7:\\\"subject\\\";a:1:{i:0;O:48:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:7:\\\"Subject\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:55:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\0value\\\";s:25:\\\"Please Confirm your Email\\\";}}}s:49:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0lineLength\\\";i:76;}i:1;N;}}}s:61:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0envelope\\\";N;}}","2":"[]","3":"default","4":"2022-07-28 20:36:38","5":"2022-07-28 20:36:38"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO messenger_messages (body, headers, queue_name, created_at, available_at) VALUES(?, ?, ?, ?, ?)","params":{"1":"O:36:\\\"Symfony\\\\Component\\\\Messenger\\\\Envelope\\\":2:{s:44:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0stamps\\\";a:1:{s:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\";a:1:{i:0;O:46:\\\"Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\\":1:{s:55:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Stamp\\\\BusNameStamp\\0busName\\\";s:21:\\\"messenger.bus.default\\\";}}}s:45:\\\"\\0Symfony\\\\Component\\\\Messenger\\\\Envelope\\0message\\\";O:51:\\\"Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\\":2:{s:60:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0message\\\";O:39:\\\"Symfony\\\\Bridge\\\\Twig\\\\Mime\\\\TemplatedEmail\\\":4:{i:0;s:41:\\\"registration/confirmation_email.html.twig\\\";i:1;N;i:2;a:3:{s:9:\\\"signedUrl\\\";s:175:\\\"http://192.168.0.167/verify/email?expires=1659036998&id=155&signature=CHpgBWePIxN030MC6%2Bma4SNszr32RbYWCikjYM9VDrY%3D&token=2nla2ePzZ%2FDTRUUkiH%2FWCPfKA3L91V7XAHgxjJ2e6nc%3D\\\";s:19:\\\"expiresAtMessageKey\\\";s:26:\\\"%count% hour|%count% hours\\\";s:20:\\\"expiresAtMessageData\\\";a:1:{s:7:\\\"%count%\\\";i:1;}}i:3;a:6:{i:0;N;i:1;N;i:2;N;i:3;N;i:4;a:0:{}i:5;a:2:{i:0;O:37:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\\":2:{s:46:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0headers\\\";a:3:{s:4:\\\"from\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:4:\\\"From\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:20:\\\"zstefan290@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:15:\\\"Steve Developer\\\";}}}}s:2:\\\"to\\\";a:1:{i:0;O:47:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:2:\\\"To\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:58:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\MailboxListHeader\\0addresses\\\";a:1:{i:0;O:30:\\\"Symfony\\\\Component\\\\Mime\\\\Address\\\":2:{s:39:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0address\\\";s:23:\\\"stefy.zaharia@gmail.com\\\";s:36:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Address\\0name\\\";s:0:\\\"\\\";}}}}s:7:\\\"subject\\\";a:1:{i:0;O:48:\\\"Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\\":5:{s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0name\\\";s:7:\\\"Subject\\\";s:56:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lineLength\\\";i:76;s:50:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0lang\\\";N;s:53:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\AbstractHeader\\0charset\\\";s:5:\\\"utf-8\\\";s:55:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\UnstructuredHeader\\0value\\\";s:25:\\\"Please Confirm your Email\\\";}}}s:49:\\\"\\0Symfony\\\\Component\\\\Mime\\\\Header\\\\Headers\\0lineLength\\\";i:76;}i:1;N;}}}s:61:\\\"\\0Symfony\\\\Component\\\\Mailer\\\\Messenger\\\\SendEmailMessage\\0envelope\\\";N;}}","2":"[]","3":"default","4":"2022-07-28 20:36:38","5":"2022-07-28 20:36:38"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2}} []
[2022-07-28T20:36:38.952727+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:38.953608+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:38.959008+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:38.959356+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:38.970670+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:38.971162+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:38.972386+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:38.972913+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:38.975440+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:38.978612+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:38.983240+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:39.014300+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:39.250041+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:36:39.272221+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:39.272332+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:39.272409+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:39.272480+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:39.272556+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:39.346796+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:39.408970+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:36:39.476628+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:39.477501+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:39.482966+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:39.483331+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:39.493832+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:39.494279+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:39.495307+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:39.495664+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:39.497981+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:39.501128+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:39.505641+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:39.536267+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:39.922220+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd4187"},"request_uri":"http://192.168.0.167/_wdt/fd4187","method":"GET"} []
[2022-07-28T20:36:46.711755+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-28T20:36:46.741445+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:46.741550+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:46.741625+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:46.741693+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:46.741766+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:46.874446+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:46.905645+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:46.908172+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:46.924878+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:46.925340+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:46.938120+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:46.938629+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:46.939946+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:46.940365+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:46.942757+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:46.946204+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:46.952061+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:46.992111+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:47.334794+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc7d51"},"request_uri":"http://192.168.0.167/_wdt/fc7d51","method":"GET"} []
[2022-07-28T20:36:50.130722+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-28T20:36:50.159700+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:50.159835+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:50.159924+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:50.160271+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:50.233576+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:50.277542+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-28T20:36:50.918417+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"abraca_admin@example.com\", roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:50.929611+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T20:36:50.930626+02:00] security.DEBUG: Remember-me was requested; setting cookie. [] []
[2022-07-28T20:36:50.931623+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:50.950949+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:36:50.964837+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:50.965758+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:50.971313+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:50.971704+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:50.983608+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:50.984114+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:50.985327+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:50.985736+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:50.988251+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:50.991476+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:50.995986+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:51.020286+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:51.259375+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:36:51.282774+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:51.282885+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:51.282961+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:51.283029+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:51.283101+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T20:36:51.360012+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:51.421474+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:36:51.466719+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:36:51.474944+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":130}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":130},"types":{"1":1}} []
[2022-07-28T20:36:51.476120+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T20:36:51.476991+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:51.491774+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:36:51.501788+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:51.502656+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:51.508030+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:51.508631+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:51.521562+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:51.522031+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:51.523032+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:51.523384+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:51.525739+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:51.528860+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:51.533519+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:51.564941+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:51.958452+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6baaad"},"request_uri":"http://192.168.0.167/_wdt/6baaad","method":"GET"} []
[2022-07-28T20:36:55.943482+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"ut-similique-amet-molestias-nisi-qui"},"request_uri":"http://192.168.0.167/product-page/ut-similique-amet-molestias-nisi-qui","method":"GET"} []
[2022-07-28T20:36:55.965880+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:36:55.965989+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:55.966071+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:36:55.966153+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:55.966226+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T20:36:56.040498+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:36:56.172064+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%ut-similique-amet-molestias-nisi-qui%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%ut-similique-amet-molestias-nisi-qui%"},"types":{"1":2}} []
[2022-07-28T20:36:56.223426+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:36:56.229433+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":130}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":130},"types":{"1":1}} []
[2022-07-28T20:36:56.230635+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T20:36:56.231718+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:36:56.249789+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T20:36:56.259198+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:56.260089+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:36:56.265603+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:56.265953+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:36:56.277379+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:56.277838+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:36:56.278965+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:56.279295+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:36:56.281626+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:36:56.284745+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:36:56.289273+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:36:56.321512+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:36:56.667343+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"05694e"},"request_uri":"http://192.168.0.167/_wdt/05694e","method":"GET"} []
[2022-07-28T20:55:14.844506+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:55:14.966327+02:00] request.INFO: Matched route "app_logout". {"route":"app_logout","route_parameters":{"_route":"app_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"http://192.168.0.167/logout","method":"GET"} []
[2022-07-28T20:55:14.981937+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:55:14.982053+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:14.982131+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:14.982201+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:14.982278+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T20:55:14.997822+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T20:55:15.049544+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:55:15.084508+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":130}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":130},"types":{"1":1}} []
[2022-07-28T20:55:15.098640+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T20:55:15.100282+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:15.106175+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T20:55:15.153002+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:15.154267+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:15.162731+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:15.163106+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:55:15.178567+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:15.179014+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:55:15.180279+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:15.180658+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:55:15.183055+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:55:15.187973+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:55:15.199506+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:15.251567+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:55:15.605875+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:55:15.639566+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:55:15.639694+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:15.639780+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:15.639854+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:15.639935+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:15.746237+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:55:15.820987+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:55:16.054243+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:16.055133+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:16.061208+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:16.061585+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:55:16.074138+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:16.074625+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:55:16.075771+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:16.076114+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:55:16.078452+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:55:16.082076+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:55:16.088112+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:16.135359+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:55:16.655543+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b3350"},"request_uri":"http://192.168.0.167/_wdt/6b3350","method":"GET"} []
[2022-07-28T20:55:19.156159+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:55:19.190777+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:55:19.190895+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:19.190988+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:19.191060+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:19.191152+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:19.382657+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:55:19.494384+02:00] php.CRITICAL: Uncaught Error: SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\xampp\htdocs\ecommerce\tablouri\src\Controller\RegistrationController.php on line 66 {"exception":"[object] (TypeError(code: 0): SymfonyCasts\\Bundle\\VerifyEmail\\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\RegistrationController.php on line 66 at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfonycasts\\verify-email-bundle\\src\\VerifyEmailHelper.php:49)"} []
[2022-07-28T20:55:19.507364+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\xampp\htdocs\ecommerce\tablouri\src\Controller\RegistrationController.php on line 66" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfonycasts\verify-email-bundle\src\VerifyEmailHelper.php line 49 {"exception":"[object] (TypeError(code: 0): SymfonyCasts\\Bundle\\VerifyEmail\\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\RegistrationController.php on line 66 at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfonycasts\\verify-email-bundle\\src\\VerifyEmailHelper.php:49)"} []
[2022-07-28T20:55:19.608873+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:19.611568+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:19.617261+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:19.617687+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:55:19.630162+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:19.630653+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:55:19.631859+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:19.632250+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:55:19.634797+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:55:19.638086+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:55:19.642686+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:19.697476+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:55:20.138356+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"687629"},"request_uri":"http://192.168.0.167/_wdt/687629","method":"GET"} []
[2022-07-28T20:55:45.116689+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:55:45.150289+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:55:45.150405+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:45.150483+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:55:45.150554+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:45.150632+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:55:45.344347+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:55:45.420267+02:00] php.CRITICAL: Uncaught Error: SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\xampp\htdocs\ecommerce\tablouri\src\Controller\RegistrationController.php on line 66 {"exception":"[object] (TypeError(code: 0): SymfonyCasts\\Bundle\\VerifyEmail\\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\RegistrationController.php on line 66 at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfonycasts\\verify-email-bundle\\src\\VerifyEmailHelper.php:49)"} []
[2022-07-28T20:55:45.438046+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\xampp\htdocs\ecommerce\tablouri\src\Controller\RegistrationController.php on line 66" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfonycasts\verify-email-bundle\src\VerifyEmailHelper.php line 49 {"exception":"[object] (TypeError(code: 0): SymfonyCasts\\Bundle\\VerifyEmail\\VerifyEmailHelper::generateSignature(): Argument #2 ($userId) must be of type string, null given, called in C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\RegistrationController.php on line 66 at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfonycasts\\verify-email-bundle\\src\\VerifyEmailHelper.php:49)"} []
[2022-07-28T20:55:45.557580+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:45.560457+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:55:45.566847+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:45.567298+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:55:45.581966+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:45.582512+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:55:45.583632+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:45.584033+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:55:45.586487+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:55:45.590249+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:55:45.596384+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:55:45.671009+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:55:46.098571+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"02186b"},"request_uri":"http://192.168.0.167/_wdt/02186b","method":"GET"} []
[2022-07-28T20:56:41.445769+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:56:41.592561+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-28T20:56:41.606239+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:56:41.606370+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:56:41.606481+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:56:41.606560+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:56:41.606661+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:56:41.711659+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:56:41.903360+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:56:41.906243+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:56:41.912613+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:41.913000+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:56:41.925492+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:41.926009+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:56:41.927247+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:41.927609+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:56:41.929972+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:56:41.933521+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:56:41.940403+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:41.994725+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:56:42.691824+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab5bcd"},"request_uri":"http://192.168.0.167/_wdt/ab5bcd","method":"GET"} []
[2022-07-28T20:56:43.430912+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/register")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/register\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:56:43.645527+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:56:43.657044+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:56:43.659639+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:56:43.678420+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:43.678902+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:56:43.692006+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:43.692503+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:56:43.693668+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:43.694060+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:56:43.696727+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:56:43.700355+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:56:43.706997+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:43.768979+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:56:53.203399+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-28T20:56:53.245363+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:56:53.245480+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:56:53.245579+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:56:53.245663+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:56:53.246125+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:56:53.433486+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:56:53.628121+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"stefyasda@stefy.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"stefyasda@stefy.com"},"types":{"1":2}} []
[2022-07-28T20:56:54.285601+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Controller\RegistrationController::getDoctrine() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Controller\\RegistrationController::getDoctrine() at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\RegistrationController.php:38)"} []
[2022-07-28T20:56:54.314881+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "getDoctrine" of class "App\Controller\RegistrationController"." at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\RegistrationController.php line 38 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"getDoctrine\" of class \"App\\Controller\\RegistrationController\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\RegistrationController.php:38)"} []
[2022-07-28T20:56:54.396808+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:56:54.397734+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:56:54.403432+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:54.403926+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:56:54.415743+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:54.416363+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:56:54.418078+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:54.418486+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:56:54.421255+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:56:54.424477+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:56:54.429351+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:56:54.501624+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:56:54.793195+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4b4d64"},"request_uri":"http://192.168.0.167/_wdt/4b4d64","method":"GET"} []
[2022-07-28T20:57:40.896909+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:57:40.994466+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-28T20:57:41.010186+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:57:41.010312+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:57:41.010406+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:57:41.010494+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:57:41.010911+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:57:41.112685+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:57:41.313917+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"stefyasda@stefy.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"stefyasda@stefy.com"},"types":{"1":2}} []
[2022-07-28T20:57:41.976231+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T20:57:41.978788+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"stefyasda@stefy.com","2":"[]","3":null,"4":"$2y$13$Gxrt5ryL6rDbY4BYXvLt7eAm2cORMpHLNuVJ4z1t3lnf6.nU/1gSG","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"stefyasda@stefy.com","2":"[]","3":null,"4":"$2y$13$Gxrt5ryL6rDbY4BYXvLt7eAm2cORMpHLNuVJ4z1t3lnf6.nU/1gSG","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T20:57:41.980586+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T20:57:42.024160+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:42.025133+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:42.031478+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.031874+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:57:42.043931+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.044378+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:57:42.045488+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.045874+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:57:42.048968+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:57:42.052622+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:57:42.059605+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.102856+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:57:42.451430+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:57:42.494008+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:57:42.494122+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:57:42.494199+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:57:42.494269+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:57:42.494345+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:57:42.597245+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:57:42.669711+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:57:42.763307+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:42.764241+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:42.770388+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.770879+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:57:42.781614+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.782073+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:57:42.783242+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.783637+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:57:42.786358+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:57:42.789776+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:57:42.795677+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:42.836873+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:57:43.502573+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d1643"},"request_uri":"http://192.168.0.167/_wdt/1d1643","method":"GET"} []
[2022-07-28T20:57:44.231459+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:57:44.425228+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:57:44.445036+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:44.447425+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:44.461969+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:44.462419+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:57:44.476371+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:44.476819+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:57:44.477890+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:44.478220+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:57:44.480447+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:57:44.483446+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:57:44.488242+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:44.543481+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:57:57.386434+02:00] request.INFO: Matched route "app_verify_email". {"route":"app_verify_email","route_parameters":{"_route":"app_verify_email","_controller":"App\\Controller\\RegistrationController::verifyUserEmail"},"request_uri":"http://192.168.0.167/verify?expires=1659038261&id=156&signature=szHwT79PiKTnMYE6NjrINHbeTWVl0rcMYRy6F0S%2BKOs%3D&token=4zleMFre5vGImV8AMIxCHBv8isgwiajBtUGUx3K41eI%3D","method":"GET"} []
[2022-07-28T20:57:57.420052+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:57:57.420179+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:57:57.420368+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:57:57.420446+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:57:57.420528+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:57:57.488051+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\ControllerDoesNotReturnResponseException: "The controller must return a "Symfony\Component\HttpFoundation\Response" object but it returned null. Did you forget to add a return statement somewhere in your controller?" at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\RegistrationController.php line 68 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\ControllerDoesNotReturnResponseException(code: 0): The controller must return a \"Symfony\\Component\\HttpFoundation\\Response\" object but it returned null. Did you forget to add a return statement somewhere in your controller? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\RegistrationController.php:68)"} []
[2022-07-28T20:57:57.636789+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:57:57.664808+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:57.667612+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:57:57.684996+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:57.685504+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:57:57.700060+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:57.700517+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:57:57.701783+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:57.702135+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:57:57.704713+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:57:57.708245+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:57:57.714195+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:57:57.780139+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:57:58.054234+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36df3b"},"request_uri":"http://192.168.0.167/_wdt/36df3b","method":"GET"} []
[2022-07-28T20:59:09.264477+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T20:59:09.360443+02:00] request.INFO: Matched route "app_verify_email". {"route":"app_verify_email","route_parameters":{"_route":"app_verify_email","_controller":"App\\Controller\\RegistrationController::verifyUserEmail"},"request_uri":"http://192.168.0.167/verify?expires=1659038261&id=156&signature=szHwT79PiKTnMYE6NjrINHbeTWVl0rcMYRy6F0S%2BKOs%3D&token=4zleMFre5vGImV8AMIxCHBv8isgwiajBtUGUx3K41eI%3D","method":"GET"} []
[2022-07-28T20:59:09.374357+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:59:09.374465+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:59:09.374630+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:59:09.374703+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:59:09.374780+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:59:09.426532+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:59:09.448688+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"156"}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":"156"},"types":{"1":1}} []
[2022-07-28T20:59:09.463007+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T20:59:09.464046+02:00] doctrine.DEBUG: Executing statement: UPDATE user SET is_verified = ? WHERE id = ? (parameters: array{"1":1,"2":156}, types: array{"1":5,"2":1}) {"sql":"UPDATE user SET is_verified = ? WHERE id = ?","params":{"1":1,"2":156},"types":{"1":5,"2":1}} []
[2022-07-28T20:59:09.467753+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T20:59:09.528625+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:09.529567+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:09.536366+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:09.536844+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:59:09.550728+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:09.551209+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:59:09.552640+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:09.553060+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:59:09.555638+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:59:09.560632+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:59:09.568193+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:09.600382+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:59:09.950152+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-28T20:59:09.985539+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:59:09.985653+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:59:09.985729+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:59:09.985797+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:59:09.985871+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:59:10.134302+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:59:10.145120+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:10.147794+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:10.164559+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:10.165033+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:59:10.179095+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:10.179582+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:59:10.180717+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:10.181024+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:59:10.183651+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:59:10.187469+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:59:10.193486+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:10.235885+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:59:10.837118+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a45a50"},"request_uri":"http://192.168.0.167/_wdt/a45a50","method":"GET"} []
[2022-07-28T20:59:11.598023+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/login")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/login\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T20:59:11.790942+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:59:11.815784+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:11.818289+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:11.831945+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:11.832435+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:59:11.843579+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:11.844054+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:59:11.845255+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:11.845616+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:59:11.848055+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:59:11.851491+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:59:11.857501+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:11.910602+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:59:16.633629+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T20:59:16.656775+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T20:59:16.656904+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:59:16.656982+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T20:59:16.657053+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:59:16.657130+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T20:59:16.739340+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T20:59:16.787332+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T20:59:16.858950+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:16.859814+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T20:59:16.865270+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:16.865757+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T20:59:16.880658+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:16.881151+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T20:59:16.883245+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:16.883650+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T20:59:16.885982+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T20:59:16.889238+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T20:59:16.894542+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T20:59:16.927858+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T20:59:17.319541+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66dd20"},"request_uri":"http://192.168.0.167/_wdt/66dd20","method":"GET"} []
[2022-07-28T21:05:51.853530+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:06:03.653909+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:06:03.688014+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-28T21:06:03.688127+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:06:03.688208+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:06:03.688378+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:06:03.688460+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:06:03.795427+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:06:03.846676+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:06:03.946042+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:06:03.947332+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:06:03.953565+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:03.953941+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:06:03.966219+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:03.966900+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:06:03.969112+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:03.969536+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:06:03.972328+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:06:03.976170+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:06:03.984781+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:04.027506+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:06:04.476315+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f6e980"},"request_uri":"http://192.168.0.167/_wdt/f6e980","method":"GET"} []
[2022-07-28T21:06:05.239976+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T21:06:05.481548+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:06:05.517515+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:06:05.520087+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:06:05.537268+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:05.537744+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:06:05.551019+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:05.551550+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:06:05.553037+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:05.553467+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:06:05.555910+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:06:05.559902+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:06:05.565979+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:06:05.635705+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:17:40.813592+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:28:33.464005+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:31:05.809505+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:31:05.824138+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:05.830764+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:05.834575+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:05.837502+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:05.878517+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:05.919152+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:31:15.073589+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:31:15.084573+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:16.565128+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:16.597986+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2022-07-28T21:31:16.632462+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:31:16.635974+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:31:16.636419+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:31:16.649097+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T21:31:16.703030+02:00] doctrine.DEBUG: Executing query: CREATE TABLE comment (id INT AUTO_INCREMENT NOT NULL, content VARCHAR(255) DEFAULT NULL, added_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', updated_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', deleted_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE comment (id INT AUTO_INCREMENT NOT NULL, content VARCHAR(255) DEFAULT NULL, added_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', updated_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', deleted_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2022-07-28T21:31:16.721060+02:00] doctrine.DEBUG: Executing query: CREATE TABLE comment_user (comment_id INT NOT NULL, user_id INT NOT NULL, INDEX IDX_ABA574A5F8697D13 (comment_id), INDEX IDX_ABA574A5A76ED395 (user_id), PRIMARY KEY(comment_id, user_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE comment_user (comment_id INT NOT NULL, user_id INT NOT NULL, INDEX IDX_ABA574A5F8697D13 (comment_id), INDEX IDX_ABA574A5A76ED395 (user_id), PRIMARY KEY(comment_id, user_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2022-07-28T21:31:16.742956+02:00] doctrine.DEBUG: Executing query: CREATE TABLE product (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, description LONGTEXT DEFAULT NULL, added_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', updated_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', deleted_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', slug VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE product (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, description LONGTEXT DEFAULT NULL, added_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', updated_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', deleted_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', slug VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2022-07-28T21:31:16.762507+02:00] doctrine.DEBUG: Executing query: CREATE TABLE product_comment (product_id INT NOT NULL, comment_id INT NOT NULL, INDEX IDX_45AD49DC4584665A (product_id), INDEX IDX_45AD49DCF8697D13 (comment_id), PRIMARY KEY(product_id, comment_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE product_comment (product_id INT NOT NULL, comment_id INT NOT NULL, INDEX IDX_45AD49DC4584665A (product_id), INDEX IDX_45AD49DCF8697D13 (comment_id), PRIMARY KEY(product_id, comment_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2022-07-28T21:31:16.783997+02:00] doctrine.DEBUG: Executing query: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:json)', first_name VARCHAR(255) DEFAULT NULL, password VARCHAR(255) NOT NULL, is_verified TINYINT(1) NOT NULL, UNIQUE INDEX UNIQ_8D93D649E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:json)', first_name VARCHAR(255) DEFAULT NULL, password VARCHAR(255) NOT NULL, is_verified TINYINT(1) NOT NULL, UNIQUE INDEX UNIQ_8D93D649E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2022-07-28T21:31:16.808668+02:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL, available_at DATETIME NOT NULL, delivered_at DATETIME DEFAULT NULL, INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL, available_at DATETIME NOT NULL, delivered_at DATETIME DEFAULT NULL, INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2022-07-28T21:31:16.831675+02:00] doctrine.DEBUG: Executing query: ALTER TABLE comment_user ADD CONSTRAINT FK_ABA574A5F8697D13 FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE {"sql":"ALTER TABLE comment_user ADD CONSTRAINT FK_ABA574A5F8697D13 FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE"} []
[2022-07-28T21:31:16.886202+02:00] doctrine.DEBUG: Executing query: ALTER TABLE comment_user ADD CONSTRAINT FK_ABA574A5A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE {"sql":"ALTER TABLE comment_user ADD CONSTRAINT FK_ABA574A5A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE"} []
[2022-07-28T21:31:16.929575+02:00] doctrine.DEBUG: Executing query: ALTER TABLE product_comment ADD CONSTRAINT FK_45AD49DC4584665A FOREIGN KEY (product_id) REFERENCES product (id) ON DELETE CASCADE {"sql":"ALTER TABLE product_comment ADD CONSTRAINT FK_45AD49DC4584665A FOREIGN KEY (product_id) REFERENCES product (id) ON DELETE CASCADE"} []
[2022-07-28T21:31:16.980733+02:00] doctrine.DEBUG: Executing query: ALTER TABLE product_comment ADD CONSTRAINT FK_45AD49DCF8697D13 FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE {"sql":"ALTER TABLE product_comment ADD CONSTRAINT FK_45AD49DCF8697D13 FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE"} []
[2022-07-28T21:31:17.050461+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220728193105","2":"2022-07-28 21:31:16","3":397}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220728193105","2":"2022-07-28 21:31:16","3":397},"types":{"1":2,"2":2,"3":1}} []
[2022-07-28T21:31:17.054958+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:31:24.706548+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:31:24.719144+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:27.342950+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T21:31:27.391824+02:00] doctrine.DEBUG: Executing statement: DELETE FROM comment_user {"sql":"DELETE FROM comment_user"} []
[2022-07-28T21:31:27.394771+02:00] doctrine.DEBUG: Executing statement: DELETE FROM product_comment {"sql":"DELETE FROM product_comment"} []
[2022-07-28T21:31:27.397556+02:00] doctrine.DEBUG: Executing statement: DELETE FROM product {"sql":"DELETE FROM product"} []
[2022-07-28T21:31:27.400271+02:00] doctrine.DEBUG: Executing statement: DELETE FROM comment {"sql":"DELETE FROM comment"} []
[2022-07-28T21:31:27.404541+02:00] doctrine.DEBUG: Executing statement: DELETE FROM user {"sql":"DELETE FROM user"} []
[2022-07-28T21:31:28.099936+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"abraca_admin@example.com","2":"[\"ROLE_ADMIN\",\"ROLE_USER\"]","3":"Theresia","4":"$2y$13$JV9ToQZJYN.X201QT3q8OuNbrfIuioTNNHg9qYyuaGKmor9JaV33m","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"abraca_admin@example.com","2":"[\"ROLE_ADMIN\",\"ROLE_USER\"]","3":"Theresia","4":"$2y$13$JV9ToQZJYN.X201QT3q8OuNbrfIuioTNNHg9qYyuaGKmor9JaV33m","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:28.743012+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Eum velit optio facere eos deleniti repellendus explicabo vel. Aperiam in voluptas quas officiis.","2":"[\"ROLE_USER\"]","3":"Rosie","4":"$2y$13$o6IUj9fJrDOI52Cp/s52hunJBDYZSdOvCAKBq1LEz2bgbPPjRtdp6","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Eum velit optio facere eos deleniti repellendus explicabo vel. Aperiam in voluptas quas officiis.","2":"[\"ROLE_USER\"]","3":"Rosie","4":"$2y$13$o6IUj9fJrDOI52Cp/s52hunJBDYZSdOvCAKBq1LEz2bgbPPjRtdp6","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:28.745877+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-28T21:31:28.756731+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-28T21:31:29.393591+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Voluptas vel nemo velit odit adipisci ut aliquid. Sint molestiae officiis qui autem voluptas et unde. Iusto ut libero quis qui corrupti sunt. Pariatur rerum beatae et natus magni.","2":"[\"ROLE_USER\"]","3":"Tracey","4":"$2y$13$YxTQwXIHVbabWQ50MMtzJ.HTFxBN3tXoHsahwuZJulv8xTxZpuZLy","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Voluptas vel nemo velit odit adipisci ut aliquid. Sint molestiae officiis qui autem voluptas et unde. Iusto ut libero quis qui corrupti sunt. Pariatur rerum beatae et natus magni.","2":"[\"ROLE_USER\"]","3":"Tracey","4":"$2y$13$YxTQwXIHVbabWQ50MMtzJ.HTFxBN3tXoHsahwuZJulv8xTxZpuZLy","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:29.394328+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Amet accusamus vel et atque.","2":"2022-07-19 06:17:28","3":"2022-06-03 19:22:46","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Amet accusamus vel et atque.","2":"2022-07-19 06:17:28","3":"2022-06-03 19:22:46","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:29.394798+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Raoul","2":"Et labore fuga aut quasi magni et ut. Saepe sint qui eum harum. Architecto quia iste tenetur.","3":"2022-06-28 14:12:48","4":"2022-05-17 08:04:10","5":null,"6":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Raoul","2":"Et labore fuga aut quasi magni et ut. Saepe sint qui eum harum. Architecto quia iste tenetur.","3":"2022-06-28 14:12:48","4":"2022-05-17 08:04:10","5":null,"6":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:29.398584+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":1,"2":1}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":1,"2":1},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:29.399039+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":1,"2":2}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":1,"2":2},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:29.400305+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-28T21:31:29.400909+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-28T21:31:30.037042+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nulla molestias tenetur commodi enim. Nostrum qui dolor aliquid hic earum ipsum quibusdam. Sint facere itaque rem expedita accusamus magni sunt. In dignissimos corrupti nihil hic.","2":"[\"ROLE_USER\"]","3":"Terence","4":"$2y$13$CD.Tm2iKFXumaRqAzDEzqO66BJKc0Ft4WbKf4DZahkUdWNnPqL7fG","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nulla molestias tenetur commodi enim. Nostrum qui dolor aliquid hic earum ipsum quibusdam. Sint facere itaque rem expedita accusamus magni sunt. In dignissimos corrupti nihil hic.","2":"[\"ROLE_USER\"]","3":"Terence","4":"$2y$13$CD.Tm2iKFXumaRqAzDEzqO66BJKc0Ft4WbKf4DZahkUdWNnPqL7fG","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:30.037718+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Doloremque et culpa sit est.","2":"2022-02-04 10:58:21","3":"2022-07-15 22:45:55","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Doloremque et culpa sit est.","2":"2022-02-04 10:58:21","3":"2022-07-15 22:45:55","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:30.038117+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Rebekah","2":"Rerum nihil nulla nemo delectus et non. Et eveniet officiis esse officiis velit quasi.","3":"2022-04-05 07:00:16","4":"2021-09-25 14:47:58","5":null,"6":"saepe-rem-ut-aut-voluptas-id-nobis-aut"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Rebekah","2":"Rerum nihil nulla nemo delectus et non. Et eveniet officiis esse officiis velit quasi.","3":"2022-04-05 07:00:16","4":"2021-09-25 14:47:58","5":null,"6":"saepe-rem-ut-aut-voluptas-id-nobis-aut"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:30.038531+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":2,"2":2}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":2,"2":2},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:30.043977+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":2,"2":3}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":2,"2":3},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:30.045340+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2022-07-28T21:31:30.046433+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2022-07-28T21:31:30.680647+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Et ipsa magni qui itaque veritatis eligendi. Accusamus velit ab provident pariatur quis amet dolorum. Suscipit et tenetur est maxime deleniti.","2":"[\"ROLE_USER\"]","3":"Carlee","4":"$2y$13$wkd9/FW2bKvl8mIuMEInJet5/DsRrspSWWozBk4lR0y1BqTQsiv9W","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Et ipsa magni qui itaque veritatis eligendi. Accusamus velit ab provident pariatur quis amet dolorum. Suscipit et tenetur est maxime deleniti.","2":"[\"ROLE_USER\"]","3":"Carlee","4":"$2y$13$wkd9/FW2bKvl8mIuMEInJet5/DsRrspSWWozBk4lR0y1BqTQsiv9W","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:30.681307+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Nihil officiis minima est et.","2":"2022-02-28 03:32:28","3":"2021-08-01 09:08:32","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Nihil officiis minima est et.","2":"2022-02-28 03:32:28","3":"2021-08-01 09:08:32","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:30.681763+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Elijah","2":"Et voluptate sint velit consectetur quo quod nihil quae. Harum rerum aut velit esse labore libero.","3":"2022-04-28 01:20:16","4":"2021-12-31 22:27:29","5":null,"6":"est-aspernatur-id-quos-quia-qui"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Elijah","2":"Et voluptate sint velit consectetur quo quod nihil quae. Harum rerum aut velit esse labore libero.","3":"2022-04-28 01:20:16","4":"2021-12-31 22:27:29","5":null,"6":"est-aspernatur-id-quos-quia-qui"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:30.682184+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":3,"2":3}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":3,"2":3},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:30.682555+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":3,"2":4}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":3,"2":4},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:30.683639+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":5},"types":{"1":1}} []
[2022-07-28T21:31:30.684275+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":5},"types":{"1":1}} []
[2022-07-28T21:31:31.319952+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Velit sunt ab et rerum. Ut voluptas voluptatem est maiores asperiores. Eos eos ab voluptatem iste quia in doloremque. Atque quis velit quasi placeat nostrum quasi. Nobis et quia est illum non et.","2":"[\"ROLE_USER\"]","3":"Brandi","4":"$2y$13$uZMTcqIbnusAPC6FwYPgPOd1hkbXeqS1fuPTGhK5zaHASIyWhjofy","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Velit sunt ab et rerum. Ut voluptas voluptatem est maiores asperiores. Eos eos ab voluptatem iste quia in doloremque. Atque quis velit quasi placeat nostrum quasi. Nobis et quia est illum non et.","2":"[\"ROLE_USER\"]","3":"Brandi","4":"$2y$13$uZMTcqIbnusAPC6FwYPgPOd1hkbXeqS1fuPTGhK5zaHASIyWhjofy","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:31.323914+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Facere harum veniam ut quo.","2":"2021-12-29 11:35:21","3":"2022-07-05 22:51:57","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Facere harum veniam ut quo.","2":"2021-12-29 11:35:21","3":"2022-07-05 22:51:57","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:31.324383+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Darron","2":"Beatae rerum aliquid non nihil. Quam eum eaque aperiam. Necessitatibus et possimus quis vero vel.","3":"2021-11-03 13:26:13","4":"2021-10-04 00:09:32","5":null,"6":"debitis-sint-enim-velit-illo-numquam-non-qui-nobis"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Darron","2":"Beatae rerum aliquid non nihil. Quam eum eaque aperiam. Necessitatibus et possimus quis vero vel.","3":"2021-11-03 13:26:13","4":"2021-10-04 00:09:32","5":null,"6":"debitis-sint-enim-velit-illo-numquam-non-qui-nobis"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:31.329295+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":4,"2":4}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":4,"2":4},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:31.329745+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":4,"2":5}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":4,"2":5},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:31.331301+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2022-07-28T21:31:31.331914+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2022-07-28T21:31:31.966505+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Voluptates ut nihil vitae autem est. Voluptatibus aliquam eos fugit doloribus tempora possimus ipsa. Dolor quia ratione voluptatem vel. Sit eum perspiciatis amet omnis.","2":"[\"ROLE_USER\"]","3":"Bridie","4":"$2y$13$8mHvzqyNEAOB4iBNzT7UsOOQE8sW6XVOWpUGwjC77SGQ/ySaK2ZNC","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Voluptates ut nihil vitae autem est. Voluptatibus aliquam eos fugit doloribus tempora possimus ipsa. Dolor quia ratione voluptatem vel. Sit eum perspiciatis amet omnis.","2":"[\"ROLE_USER\"]","3":"Bridie","4":"$2y$13$8mHvzqyNEAOB4iBNzT7UsOOQE8sW6XVOWpUGwjC77SGQ/ySaK2ZNC","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:31.967104+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Nisi quia ab nisi dolore.","2":"2022-04-24 09:18:20","3":"2022-04-16 01:15:56","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Nisi quia ab nisi dolore.","2":"2022-04-24 09:18:20","3":"2022-04-16 01:15:56","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:31.967480+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Kristian","2":"Impedit architecto iste soluta consequatur adipisci vitae. Beatae ducimus quaerat illo laborum.","3":"2022-02-13 05:47:15","4":"2021-09-27 19:51:38","5":null,"6":"dignissimos-labore-accusamus-qui-recusandae-dolorem-quisquam"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Kristian","2":"Impedit architecto iste soluta consequatur adipisci vitae. Beatae ducimus quaerat illo laborum.","3":"2022-02-13 05:47:15","4":"2021-09-27 19:51:38","5":null,"6":"dignissimos-labore-accusamus-qui-recusandae-dolorem-quisquam"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:31.967859+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":5,"2":5}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":5,"2":5},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:31.968203+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":5,"2":6}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":5,"2":6},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:31.976354+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":1}} []
[2022-07-28T21:31:31.977078+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":1}} []
[2022-07-28T21:31:32.614165+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Unde molestias omnis esse sed non laborum. Dolores voluptatem dicta vitae laudantium rem ut quia eum. Voluptatem at exercitationem temporibus nostrum ea voluptates fugit.","2":"[\"ROLE_USER\"]","3":"Lourdes","4":"$2y$13$d2/XeWAmQ.pbgvDjoMxba.UCl7amzf.uE6bsWIXDLmHgkYtHRYnjq","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Unde molestias omnis esse sed non laborum. Dolores voluptatem dicta vitae laudantium rem ut quia eum. Voluptatem at exercitationem temporibus nostrum ea voluptates fugit.","2":"[\"ROLE_USER\"]","3":"Lourdes","4":"$2y$13$d2/XeWAmQ.pbgvDjoMxba.UCl7amzf.uE6bsWIXDLmHgkYtHRYnjq","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:32.614841+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Ut optio culpa ex dolore.","2":"2021-09-18 09:58:26","3":"2022-02-01 02:37:22","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Ut optio culpa ex dolore.","2":"2021-09-18 09:58:26","3":"2022-02-01 02:37:22","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:32.615234+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Zetta","2":"Officia voluptatibus veniam quia assumenda. Saepe maxime tempora ea minus quod repudiandae.","3":"2021-11-18 06:05:36","4":"2022-05-09 20:35:10","5":null,"6":"reprehenderit-asperiores-consectetur-eum-voluptas"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Zetta","2":"Officia voluptatibus veniam quia assumenda. Saepe maxime tempora ea minus quod repudiandae.","3":"2021-11-18 06:05:36","4":"2022-05-09 20:35:10","5":null,"6":"reprehenderit-asperiores-consectetur-eum-voluptas"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:32.615646+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":6,"2":6}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":6,"2":6},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:32.615994+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":6,"2":7}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":6,"2":7},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:32.617078+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":8}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":8},"types":{"1":1}} []
[2022-07-28T21:31:32.617665+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":8}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":8},"types":{"1":1}} []
[2022-07-28T21:31:33.253673+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Eligendi ipsam quo unde eius. Sit repudiandae voluptatem aut tempora ut sunt. Est culpa perferendis id ut architecto perferendis sunt et.","2":"[\"ROLE_USER\"]","3":"Myles","4":"$2y$13$R02/aIII6WV1zZAUMl7zdutNIM6SDdA/AxZz5184N7JMFTP4rlFBe","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Eligendi ipsam quo unde eius. Sit repudiandae voluptatem aut tempora ut sunt. Est culpa perferendis id ut architecto perferendis sunt et.","2":"[\"ROLE_USER\"]","3":"Myles","4":"$2y$13$R02/aIII6WV1zZAUMl7zdutNIM6SDdA/AxZz5184N7JMFTP4rlFBe","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:33.254273+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Earum ex in assumenda et.","2":"2022-05-13 06:55:38","3":"2021-09-18 00:02:51","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Earum ex in assumenda et.","2":"2022-05-13 06:55:38","3":"2021-09-18 00:02:51","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:33.254663+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Kattie","2":"Similique est veniam deserunt. Ab est labore aspernatur. Quo ut assumenda sint officia ullam.","3":"2022-03-17 23:52:27","4":"2021-10-10 18:13:45","5":null,"6":"in-in-nostrum-et-aspernatur-voluptas-voluptate"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Kattie","2":"Similique est veniam deserunt. Ab est labore aspernatur. Quo ut assumenda sint officia ullam.","3":"2022-03-17 23:52:27","4":"2021-10-10 18:13:45","5":null,"6":"in-in-nostrum-et-aspernatur-voluptas-voluptate"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:33.255053+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":7,"2":7}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":7,"2":7},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:33.255398+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":7,"2":8}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":7,"2":8},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:33.256753+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2022-07-28T21:31:33.257444+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2022-07-28T21:31:33.894163+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Quisquam repudiandae ut adipisci tempora excepturi in cumque. Eius omnis iure et earum eos aperiam nostrum. Velit magnam asperiores aut dolorem sit laborum laboriosam. Omnis nobis ut natus omnis est.","2":"[\"ROLE_USER\"]","3":"Delphia","4":"$2y$13$/KjgfTOEi.3/Dr/nDTE21.Zq60K61od6VKsbOXYNBAVqzXR1REGou","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Quisquam repudiandae ut adipisci tempora excepturi in cumque. Eius omnis iure et earum eos aperiam nostrum. Velit magnam asperiores aut dolorem sit laborum laboriosam. Omnis nobis ut natus omnis est.","2":"[\"ROLE_USER\"]","3":"Delphia","4":"$2y$13$/KjgfTOEi.3/Dr/nDTE21.Zq60K61od6VKsbOXYNBAVqzXR1REGou","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:33.894883+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Culpa ipsum totam sed enim.","2":"2021-08-28 18:06:03","3":"2022-05-09 13:21:12","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Culpa ipsum totam sed enim.","2":"2021-08-28 18:06:03","3":"2022-05-09 13:21:12","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:33.895289+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Marlene","2":"Facilis accusamus sunt ut aliquid. Veniam atque sunt sit. Et non sint quam sunt sequi illo nisi.","3":"2022-01-28 01:30:16","4":"2022-03-03 07:59:16","5":null,"6":"ut-sed-velit-adipisci-repudiandae-consequuntur-et-molestias"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Marlene","2":"Facilis accusamus sunt ut aliquid. Veniam atque sunt sit. Et non sint quam sunt sequi illo nisi.","3":"2022-01-28 01:30:16","4":"2022-03-03 07:59:16","5":null,"6":"ut-sed-velit-adipisci-repudiandae-consequuntur-et-molestias"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:33.895750+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":8,"2":8}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":8,"2":8},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:33.896154+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":8,"2":9}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":8,"2":9},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:33.897913+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":10}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":10},"types":{"1":1}} []
[2022-07-28T21:31:33.898561+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":10}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":10},"types":{"1":1}} []
[2022-07-28T21:31:34.532699+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Aut autem eligendi omnis sed facere assumenda similique. Et officiis asperiores est tenetur consectetur corporis excepturi.","2":"[\"ROLE_USER\"]","3":"Hosea","4":"$2y$13$zzT1E7UlVWvOcxWaoNcrX.l0skTl43GXjhtQwuu.M6SKDG1vxl4Sm","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Aut autem eligendi omnis sed facere assumenda similique. Et officiis asperiores est tenetur consectetur corporis excepturi.","2":"[\"ROLE_USER\"]","3":"Hosea","4":"$2y$13$zzT1E7UlVWvOcxWaoNcrX.l0skTl43GXjhtQwuu.M6SKDG1vxl4Sm","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:34.533380+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Molestias eum mollitia dolor.","2":"2022-05-22 15:27:17","3":"2022-06-15 08:25:21","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Molestias eum mollitia dolor.","2":"2022-05-22 15:27:17","3":"2022-06-15 08:25:21","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:34.533818+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Sally","2":"Et iusto est recusandae. Numquam accusamus aut nulla enim eos quae.","3":"2022-01-23 02:04:01","4":"2022-04-24 23:05:50","5":null,"6":"expedita-porro-modi-itaque-fugiat"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Sally","2":"Et iusto est recusandae. Numquam accusamus aut nulla enim eos quae.","3":"2022-01-23 02:04:01","4":"2022-04-24 23:05:50","5":null,"6":"expedita-porro-modi-itaque-fugiat"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:34.534256+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":9,"2":9}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":9,"2":9},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:34.534653+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":9,"2":10}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":9,"2":10},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:34.536551+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":11}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":11},"types":{"1":1}} []
[2022-07-28T21:31:34.537190+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":11}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":11},"types":{"1":1}} []
[2022-07-28T21:31:35.173049+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Animi impedit consequuntur laudantium enim nihil assumenda omnis. Aut consequatur beatae nobis culpa recusandae enim. Iusto quisquam eligendi excepturi velit fugiat consequatur quis.","2":"[\"ROLE_USER\"]","3":"Mabel","4":"$2y$13$z0sYt4Kl030QMZj52Y1oQ.RYxiPFdJMX4ZisHi9F4mxECZzJMW6kW","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Animi impedit consequuntur laudantium enim nihil assumenda omnis. Aut consequatur beatae nobis culpa recusandae enim. Iusto quisquam eligendi excepturi velit fugiat consequatur quis.","2":"[\"ROLE_USER\"]","3":"Mabel","4":"$2y$13$z0sYt4Kl030QMZj52Y1oQ.RYxiPFdJMX4ZisHi9F4mxECZzJMW6kW","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:35.173729+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Ut et enim culpa enim.","2":"2021-09-01 16:20:51","3":"2022-05-21 01:07:55","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Ut et enim culpa enim.","2":"2021-09-01 16:20:51","3":"2022-05-21 01:07:55","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:35.174138+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Marjory","2":"Itaque veritatis et omnis doloribus sed temporibus officia. Ut aliquid nam et ea animi.","3":"2022-06-09 06:44:01","4":"2022-07-02 21:30:06","5":null,"6":"soluta-sit-fugiat-accusantium-voluptatem-incidunt-recusandae-modi"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Marjory","2":"Itaque veritatis et omnis doloribus sed temporibus officia. Ut aliquid nam et ea animi.","3":"2022-06-09 06:44:01","4":"2022-07-02 21:30:06","5":null,"6":"soluta-sit-fugiat-accusantium-voluptatem-incidunt-recusandae-modi"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:35.174532+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":10,"2":10}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":10,"2":10},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:35.174880+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":10,"2":11}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":10,"2":11},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:35.175697+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":12}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":12},"types":{"1":1}} []
[2022-07-28T21:31:35.176384+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":12}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":12},"types":{"1":1}} []
[2022-07-28T21:31:35.809231+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Explicabo velit est dolorem aut maxime qui rerum. Quidem et voluptatem quisquam eos reiciendis ullam quibusdam. Et cumque doloremque deleniti qui est.","2":"[\"ROLE_USER\"]","3":"Liliane","4":"$2y$13$DlgSop5AFRUFHWT.Aw.oYe6IJE/9B.ltAGAq9LtLv4KAURBzdh3Xa","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Explicabo velit est dolorem aut maxime qui rerum. Quidem et voluptatem quisquam eos reiciendis ullam quibusdam. Et cumque doloremque deleniti qui est.","2":"[\"ROLE_USER\"]","3":"Liliane","4":"$2y$13$DlgSop5AFRUFHWT.Aw.oYe6IJE/9B.ltAGAq9LtLv4KAURBzdh3Xa","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:35.809879+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Mollitia quia harum ea nulla.","2":"2022-01-04 00:11:09","3":"2021-11-01 19:45:02","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Mollitia quia harum ea nulla.","2":"2022-01-04 00:11:09","3":"2021-11-01 19:45:02","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:35.810332+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Lura","2":"Sint nam et et. Est autem consequatur sit. Praesentium at architecto quis vel hic odio.","3":"2021-12-05 12:43:26","4":"2022-07-26 20:58:51","5":null,"6":"qui-beatae-rerum-ea-odio-vero"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Lura","2":"Sint nam et et. Est autem consequatur sit. Praesentium at architecto quis vel hic odio.","3":"2021-12-05 12:43:26","4":"2022-07-26 20:58:51","5":null,"6":"qui-beatae-rerum-ea-odio-vero"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:35.810773+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":11,"2":11}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":11,"2":11},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:35.811175+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":11,"2":12}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":11,"2":12},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:35.812420+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":13}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":13},"types":{"1":1}} []
[2022-07-28T21:31:35.813054+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":13}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":13},"types":{"1":1}} []
[2022-07-28T21:31:36.449039+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Blanditiis ut sed iusto facere corporis laborum. Atque id sed dolor eveniet ea voluptatibus. Consequatur velit ut molestias occaecati necessitatibus qui.","2":"[\"ROLE_USER\"]","3":"Eve","4":"$2y$13$P.lhySFrYucTT2dZ3rfFZOWAQzEoQ5kijgplNxjGTXFx6QGwCVVQO","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Blanditiis ut sed iusto facere corporis laborum. Atque id sed dolor eveniet ea voluptatibus. Consequatur velit ut molestias occaecati necessitatibus qui.","2":"[\"ROLE_USER\"]","3":"Eve","4":"$2y$13$P.lhySFrYucTT2dZ3rfFZOWAQzEoQ5kijgplNxjGTXFx6QGwCVVQO","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:36.449691+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Et amet cumque expedita.","2":"2021-09-07 06:05:36","3":"2021-08-31 04:55:48","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Et amet cumque expedita.","2":"2021-09-07 06:05:36","3":"2021-08-31 04:55:48","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:36.450143+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Judy","2":"Odio ut sed odio est et velit. Natus quisquam ipsa beatae.","3":"2021-09-03 17:18:09","4":"2021-12-08 19:11:51","5":null,"6":"fugit-necessitatibus-illum-est-aspernatur-illo-et-fugit"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Judy","2":"Odio ut sed odio est et velit. Natus quisquam ipsa beatae.","3":"2021-09-03 17:18:09","4":"2021-12-08 19:11:51","5":null,"6":"fugit-necessitatibus-illum-est-aspernatur-illo-et-fugit"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:36.450597+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":12,"2":12}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":12,"2":12},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:36.450995+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":12,"2":13}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":12,"2":13},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:36.452266+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":14}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":14},"types":{"1":1}} []
[2022-07-28T21:31:36.452984+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":14}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":14},"types":{"1":1}} []
[2022-07-28T21:31:37.088925+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Culpa amet maxime et laborum quam dolores. Cumque error sunt autem dignissimos sed. Est beatae ducimus qui quia. Minus ullam voluptatem exercitationem voluptatum aut sit unde.","2":"[\"ROLE_USER\"]","3":"Rosemarie","4":"$2y$13$CkfamxjhJeJldZDACdsMbefNie1ns2Lp4r0VXJCxgr2R/6GyUEqem","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Culpa amet maxime et laborum quam dolores. Cumque error sunt autem dignissimos sed. Est beatae ducimus qui quia. Minus ullam voluptatem exercitationem voluptatum aut sit unde.","2":"[\"ROLE_USER\"]","3":"Rosemarie","4":"$2y$13$CkfamxjhJeJldZDACdsMbefNie1ns2Lp4r0VXJCxgr2R/6GyUEqem","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:37.089748+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Velit fuga sed culpa ea.","2":"2021-12-11 16:35:33","3":"2021-07-31 15:17:00","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Velit fuga sed culpa ea.","2":"2021-12-11 16:35:33","3":"2021-07-31 15:17:00","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:37.090250+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Mac","2":"Et aut reprehenderit repellendus. Omnis fugit cupiditate voluptatum libero recusandae et expedita.","3":"2022-01-12 19:13:56","4":"2022-05-18 23:11:10","5":null,"6":"architecto-vel-laboriosam-sit"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Mac","2":"Et aut reprehenderit repellendus. Omnis fugit cupiditate voluptatum libero recusandae et expedita.","3":"2022-01-12 19:13:56","4":"2022-05-18 23:11:10","5":null,"6":"architecto-vel-laboriosam-sit"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:37.090676+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":13,"2":13}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":13,"2":13},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:37.091033+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":13,"2":14}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":13,"2":14},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:37.092601+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":15}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":15},"types":{"1":1}} []
[2022-07-28T21:31:37.093208+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":15}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":15},"types":{"1":1}} []
[2022-07-28T21:31:37.727931+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Omnis sit natus sed consequuntur. Eaque maiores molestiae ex eos harum officia iste. In deserunt pariatur voluptatem rerum perspiciatis. Velit eligendi molestias culpa officiis iure.","2":"[\"ROLE_USER\"]","3":"Burdette","4":"$2y$13$OGKJdsYSfi7w0q4X8SHHM.S6uJeYNAHuvKF4tOI0VTASu5SYOmSo.","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Omnis sit natus sed consequuntur. Eaque maiores molestiae ex eos harum officia iste. In deserunt pariatur voluptatem rerum perspiciatis. Velit eligendi molestias culpa officiis iure.","2":"[\"ROLE_USER\"]","3":"Burdette","4":"$2y$13$OGKJdsYSfi7w0q4X8SHHM.S6uJeYNAHuvKF4tOI0VTASu5SYOmSo.","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:37.728574+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Aut atque debitis occaecati.","2":"2021-12-19 22:36:11","3":"2022-06-15 01:36:16","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Aut atque debitis occaecati.","2":"2021-12-19 22:36:11","3":"2022-06-15 01:36:16","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:37.728964+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Mavis","2":"Et voluptatem perspiciatis consequatur aut ducimus quo error. Dignissimos voluptates iste rem aut.","3":"2022-04-13 02:05:45","4":"2021-12-18 08:33:13","5":null,"6":"facere-odio-delectus-dolorem-pariatur"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Mavis","2":"Et voluptatem perspiciatis consequatur aut ducimus quo error. Dignissimos voluptates iste rem aut.","3":"2022-04-13 02:05:45","4":"2021-12-18 08:33:13","5":null,"6":"facere-odio-delectus-dolorem-pariatur"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:37.729356+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":14,"2":14}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":14,"2":14},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:37.729700+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":14,"2":15}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":14,"2":15},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:37.730731+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":16}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":16},"types":{"1":1}} []
[2022-07-28T21:31:37.731318+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":16}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":16},"types":{"1":1}} []
[2022-07-28T21:31:38.367159+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Fugit labore eveniet quis debitis dignissimos. Sint aut necessitatibus assumenda quis enim facilis sunt. Consequatur enim ab eveniet eos nihil.","2":"[\"ROLE_USER\"]","3":"Adelbert","4":"$2y$13$ovcq3eIEuAz8fWZJ1wdVz.lKQYIbZpMwILPTtqG7niS53VkCy16Nq","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Fugit labore eveniet quis debitis dignissimos. Sint aut necessitatibus assumenda quis enim facilis sunt. Consequatur enim ab eveniet eos nihil.","2":"[\"ROLE_USER\"]","3":"Adelbert","4":"$2y$13$ovcq3eIEuAz8fWZJ1wdVz.lKQYIbZpMwILPTtqG7niS53VkCy16Nq","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:38.367815+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Earum id culpa sed ut et.","2":"2021-09-23 22:20:19","3":"2022-05-04 22:24:28","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Earum id culpa sed ut et.","2":"2021-09-23 22:20:19","3":"2022-05-04 22:24:28","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:38.368213+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Demarco","2":"Nesciunt occaecati tempore vitae vel consectetur. Vel vero inventore cumque.","3":"2022-01-12 22:46:03","4":"2021-08-10 02:46:50","5":null,"6":"unde-facere-placeat-ipsam-et-molestias-est-accusantium-id"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Demarco","2":"Nesciunt occaecati tempore vitae vel consectetur. Vel vero inventore cumque.","3":"2022-01-12 22:46:03","4":"2021-08-10 02:46:50","5":null,"6":"unde-facere-placeat-ipsam-et-molestias-est-accusantium-id"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:38.368604+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":15,"2":15}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":15,"2":15},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:38.368981+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":15,"2":16}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":15,"2":16},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:38.371753+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":17}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":17},"types":{"1":1}} []
[2022-07-28T21:31:38.372391+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":17}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":17},"types":{"1":1}} []
[2022-07-28T21:31:39.006497+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Eum et odio amet a doloremque aliquid dolor. Non sed consectetur quia sint alias non et. Et ut tempora nemo omnis.","2":"[\"ROLE_USER\"]","3":"Nikki","4":"$2y$13$tFVhCMeyGAgbsVPi5OONN.nOt.ceF0tf.bP5BsqDQmCKqrjAtjduy","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Eum et odio amet a doloremque aliquid dolor. Non sed consectetur quia sint alias non et. Et ut tempora nemo omnis.","2":"[\"ROLE_USER\"]","3":"Nikki","4":"$2y$13$tFVhCMeyGAgbsVPi5OONN.nOt.ceF0tf.bP5BsqDQmCKqrjAtjduy","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:39.007169+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Eos aut nihil mollitia et.","2":"2022-06-20 03:43:44","3":"2022-01-14 01:50:10","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Eos aut nihil mollitia et.","2":"2022-06-20 03:43:44","3":"2022-01-14 01:50:10","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:39.007571+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Josephine","2":"Odit dolorem quaerat ipsum et. Quidem temporibus in reiciendis nemo aperiam.","3":"2022-03-29 13:34:29","4":"2022-03-16 02:45:31","5":null,"6":"facere-aspernatur-et-quis-natus"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Josephine","2":"Odit dolorem quaerat ipsum et. Quidem temporibus in reiciendis nemo aperiam.","3":"2022-03-29 13:34:29","4":"2022-03-16 02:45:31","5":null,"6":"facere-aspernatur-et-quis-natus"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:39.007967+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":16,"2":16}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":16,"2":16},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:39.008315+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":16,"2":17}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":16,"2":17},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:39.010116+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":18}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":18},"types":{"1":1}} []
[2022-07-28T21:31:39.010761+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":18}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":18},"types":{"1":1}} []
[2022-07-28T21:31:39.645900+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Ut pariatur qui nesciunt molestiae est. Perferendis et deleniti voluptas cum impedit tenetur perferendis. Non autem aspernatur doloribus aut natus. Debitis cumque delectus at fugit.","2":"[\"ROLE_USER\"]","3":"Beaulah","4":"$2y$13$ifMMs9cNzI7doc.cda0Ydeis/oRtJDneuDn3RHnUA0SAmahno0YBW","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Ut pariatur qui nesciunt molestiae est. Perferendis et deleniti voluptas cum impedit tenetur perferendis. Non autem aspernatur doloribus aut natus. Debitis cumque delectus at fugit.","2":"[\"ROLE_USER\"]","3":"Beaulah","4":"$2y$13$ifMMs9cNzI7doc.cda0Ydeis/oRtJDneuDn3RHnUA0SAmahno0YBW","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:39.646582+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Deserunt beatae alias enim.","2":"2021-11-20 01:21:27","3":"2022-05-15 11:16:49","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Deserunt beatae alias enim.","2":"2021-11-20 01:21:27","3":"2022-05-15 11:16:49","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:39.647024+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Teresa","2":"Eum in doloremque maiores. Necessitatibus consectetur nemo ab modi. Voluptas omnis ut distinctio.","3":"2021-10-12 02:28:30","4":"2021-09-09 18:30:43","5":null,"6":"maiores-quo-reprehenderit-voluptatibus-molestiae"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Teresa","2":"Eum in doloremque maiores. Necessitatibus consectetur nemo ab modi. Voluptas omnis ut distinctio.","3":"2021-10-12 02:28:30","4":"2021-09-09 18:30:43","5":null,"6":"maiores-quo-reprehenderit-voluptatibus-molestiae"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:39.647465+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":17,"2":17}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":17,"2":17},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:39.647863+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":17,"2":18}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":17,"2":18},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:39.649238+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":19}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":19},"types":{"1":1}} []
[2022-07-28T21:31:39.649871+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":19}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":19},"types":{"1":1}} []
[2022-07-28T21:31:40.286515+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Sapiente laborum et assumenda pariatur et fuga voluptatum. Dolores perferendis laborum sed eos saepe aut eveniet quia. Eius debitis itaque delectus suscipit ut fuga dolores dicta.","2":"[\"ROLE_USER\"]","3":"Jakayla","4":"$2y$13$VeYPccpItLVJ2UoYQf8nQOgPqMWhfXFNVtp24DwH1nA6xfO5NHc6G","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Sapiente laborum et assumenda pariatur et fuga voluptatum. Dolores perferendis laborum sed eos saepe aut eveniet quia. Eius debitis itaque delectus suscipit ut fuga dolores dicta.","2":"[\"ROLE_USER\"]","3":"Jakayla","4":"$2y$13$VeYPccpItLVJ2UoYQf8nQOgPqMWhfXFNVtp24DwH1nA6xfO5NHc6G","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:40.287168+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Eum non voluptas unde est.","2":"2022-03-20 17:58:34","3":"2021-10-12 20:26:58","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Eum non voluptas unde est.","2":"2022-03-20 17:58:34","3":"2021-10-12 20:26:58","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:40.287589+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Wilmer","2":"Omnis quae dignissimos neque vel. Impedit quis consequatur et quasi. Et sint quibusdam ipsa modi.","3":"2021-09-14 07:23:55","4":"2022-05-12 14:13:00","5":null,"6":"reprehenderit-qui-quod-ut-qui-voluptatum-ut-facere"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Wilmer","2":"Omnis quae dignissimos neque vel. Impedit quis consequatur et quasi. Et sint quibusdam ipsa modi.","3":"2021-09-14 07:23:55","4":"2022-05-12 14:13:00","5":null,"6":"reprehenderit-qui-quod-ut-qui-voluptatum-ut-facere"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:40.288056+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":18,"2":18}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":18,"2":18},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:40.288417+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":18,"2":19}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":18,"2":19},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:40.289677+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":20}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":20},"types":{"1":1}} []
[2022-07-28T21:31:40.290456+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":20}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":20},"types":{"1":1}} []
[2022-07-28T21:31:40.926012+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Et omnis quae repellat nulla molestiae deleniti aut. Quia nulla qui vitae consectetur incidunt voluptas sapiente quia.","2":"[\"ROLE_USER\"]","3":"Milford","4":"$2y$13$zNeOcLNXQeF.nMKibY/Nm.SjpNE2Uctn5t.Hrh.cBxnjLMn4kAWDu","5":0}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified) VALUES (?, ?, ?, ?, ?)","params":{"1":"Et omnis quae repellat nulla molestiae deleniti aut. Quia nulla qui vitae consectetur incidunt voluptas sapiente quia.","2":"[\"ROLE_USER\"]","3":"Milford","4":"$2y$13$zNeOcLNXQeF.nMKibY/Nm.SjpNE2Uctn5t.Hrh.cBxnjLMn4kAWDu","5":0},"types":{"1":2,"2":2,"3":2,"4":2,"5":5}} []
[2022-07-28T21:31:40.926691+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"In vitae error facere odio.","2":"2022-06-11 00:17:25","3":"2022-02-06 18:18:04","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"In vitae error facere odio.","2":"2022-06-11 00:17:25","3":"2022-02-06 18:18:04","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:40.927093+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Sabryna","2":"In neque non aut quia. Voluptatem vero omnis magni et. Dicta totam ea suscipit incidunt id in eum.","3":"2021-09-30 15:14:13","4":"2022-04-16 09:04:02","5":null,"6":"voluptate-atque-optio-omnis-tenetur-blanditiis-rerum-aut"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Sabryna","2":"In neque non aut quia. Voluptatem vero omnis magni et. Dicta totam ea suscipit incidunt id in eum.","3":"2021-09-30 15:14:13","4":"2022-04-16 09:04:02","5":null,"6":"voluptate-atque-optio-omnis-tenetur-blanditiis-rerum-aut"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:40.927556+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":19,"2":19}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":19,"2":19},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:40.927884+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":19,"2":20}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":19,"2":20},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:40.928718+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":21}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":21},"types":{"1":1}} []
[2022-07-28T21:31:40.929272+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":21}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":21},"types":{"1":1}} []
[2022-07-28T21:31:40.930470+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?) (parameters: array{"1":"Hic sed deserunt quia.","2":"2021-07-31 21:38:32","3":"2022-07-26 01:10:25","4":null}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO comment (content, added_at, updated_at, deleted_at) VALUES (?, ?, ?, ?)","params":{"1":"Hic sed deserunt quia.","2":"2021-07-31 21:38:32","3":"2022-07-26 01:10:25","4":null},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2022-07-28T21:31:40.930830+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"Telly","2":"Dolore dicta nobis aperiam voluptate asperiores. Aut unde quia optio unde veniam iste fuga.","3":"2021-08-05 11:41:27","4":"2021-10-27 17:22:49","5":null,"6":"harum-dolor-eos-quo"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO product (title, description, added_at, updated_at, deleted_at, slug) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"Telly","2":"Dolore dicta nobis aperiam voluptate asperiores. Aut unde quia optio unde veniam iste fuga.","3":"2021-08-05 11:41:27","4":"2021-10-27 17:22:49","5":null,"6":"harum-dolor-eos-quo"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-07-28T21:31:40.931175+02:00] doctrine.DEBUG: Executing statement: INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?) (parameters: array{"1":20,"2":20}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO product_comment (product_id, comment_id) VALUES (?, ?)","params":{"1":20,"2":20},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:40.931485+02:00] doctrine.DEBUG: Executing statement: INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?) (parameters: array{"1":20,"2":21}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO comment_user (comment_id, user_id) VALUES (?, ?)","params":{"1":20,"2":21},"types":{"1":1,"2":1}} []
[2022-07-28T21:31:40.931790+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T21:31:40.935207+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:31:45.505031+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:31:45.544204+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:31:45.544330+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:31:45.544406+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:31:45.544472+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:31:45.544538+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:31:45.544601+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:31:45.544671+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:31:45.662339+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:31:45.727221+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:31:45.808350+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:45.809473+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:45.815859+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:45.816224+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:31:45.828179+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:45.828673+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:31:45.832570+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:45.832951+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:31:45.835382+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:31:45.838828+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:31:45.843922+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:45.870868+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:31:45.890678+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:31:46.351030+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c09ca4"},"request_uri":"http://192.168.0.167/_wdt/c09ca4","method":"GET"} []
[2022-07-28T21:31:49.026828+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-28T21:31:49.055080+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:31:49.055197+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:31:49.055277+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:31:49.055346+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:31:49.055415+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:31:49.055598+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:31:49.055678+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:31:49.166694+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:31:49.197981+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:49.200313+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:49.214161+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:49.214652+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:31:49.229676+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:49.230154+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:31:49.231877+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:49.232312+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:31:49.235065+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:31:49.238296+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:31:49.242561+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:49.262316+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:31:49.278637+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:31:49.637060+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"76c660"},"request_uri":"http://192.168.0.167/_wdt/76c660","method":"GET"} []
[2022-07-28T21:31:52.034669+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-28T21:31:52.067368+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:31:52.067493+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:31:52.067596+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:31:52.067670+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:31:52.067755+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:31:52.068131+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:31:52.185153+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:31:52.210114+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-28T21:31:52.908770+02:00] request.CRITICAL: Uncaught PHP Exception Exception: "Unexpected passport type" at C:\xampp\htdocs\ecommerce\tablouri\src\EventSubscriber\CheckVerifiedUserSubscriber.php line 31 {"exception":"[object] (Exception(code: 0): Unexpected passport type at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\EventSubscriber\\CheckVerifiedUserSubscriber.php:31)"} []
[2022-07-28T21:31:53.085178+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:53.086068+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:31:53.093035+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:53.093489+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:31:53.105407+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:53.105875+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:31:53.107104+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:53.107459+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:31:53.110151+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:31:53.113772+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:31:53.118901+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:31:53.198807+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:31:53.673083+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cec752"},"request_uri":"http://192.168.0.167/_wdt/cec752","method":"GET"} []
[2022-07-28T21:35:15.878419+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:15.891188+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-28T21:35:15.934308+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:35:15.934422+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:15.934515+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:15.934584+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:15.934708+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:15.935320+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:16.060094+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:35:16.104557+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-28T21:35:16.764982+02:00] security.INFO: Authenticator failed. {"exception":"[object] (App\\Security\\AccountNotVerifiedAuthenticationException(code: 0):  at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\EventSubscriber\\CheckVerifiedUserSubscriber.php:41)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:16.765118+02:00] security.DEBUG: Authentication failure, redirect triggered. {"failure_path":"app_login"} []
[2022-07-28T21:35:16.771900+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:16.773303+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T21:35:16.774364+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:16.824049+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:16.825030+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:16.831178+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:16.831612+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:35:16.845815+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:16.846382+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:35:16.847545+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:16.847912+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:35:16.850315+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:35:16.854025+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:35:16.858946+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:16.915665+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:35:17.280266+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:17.291716+02:00] request.INFO: Matched route "app_verify_resend_email". {"route":"app_verify_resend_email","route_parameters":{"_route":"app_verify_resend_email","_controller":"App\\Controller\\RegistrationController::resendVerifyEmail"},"request_uri":"http://192.168.0.167/verify/resend","method":"GET"} []
[2022-07-28T21:35:17.323189+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:35:17.323304+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:17.323382+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:17.323451+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:17.323521+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:17.323587+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:17.323665+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:17.426134+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:35:17.453631+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:17.455978+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:17.471208+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:17.471705+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:35:17.483027+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:17.483519+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:35:17.485282+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:17.485691+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:35:17.488240+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:35:17.491363+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:35:17.495539+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:17.549908+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:35:18.183823+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:18.192227+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4937a"},"request_uri":"http://192.168.0.167/_wdt/c4937a","method":"GET"} []
[2022-07-28T21:35:19.008977+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:19.050494+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/verify/resend")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/verify/resend\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T21:35:19.234618+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:35:19.243884+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:19.246207+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:19.260071+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:19.260554+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:35:19.272438+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:19.272937+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:35:19.274315+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:19.274722+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:35:19.277358+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:35:19.280559+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:35:19.284777+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:19.344739+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:35:32.059312+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:32.067712+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:35:32.090822+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:35:32.090939+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:32.091018+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:32.091193+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:32.091268+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:32.091336+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:32.091410+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:32.178760+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:35:32.223981+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:35:32.287046+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:32.288017+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:32.293837+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:32.294294+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:35:32.307156+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:32.307643+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:35:32.308743+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:32.309084+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:35:32.311540+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:35:32.314684+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:35:32.318740+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:32.369420+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:35:32.799435+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:32.807960+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ec3be"},"request_uri":"http://192.168.0.167/_wdt/2ec3be","method":"GET"} []
[2022-07-28T21:35:35.266525+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:35.274998+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-28T21:35:35.298001+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:35:35.298115+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:35.298194+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:35.298264+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:35.298335+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:35.298407+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:35.298483+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:35.438693+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:35:35.472474+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:35.474821+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:35.488495+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:35.488975+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:35:35.502148+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:35.502619+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:35:35.503786+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:35.504189+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:35:35.506679+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:35:35.509798+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:35:35.513896+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:35.556562+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:35:35.895918+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:35.904315+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"21656d"},"request_uri":"http://192.168.0.167/_wdt/21656d","method":"GET"} []
[2022-07-28T21:35:40.943468+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:40.952150+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-28T21:35:40.982674+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:35:40.982797+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:40.982916+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:40.982987+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:40.983067+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:40.983414+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:41.100727+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:35:41.126223+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-28T21:35:41.788058+02:00] security.INFO: Authenticator failed. {"exception":"[object] (App\\Security\\AccountNotVerifiedAuthenticationException(code: 0):  at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\EventSubscriber\\CheckVerifiedUserSubscriber.php:41)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:41.788196+02:00] security.DEBUG: Authentication failure, redirect triggered. {"failure_path":"app_login"} []
[2022-07-28T21:35:41.794627+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:41.795956+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T21:35:41.796947+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:41.848670+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:41.849606+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:41.856415+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:41.856870+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:35:41.870298+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:41.870807+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:35:41.872066+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:41.872606+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:35:41.875057+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:35:41.878595+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:35:41.884055+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:41.940463+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:35:42.316944+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:42.328735+02:00] request.INFO: Matched route "app_verify_resend_email". {"route":"app_verify_resend_email","route_parameters":{"_route":"app_verify_resend_email","_controller":"App\\Controller\\RegistrationController::resendVerifyEmail"},"request_uri":"http://192.168.0.167/verify/resend","method":"GET"} []
[2022-07-28T21:35:42.361343+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:35:42.361456+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:42.361538+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:35:42.361607+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:42.361677+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:35:42.361867+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:42.361947+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:35:42.465216+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:35:42.487053+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:42.489433+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:35:42.503129+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:42.503602+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:35:42.516371+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:42.516855+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:35:42.517980+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:42.518337+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:35:42.521030+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:35:42.525604+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:35:42.529683+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:35:42.585298+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:35:42.939481+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:35:42.947737+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3fe03a"},"request_uri":"http://192.168.0.167/_wdt/3fe03a","method":"GET"} []
[2022-07-28T21:36:05.947616+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:36:05.959545+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:36:05.997738+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:36:05.997862+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:05.998049+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:05.998121+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:05.998188+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:05.998251+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:05.998322+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:06.127065+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:36:06.205858+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:36:06.294409+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:06.295370+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:06.302096+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:06.302589+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:36:06.317246+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:06.317740+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:36:06.318930+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:06.319344+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:36:06.322005+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:36:06.325896+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:36:06.331505+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:06.395967+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:36:06.780386+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:36:06.788946+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9d9840"},"request_uri":"http://192.168.0.167/_wdt/9d9840","method":"GET"} []
[2022-07-28T21:36:20.697276+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:36:20.706112+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-28T21:36:20.728942+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:36:20.729067+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:20.729166+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:20.729237+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:20.729310+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:20.729378+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:20.729453+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:20.863434+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:36:20.896296+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:20.898663+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:20.912542+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:20.913014+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:36:20.925427+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:20.925893+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:36:20.927084+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:20.927483+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:36:20.929986+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:36:20.933159+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:36:20.937318+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:20.980319+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:36:21.339443+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:36:21.347752+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ccda41"},"request_uri":"http://192.168.0.167/_wdt/ccda41","method":"GET"} []
[2022-07-28T21:36:24.223188+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:36:24.231831+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-28T21:36:24.261964+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:36:24.262079+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:24.262174+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:24.262246+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:24.262327+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:24.262687+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:24.380692+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:36:24.420269+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-28T21:36:25.117981+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"abraca_admin@example.com\", roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:25.138308+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-28T21:36:25.139476+02:00] security.DEBUG: Remember-me was requested; setting cookie. [] []
[2022-07-28T21:36:25.142086+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:25.176287+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:36:25.197319+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:25.198253+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:25.204578+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:25.204988+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:36:25.220801+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:25.221273+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:36:25.222545+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:25.222852+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:36:25.225393+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:36:25.231557+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:36:25.237518+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:25.277051+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:36:25.664203+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:36:25.675609+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:36:25.707719+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:36:25.707835+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:25.707915+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:36:25.707984+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:25.708054+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:36:25.708280+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:25.708386+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:36:25.726475+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:36:25.810090+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:36:25.858497+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:36:25.868352+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:36:25.869659+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:36:25.917897+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:36:25.971726+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:36:25.981982+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:25.983042+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:36:25.989792+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:25.991342+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:36:26.000720+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:26.001206+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:36:26.002406+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:26.002762+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:36:26.005220+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:36:26.008453+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:36:26.012420+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:36:26.060847+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:36:26.471911+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:36:26.480534+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ffafc1"},"request_uri":"http://192.168.0.167/_wdt/ffafc1","method":"GET"} []
[2022-07-28T21:43:04.188710+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:43:04.204739+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:43:04.262655+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:43:04.262777+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:43:04.262854+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:43:04.262923+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:43:04.262992+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:43:04.263057+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:43:04.263131+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:43:04.289449+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:43:04.405656+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:43:04.468610+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:43:04.482674+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:43:04.484801+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:43:04.554668+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:43:04.857774+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "app_2fa_enable" as such route does not exist.")." at C:\xampp\htdocs\ecommerce\tablouri\templates\base.html.twig line 65 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"app_2fa_enable\" as such route does not exist.\"). at C:\\xampp\\htdocs\\ecommerce\\tablouri\\templates\\base.html.twig:65)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"app_2fa_enable\" as such route does not exist. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:50)"} []
[2022-07-28T21:43:05.066381+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:43:05.067419+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:43:05.076261+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:43:05.076793+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:43:05.092375+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:43:05.092841+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:43:05.094062+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:43:05.094405+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:43:05.096795+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:43:05.101684+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:43:05.109418+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:43:05.111080+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:43:05.203041+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:43:05.646262+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:43:05.657948+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b485a"},"request_uri":"http://192.168.0.167/_wdt/8b485a","method":"GET"} []
[2022-07-28T21:47:30.901724+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:49:12.389522+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:51:58.468601+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:51:59.103895+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:51:59.119708+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:51:59.119824+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:51:59.120022+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:51:59.120101+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:51:59.120177+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:51:59.120247+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:51:59.120324+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:51:59.130799+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:51:59.164114+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:51:59.189043+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:51:59.199302+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:51:59.200613+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:51:59.238782+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:51:59.312403+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "alertDisabled2fa" does not exist." at C:\xampp\htdocs\ecommerce\tablouri\templates\homepage.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"alertDisabled2fa\" does not exist. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\templates\\homepage.html.twig:7)"} []
[2022-07-28T21:51:59.442218+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:51:59.443238+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:51:59.449844+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:51:59.450303+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:51:59.462226+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:51:59.462738+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:51:59.464155+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:51:59.464564+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:51:59.467191+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:51:59.470738+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:51:59.476478+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:51:59.478223+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:51:59.565900+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:52:00.014931+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e86f52"},"request_uri":"http://192.168.0.167/_wdt/e86f52","method":"GET"} []
[2022-07-28T21:53:03.220088+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:53:03.253852+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:53:03.253970+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:53:03.254057+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:53:03.254136+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:53:03.254206+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:53:03.254272+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:53:03.254345+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:53:03.269710+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:53:03.348586+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:53:03.396386+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:53:03.406208+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:53:03.407575+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:53:03.450134+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:53:03.504971+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "alertDisabled2fa" does not exist." at C:\xampp\htdocs\ecommerce\tablouri\templates\homepage.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"alertDisabled2fa\" does not exist. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\templates\\homepage.html.twig:7)"} []
[2022-07-28T21:53:03.625847+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:03.626767+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:03.633165+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:03.633634+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:53:03.647964+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:03.648559+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:53:03.650292+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:03.650688+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:53:03.653213+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:53:03.656678+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:53:03.661755+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:03.663450+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:53:03.698816+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:53:03.742298+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:53:04.172893+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"60ce56"},"request_uri":"http://192.168.0.167/_wdt/60ce56","method":"GET"} []
[2022-07-28T21:53:15.392574+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-28T21:53:15.425653+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:53:15.425766+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:53:15.425846+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:53:15.425923+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:53:15.425993+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:53:15.426058+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:53:15.426130+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:53:15.441036+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:53:15.518193+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:53:15.564564+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:53:15.573836+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:53:15.575338+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:53:15.637585+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:53:15.650383+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:15.651323+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:15.657537+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:15.657959+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:53:15.670581+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:15.671054+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:53:15.672594+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:15.673011+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:53:15.675425+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:53:15.679014+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:53:15.684114+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:15.708078+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:53:15.728025+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:53:16.127493+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"32729d"},"request_uri":"http://192.168.0.167/_wdt/32729d","method":"GET"} []
[2022-07-28T21:53:16.880956+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/login")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/login\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T21:53:17.066314+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:53:17.075660+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:17.078088+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:17.091892+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:17.092320+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:53:17.105022+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:17.105459+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:53:17.106647+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:17.106980+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:53:17.109277+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:53:17.112476+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:53:17.116547+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:17.142949+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:53:17.177580+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:53:17.800927+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:53:17.825894+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:53:17.826011+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:53:17.826090+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:53:17.826160+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:53:17.826231+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:53:17.826298+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:53:17.826372+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:53:17.839230+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:53:17.899635+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:53:17.933666+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:53:17.942181+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:53:17.943113+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:53:17.984080+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:53:18.034261+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "alertDisabled2fa" does not exist." at C:\xampp\htdocs\ecommerce\tablouri\templates\homepage.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"alertDisabled2fa\" does not exist. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\templates\\homepage.html.twig:7)"} []
[2022-07-28T21:53:18.139826+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:18.140758+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:53:18.146276+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:18.146714+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:53:18.160005+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:18.160501+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:53:18.161622+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:18.162292+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:53:18.165058+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:53:18.168177+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:53:18.172305+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:53:18.174029+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:53:18.204638+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:53:18.243799+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:53:18.545088+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"efaf5a"},"request_uri":"http://192.168.0.167/_wdt/efaf5a","method":"GET"} []
[2022-07-28T21:55:27.165286+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:55:27.265694+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T21:55:27.282607+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:55:27.282739+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:55:27.282820+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:55:27.283022+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:55:27.283127+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:55:27.283198+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:55:27.283283+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:55:27.294282+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:55:27.327628+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:55:27.366830+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:55:27.376966+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:55:27.378309+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:55:27.416534+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T21:55:27.484871+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:55:27.498455+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:55:27.499406+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:55:27.505993+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:27.506576+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:55:27.520124+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:27.520605+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:55:27.521744+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:27.522092+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:55:27.524534+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:55:27.528394+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:55:27.533865+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:27.582793+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:55:28.398380+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b3089"},"request_uri":"http://192.168.0.167/_wdt/3b3089","method":"GET"} []
[2022-07-28T21:55:29.129144+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T21:55:29.335196+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:55:29.361242+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:55:29.363890+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:55:29.380868+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:29.381339+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:55:29.394357+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:29.394846+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:55:29.396847+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:29.397277+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:55:29.399804+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:55:29.403402+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:55:29.408248+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:29.438932+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:55:29.477198+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:55:33.760214+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T21:55:33.788159+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:55:33.788385+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:55:33.788469+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:55:33.788539+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:55:33.788614+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:55:33.788681+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:55:33.788755+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:55:33.803021+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:55:33.869382+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:55:33.915449+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:55:33.924635+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:55:33.926043+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:55:33.976017+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "security/enable2fa.html.twig" (looked into: C:\xampp\htdocs\ecommerce\tablouri/templates, C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\twig-bridge/Resources/views/Form)." at C:\xampp\htdocs\ecommerce\tablouri\vendor\twig\twig\src\Loader\FilesystemLoader.php line 227 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"security/enable2fa.html.twig\" (looked into: C:\\xampp\\htdocs\\ecommerce\\tablouri/templates, C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\twig-bridge/Resources/views/Form). at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\twig\\twig\\src\\Loader\\FilesystemLoader.php:227)"} []
[2022-07-28T21:55:34.066427+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:55:34.067667+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:55:34.073780+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:34.074377+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:55:34.087393+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:34.087835+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:55:34.088986+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:34.089382+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:55:34.091851+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:55:34.095013+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:55:34.098931+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:55:34.100551+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:55:34.129138+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:55:34.167534+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:55:34.563792+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf9c3c"},"request_uri":"http://192.168.0.167/_wdt/cf9c3c","method":"GET"} []
[2022-07-28T21:56:06.609729+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T21:56:06.642563+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:56:06.642690+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:56:06.642771+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:56:06.642843+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:56:06.642917+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:56:06.642986+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:56:06.643066+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:56:06.657948+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:56:06.735871+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:56:06.779575+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:56:06.789305+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:56:06.790740+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:56:06.922955+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:56:06.937447+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:56:06.938337+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:56:06.944773+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:06.945237+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:56:06.959133+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:06.959677+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:56:06.960796+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:06.961253+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:56:06.963700+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:56:06.967309+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:56:06.972214+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:06.999520+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:56:07.020757+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:56:07.544994+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T21:56:07.569703+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T21:56:07.569848+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:56:07.569927+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T21:56:07.569996+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:56:07.570067+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T21:56:07.570133+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:56:07.570205+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T21:56:07.583535+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T21:56:07.645762+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:56:07.647977+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2111fb"},"request_uri":"http://192.168.0.167/_wdt/2111fb","method":"GET"} []
[2022-07-28T21:56:07.663745+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T21:56:07.672189+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T21:56:07.673118+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T21:56:07.708471+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "App\Controller\QrCodeGenerato" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"App\\Controller\\QrCodeGenerato\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T21:56:07.806741+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:56:07.807761+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:56:07.813455+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:07.813880+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:56:07.834595+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:07.835077+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:56:07.836403+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:07.836752+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:56:07.839392+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:56:07.842650+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:56:07.846607+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:07.848239+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T21:56:07.876744+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:56:07.915912+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T21:56:08.235796+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T21:56:08.433871+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T21:56:08.444368+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:56:08.447099+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T21:56:08.463523+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:08.464022+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T21:56:08.477669+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:08.478109+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T21:56:08.479113+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:08.479419+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T21:56:08.481754+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T21:56:08.485038+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T21:56:08.488837+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T21:56:08.515443+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T21:56:08.549916+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:00:12.488421+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:00:12.637813+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:00:12.653865+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:00:12.653983+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:12.654065+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:12.654143+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:12.654218+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:12.654287+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:12.654484+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:00:12.664478+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:00:12.701165+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:00:12.748810+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:00:12.758759+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:00:12.760049+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:12.823491+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:00:12.837909+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:12.838872+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:12.845434+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:12.845875+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:00:12.861430+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:12.863243+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:00:12.865101+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:12.865699+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:00:12.868212+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:00:12.872064+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:00:12.878228+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:12.928427+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:00:13.649535+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:00:13.685205+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:00:13.685327+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:13.685409+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:13.685483+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:13.685557+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:13.685624+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:13.685700+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:00:13.706989+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:00:13.792723+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:00:13.802022+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"351186"},"request_uri":"http://192.168.0.167/_wdt/351186","method":"GET"} []
[2022-07-28T22:00:13.817078+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:00:13.826724+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:00:13.828156+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:13.873419+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:00:14.009681+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:14.011658+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:14.019083+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.019544+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:00:14.031251+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.031671+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:00:14.032852+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.033169+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:00:14.035599+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:00:14.039448+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:00:14.044634+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.046355+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:00:14.084998+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:00:14.124425+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:00:14.596050+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:00:14.834545+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:00:14.866235+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:14.868829+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:14.889905+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.890350+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:00:14.898453+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.898909+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:00:14.899942+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.900302+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:00:14.902908+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:00:14.908238+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:00:14.913489+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:14.952093+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:00:14.993052+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:00:19.529048+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:00:19.565203+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:00:19.565319+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:19.565395+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:19.565462+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:19.565530+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:19.565614+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:19.565833+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:00:19.580513+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:00:19.648015+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:00:19.687750+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:00:19.699007+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:00:19.700402+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:19.758144+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:00:19.768291+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:19.769239+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:19.775196+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:19.775691+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:00:19.789793+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:19.790231+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:00:19.791449+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:19.791847+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:00:19.794485+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:00:19.797618+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:00:19.801486+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:19.821201+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:00:19.840065+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:00:20.158452+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:00:20.185428+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:00:20.185543+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:20.185621+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:00:20.185834+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:20.185913+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:00:20.185980+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:20.186065+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:00:20.199308+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:00:20.262976+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:00:20.280911+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:00:20.289776+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:00:20.290735+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:00:20.324679+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:00:20.330232+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e13ea6"},"request_uri":"http://192.168.0.167/_wdt/e13ea6","method":"GET"} []
[2022-07-28T22:00:20.426500+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:20.427415+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:00:20.432915+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:20.433360+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:00:20.444483+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:20.444888+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:00:20.445896+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:20.446237+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:00:20.448632+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:00:20.451703+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:00:20.455829+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:00:20.457749+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:00:20.488907+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:00:20.527591+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:01:14.375125+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T22:01:14.400610+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:01:14.400731+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:01:14.400809+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:01:14.400891+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:01:14.400970+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:01:14.401036+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:01:14.401109+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:01:14.414519+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:01:14.481407+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:01:14.499762+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:01:14.509809+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:01:14.511675+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:01:14.567314+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T22:01:14.618186+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:01:14.627865+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:01:14.628696+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:01:14.634006+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:14.634287+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:01:14.646943+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:14.647339+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:01:14.648453+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:14.648749+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:01:14.651213+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:01:14.654703+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:01:14.660351+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:14.680337+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:01:14.696574+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:01:15.139179+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5adae"},"request_uri":"http://192.168.0.167/_wdt/f5adae","method":"GET"} []
[2022-07-28T22:01:16.871177+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:01:16.898136+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:01:16.898256+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:01:16.898338+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:01:16.898608+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:01:16.898687+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:01:16.898756+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:01:16.898831+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:01:16.911740+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:01:16.975528+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:01:17.014767+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:01:17.023628+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:01:17.024557+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:01:17.077324+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:01:17.087563+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:01:17.088439+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:01:17.093975+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.094381+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:01:17.107354+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.107833+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:01:17.110124+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.112261+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:01:17.115130+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:01:17.118360+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:01:17.122460+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.141535+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:01:17.158325+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:01:17.462476+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:01:17.488635+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:01:17.488765+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:01:17.488844+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:01:17.488912+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:01:17.488982+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:01:17.489106+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:01:17.489193+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:01:17.504207+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:01:17.509669+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"03f004"},"request_uri":"http://192.168.0.167/_wdt/03f004","method":"GET"} []
[2022-07-28T22:01:17.566217+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:01:17.586109+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:01:17.594570+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:01:17.595477+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:01:17.627704+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:01:17.727692+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:01:17.729076+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:01:17.734848+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.735238+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:01:17.743384+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.743869+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:01:17.744955+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.745350+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:01:17.747766+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:01:17.750990+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:01:17.755206+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:01:17.756943+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:01:17.785586+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:01:17.825347+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:00.689376+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:23:01.491939+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:23:01.492076+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:01.492152+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:01.492217+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:01.492283+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:01.492345+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:01.492415+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:23:01.702941+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:23:03.066937+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:23:03.508520+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:23:03.611729+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:23:03.632139+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:04.373941+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:23:04.576209+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:04.577661+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:04.658496+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:04.659011+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:23:04.731645+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:04.732150+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:23:04.733163+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:04.733457+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:23:04.736193+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:23:04.779819+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:23:04.982020+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:05.263469+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:23:05.518069+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:05.833179+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:23:05.869994+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:23:05.870116+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:05.870203+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:05.870275+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:05.870349+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:05.870418+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:05.870496+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:23:05.889551+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:23:05.972086+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:23:05.998728+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:23:06.008621+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:23:06.010034+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:06.073860+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:23:07.372362+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:07.373357+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:07.379605+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:07.380053+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:23:07.392422+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:07.392951+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:23:07.394250+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:07.394668+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:23:07.396991+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:23:07.400360+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:23:07.405289+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:07.407008+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:23:07.459060+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:23:07.508457+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:07.833120+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:23:08.049479+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:23:08.077686+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:08.080457+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:08.097736+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:08.098219+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:23:08.111408+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:08.111899+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:23:08.113050+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:08.113438+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:23:08.115839+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:23:08.119629+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:23:08.124706+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:08.157836+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:23:08.196484+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:25.746153+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:23:25.784066+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:23:25.784204+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:25.784289+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:25.784359+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:25.784429+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:25.784495+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:25.784568+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:23:25.801236+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:23:25.869712+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:23:25.915361+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:23:25.924478+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:23:25.925753+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:25.979347+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:23:25.990867+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:25.991787+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:25.997453+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:25.997831+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:23:26.010311+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:26.010822+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:23:26.012102+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:26.012802+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:23:26.017028+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:23:26.021101+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:23:26.026040+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:26.046791+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:23:26.069877+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:26.562627+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:23:26.569763+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b9073"},"request_uri":"http://192.168.0.167/_wdt/3b9073","method":"GET"} []
[2022-07-28T22:23:26.587493+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:23:26.587606+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:26.587685+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:26.587768+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:26.587992+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:26.588067+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:26.588141+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:23:26.601243+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:23:26.667405+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:23:26.685583+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:23:26.694993+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:23:26.696254+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:26.729549+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:23:26.845976+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:26.847897+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:26.854458+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:26.854957+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:23:26.868146+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:26.868634+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:23:26.870143+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:26.870535+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:23:26.872969+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:23:26.876346+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:23:26.880239+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:26.881874+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:23:26.912123+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:23:26.953491+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:27.604684+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:23:27.781823+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:23:27.807406+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:27.809797+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:27.823424+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:27.823954+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:23:27.836766+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:27.837227+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:23:27.838753+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:27.839184+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:23:27.841726+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:23:27.845185+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:23:27.850976+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:27.878112+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:23:27.915986+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:44.171677+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:23:44.202198+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:23:44.202313+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:44.202392+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:23:44.202462+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:44.202659+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:23:44.202730+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:44.202948+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:23:44.217577+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:23:44.285901+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:23:44.319579+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:23:44.329508+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:23:44.332183+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:23:44.368973+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:23:44.467397+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:44.468329+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:23:44.474207+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:44.474720+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:23:44.490471+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:44.491005+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:23:44.492155+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:44.492543+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:23:44.494931+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:23:44.498024+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:23:44.501963+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:23:44.503709+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:23:44.532093+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:23:44.572392+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:23:45.012347+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"073484"},"request_uri":"http://192.168.0.167/_wdt/073484","method":"GET"} []
[2022-07-28T22:32:14.724345+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:32:15.834708+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:32:15.834842+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:32:15.834922+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:32:15.834991+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:32:15.835061+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:32:15.835128+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:32:15.835201+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:32:16.264391+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:32:17.823612+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:32:18.432221+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:32:18.543959+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:32:18.576391+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:32:19.308475+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:32:21.657638+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:32:21.659362+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:32:21.739889+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:32:21.740423+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:32:21.810143+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:32:21.810538+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:32:21.814792+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:32:21.815061+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:32:21.817333+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:32:21.877910+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:32:21.976357+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:32:21.978354+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:32:22.226420+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:32:22.606880+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:32:22.671984+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3dc41"},"request_uri":"http://192.168.0.167/_wdt/e3dc41","method":"GET"} []
[2022-07-28T22:38:10.737814+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:38:10.803733+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:38:10.803853+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:38:10.803936+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:38:10.804009+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:38:10.804082+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:38:10.804151+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:38:10.804232+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:38:10.832139+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:38:10.953044+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:38:11.011375+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:38:11.024743+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:38:11.026875+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:38:11.094757+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:38:11.257134+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:38:11.258062+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:38:11.266670+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:11.267129+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:38:11.280791+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:11.281220+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:38:11.282683+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:11.283104+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:38:11.285593+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:38:11.290291+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:38:11.298012+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:11.299784+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:38:11.346767+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:38:11.396798+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:38:11.817462+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98f994"},"request_uri":"http://192.168.0.167/_wdt/98f994","method":"GET"} []
[2022-07-28T22:38:58.873432+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T22:38:58.908428+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:38:58.908546+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:38:58.908755+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:38:58.908831+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:38:58.908902+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:38:58.908969+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:38:58.909043+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:38:58.924182+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:38:59.006719+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:38:59.031799+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:38:59.041721+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:38:59.043133+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:38:59.621631+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T22:38:59.809894+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:38:59.822018+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:38:59.822992+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:38:59.829069+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:59.829432+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:38:59.840802+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:59.841262+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:38:59.842419+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:59.842759+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:38:59.845023+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:38:59.848405+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:38:59.853279+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:38:59.879095+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:38:59.900273+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:39:00.402123+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e02e81"},"request_uri":"http://192.168.0.167/_wdt/e02e81","method":"GET"} []
[2022-07-28T22:39:01.255796+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:39:01.452800+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:39:01.481606+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:39:01.484082+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:39:01.497664+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:01.498112+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:39:01.511234+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:01.511710+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:39:01.512818+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:01.513200+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:39:01.515715+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:39:01.518883+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:39:01.523070+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:01.551308+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:39:01.587920+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:39:03.090492+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:39:03.115289+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:39:03.115403+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:39:03.115481+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:39:03.115554+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:39:03.115624+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:39:03.115688+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:39:03.115760+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:39:03.128556+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:39:03.191832+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:39:03.220643+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:39:03.229313+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:39:03.230205+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:39:03.409053+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:39:03.418868+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:39:03.419800+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:39:03.425407+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:03.425925+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:39:03.438853+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:03.439303+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:39:03.440468+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:03.440895+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:39:03.443338+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:39:03.446710+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:39:03.450544+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:03.471222+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:39:03.487249+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:39:03.806196+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:39:03.832831+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:39:03.832949+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:39:03.833031+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:39:03.833103+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:39:03.833176+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:39:03.833243+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:39:03.833318+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:39:03.847558+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:39:03.857213+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5f9cea"},"request_uri":"http://192.168.0.167/_wdt/5f9cea","method":"GET"} []
[2022-07-28T22:39:03.910135+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:39:03.929389+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:39:03.938385+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:39:03.939352+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:39:03.971974+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:39:04.072202+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:39:04.073172+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:39:04.079521+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:04.080026+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:39:04.092870+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:04.093342+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:39:04.094413+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:04.094773+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:39:04.097633+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:39:04.100684+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:39:04.104489+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:39:04.106130+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:39:04.134705+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:39:04.173522+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:40:35.232041+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:40:35.268763+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:40:35.268876+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:35.268955+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:35.269026+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:35.269098+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:35.269305+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:35.269385+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:40:35.287949+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:40:35.368298+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:40:35.405434+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:40:35.414984+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:40:35.416409+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:35.537318+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:40:35.551691+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:35.552618+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:35.558930+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:35.559360+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:40:35.572155+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:35.572763+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:40:35.574085+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:35.574457+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:40:35.576852+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:40:35.580422+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:40:35.585808+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:35.615905+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:40:35.637454+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:40:36.307804+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:40:36.335248+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:40:36.335366+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:36.335607+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:36.335690+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:36.335761+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:36.335827+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:36.335917+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:40:36.351821+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:40:36.417652+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:40:36.435569+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:40:36.444325+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:40:36.445299+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:36.468107+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6dc843"},"request_uri":"http://192.168.0.167/_wdt/6dc843","method":"GET"} []
[2022-07-28T22:40:36.489893+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:40:36.589554+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:36.590538+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:36.596285+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:36.596714+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:40:36.607712+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:36.608177+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:40:36.609267+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:36.609642+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:40:36.612188+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:40:36.615298+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:40:36.619488+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:36.621344+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:40:36.653090+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:40:36.690007+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:40:37.368206+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:40:37.575854+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:40:37.586933+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:37.589790+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:37.607615+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:37.608114+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:40:37.620643+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:37.621178+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:40:37.622568+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:37.622966+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:40:37.625437+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:40:37.629469+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:40:37.634946+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:37.666947+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:40:37.704026+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:40:57.992145+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:40:58.029787+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:40:58.029928+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:58.030014+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:58.030082+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:58.030153+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:58.030225+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:58.030300+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:40:58.049501+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:40:58.132941+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:40:58.170320+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:40:58.180325+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:40:58.181755+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:58.259578+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:40:58.273979+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:58.275023+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:58.281396+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:58.281787+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:40:58.295751+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:58.296311+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:40:58.297459+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:58.297859+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:40:58.300264+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:40:58.304068+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:40:58.310529+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:58.339150+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:40:58.362102+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:40:58.882098+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"afb425"},"request_uri":"http://192.168.0.167/_wdt/afb425","method":"GET"} []
[2022-07-28T22:40:58.967251+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:40:59.001528+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:40:59.001637+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:59.001716+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:40:59.001787+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:59.001881+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:40:59.001950+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:59.002025+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:40:59.020322+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:40:59.105329+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:40:59.128777+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:40:59.138133+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:40:59.139447+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:40:59.177582+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:40:59.291151+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:59.292088+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:40:59.297518+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:59.297899+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:40:59.310836+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:59.311301+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:40:59.312354+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:59.312750+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:40:59.315161+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:40:59.318406+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:40:59.322299+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:40:59.323972+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:40:59.353271+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:40:59.395422+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:40:59.946127+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:41:00.117871+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:41:00.150512+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:41:00.152827+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:41:00.166372+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:00.166793+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:41:00.179687+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:00.180193+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:41:00.181302+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:00.181707+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:41:00.184065+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:41:00.187232+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:41:00.191011+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:00.218584+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:41:00.254118+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:41:19.493777+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:41:19.531726+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:41:19.531855+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:41:19.531936+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:41:19.532007+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:41:19.532082+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:41:19.532150+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:41:19.532238+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:41:19.551809+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:41:19.631504+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:41:19.670398+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:41:19.679750+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:41:19.681145+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:41:19.740121+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:41:21.457951+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:41:21.676173+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:41:21.708565+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:41:21.711313+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:41:21.728507+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:21.728936+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:41:21.740976+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:21.741473+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:41:21.742622+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:21.743049+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:41:21.745585+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:41:21.749277+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:41:21.754150+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:41:21.787377+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:41:21.832027+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:42:23.552489+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:42:23.588889+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:42:23.589019+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:42:23.589096+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:42:23.589164+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:42:23.589235+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:42:23.589300+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:42:23.589527+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:42:23.607815+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:42:23.692964+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:42:23.717354+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:42:23.726677+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:42:23.728063+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:42:23.759653+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\User::isTotpAuthenticationEnabled() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\User::isTotpAuthenticationEnabled() at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:47)"} []
[2022-07-28T22:42:23.843657+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "isTotpAuthenticationEnabled" of class "App\Entity\User". Did you mean to call "getIsTotpAuthenticationEnabled"?" at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php line 47 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"isTotpAuthenticationEnabled\" of class \"App\\Entity\\User\".\nDid you mean to call \"getIsTotpAuthenticationEnabled\"? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:47)"} []
[2022-07-28T22:42:23.941062+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:42:23.941983+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:42:23.948531+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:42:23.949032+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:42:23.961903+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:42:23.962396+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:42:23.963506+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:42:23.963908+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:42:23.966436+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:42:23.969999+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:42:23.974996+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:42:23.976684+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:42:24.015037+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:42:24.062733+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:42:24.342448+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bf29c9"},"request_uri":"http://192.168.0.167/_wdt/bf29c9","method":"GET"} []
[2022-07-28T22:43:14.919805+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:43:14.957058+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:43:14.957182+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:14.957261+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:14.957362+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:14.957437+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:14.957517+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:14.957683+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:43:14.976093+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:43:15.055461+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:43:15.093321+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:43:15.102928+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:43:15.104329+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:15.152551+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:43:16.742658+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:43:16.947133+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:43:16.966372+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:16.969030+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:16.985453+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:16.985925+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:43:16.998288+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:16.998771+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:43:16.999902+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:17.000463+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:43:17.002875+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:43:17.006029+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:43:17.009913+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:17.035940+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:43:17.070746+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:43:25.072930+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:43:25.108888+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:43:25.109001+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:25.109078+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:25.109147+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:25.109218+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:25.109434+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:25.109514+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:43:25.127293+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:43:25.206633+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:43:25.231487+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:43:25.241025+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:43:25.242417+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:25.310965+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:43:26.716036+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:43:26.923593+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:43:26.934275+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:26.936948+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:26.954169+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:26.954752+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:43:26.968057+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:26.968510+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:43:26.969612+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:26.970014+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:43:26.972446+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:43:26.976072+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:43:26.981052+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:27.013460+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:43:27.052769+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:43:35.326534+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:43:35.365055+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:43:35.365174+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:35.365254+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:35.365326+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:35.365400+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:35.365469+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:35.365543+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:43:35.385982+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:43:35.466174+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:43:35.490651+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:43:35.500124+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:43:35.501555+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:35.524653+02:00] php.CRITICAL: Uncaught Error: Cannot access private property Scheb\TwoFactorBundle\Model\Totp\TotpConfiguration::$secret {"exception":"[object] (Error(code: 0): Cannot access private property Scheb\\TwoFactorBundle\\Model\\Totp\\TotpConfiguration::$secret at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:53)"} []
[2022-07-28T22:43:35.556192+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Cannot access private property Scheb\TwoFactorBundle\Model\Totp\TotpConfiguration::$secret" at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php line 53 {"exception":"[object] (Error(code: 0): Cannot access private property Scheb\\TwoFactorBundle\\Model\\Totp\\TotpConfiguration::$secret at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:53)"} []
[2022-07-28T22:43:35.663109+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:35.664063+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:35.670214+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:35.670612+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:43:35.683067+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:35.683650+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:43:35.684724+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:35.685073+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:43:35.687883+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:43:35.691350+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:43:35.696331+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:35.697951+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:43:35.734337+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:43:35.784206+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:43:36.181716+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8873bc"},"request_uri":"http://192.168.0.167/_wdt/8873bc","method":"GET"} []
[2022-07-28T22:43:46.246059+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:43:46.282674+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:43:46.282788+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:46.282885+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:43:46.282954+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:46.283032+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:43:46.283105+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:46.283315+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:43:46.301717+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:43:46.381702+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:43:46.421868+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:43:46.431256+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:43:46.432639+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:43:46.477537+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:43:48.100189+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:43:48.305645+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:43:48.340757+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:48.343418+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:43:48.359688+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:48.360131+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:43:48.373926+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:48.374487+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:43:48.376073+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:48.376558+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:43:48.379104+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:43:48.382480+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:43:48.386357+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:43:48.412304+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:43:48.450631+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:45:34.670505+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:45:34.708857+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:45:34.708971+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:45:34.709050+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:45:34.709121+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:45:34.709194+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:45:34.709260+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:45:34.709331+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:45:34.727650+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:45:34.806890+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:45:34.849140+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:45:34.860647+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:45:34.862091+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:45:34.880308+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\User::isTotpAuthenticationEnabled() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\User::isTotpAuthenticationEnabled() at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:47)"} []
[2022-07-28T22:45:34.911722+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "isTotpAuthenticationEnabled" of class "App\Entity\User"." at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php line 47 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"isTotpAuthenticationEnabled\" of class \"App\\Entity\\User\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:47)"} []
[2022-07-28T22:45:35.009003+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:45:35.010008+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:45:35.016253+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:35.016653+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:45:35.029937+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:35.030384+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:45:35.031674+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:35.032097+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:45:35.034754+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:45:35.038382+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:45:35.043419+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:35.045109+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:45:35.081223+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:45:35.129211+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:45:35.457500+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e74338"},"request_uri":"http://192.168.0.167/_wdt/e74338","method":"GET"} []
[2022-07-28T22:45:40.947183+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-28T22:45:40.978293+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:45:40.978410+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:45:40.978487+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:45:40.978556+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:45:40.978625+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:45:40.978690+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:45:40.978762+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:45:40.994067+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:45:41.059912+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:45:41.099248+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:45:41.108575+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:45:41.110330+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:45:41.152940+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-28T22:45:41.212625+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:45:41.225670+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:45:41.228405+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:45:41.234585+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:41.234964+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:45:41.247742+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:41.248223+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:45:41.249853+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:41.250326+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:45:41.252925+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:45:41.256547+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:45:41.261417+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:41.287677+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:45:41.309034+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:45:41.762662+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"51c9d5"},"request_uri":"http://192.168.0.167/_wdt/51c9d5","method":"GET"} []
[2022-07-28T22:45:42.222517+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:45:42.421771+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:45:42.444520+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:45:42.447158+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:45:42.463933+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:42.464446+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:45:42.481584+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:42.482038+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:45:42.484064+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:42.484528+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:45:42.486939+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:45:42.490049+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:45:42.493933+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:45:42.520373+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:45:42.552856+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:49:50.007690+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:49:50.045265+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:49:50.045609+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:49:50.045699+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:49:50.045807+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:49:50.045880+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:49:50.045979+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:49:50.046055+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:49:50.066327+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:49:50.145624+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:49:50.183989+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:49:50.193640+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:49:50.195101+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:49:50.241990+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T22:49:50.252909+02:00] doctrine.DEBUG: Executing statement: UPDATE user SET totp_secret = ? WHERE id = ? (parameters: array{"1":"GGTWCXRHS5IFG5HWTNHZKW4ALXRSP5DWDT6TH2H2HCLFT6HLPMHA","2":1}, types: array{"1":2,"2":1}) {"sql":"UPDATE user SET totp_secret = ? WHERE id = ?","params":{"1":"GGTWCXRHS5IFG5HWTNHZKW4ALXRSP5DWDT6TH2H2HCLFT6HLPMHA","2":1},"types":{"1":2,"2":1}} []
[2022-07-28T22:49:50.254860+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T22:49:50.265000+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\User::getTotpSecret() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\User::getTotpSecret() at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:53)"} []
[2022-07-28T22:49:50.294629+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "getTotpSecret" of class "App\Entity\User". Did you mean to call "setTotpSecret"?" at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php line 53 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"getTotpSecret\" of class \"App\\Entity\\User\".\nDid you mean to call \"setTotpSecret\"? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:53)"} []
[2022-07-28T22:49:50.378460+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:49:50.379401+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:49:50.385690+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:49:50.386106+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:49:50.401649+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:49:50.402167+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:49:50.403352+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:49:50.403790+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:49:50.406236+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:49:50.409809+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:49:50.417012+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:49:50.418711+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:49:50.450404+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:49:50.491051+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:49:50.894891+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e1e2ac"},"request_uri":"http://192.168.0.167/_wdt/e1e2ac","method":"GET"} []
[2022-07-28T22:50:08.310534+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:50:08.350507+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:50:08.350619+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:50:08.350696+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:50:08.350763+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:50:08.350852+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:50:08.350926+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:50:08.351005+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:50:08.369749+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:50:08.450994+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:50:08.495291+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:50:08.505046+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:50:08.506463+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:50:08.579338+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:50:08.593448+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:50:08.594370+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:50:08.600680+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:08.601096+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:50:08.617222+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:08.617721+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:50:08.619046+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:08.619489+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:50:08.621865+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:50:08.625751+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:50:08.630921+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:08.658714+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:50:08.688647+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:50:09.341665+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb277d"},"request_uri":"http://192.168.0.167/_wdt/eb277d","method":"GET"} []
[2022-07-28T22:50:09.434421+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:50:09.469847+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:50:09.469980+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:50:09.470064+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:50:09.470373+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:50:09.470467+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:50:09.470546+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:50:09.470628+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:50:09.491123+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:50:09.590626+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:50:09.616424+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:50:09.626008+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:50:09.627389+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:50:09.668114+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:50:09.778838+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:50:09.779773+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:50:09.785286+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:09.785784+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:50:09.798912+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:09.799329+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:50:09.800428+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:09.800844+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:50:09.803185+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:50:09.806287+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:50:09.810221+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:09.811870+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:50:09.841032+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:50:09.879204+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:50:10.391770+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:50:10.565261+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:50:10.596402+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:50:10.598762+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:50:10.612631+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:10.613077+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:50:10.626077+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:10.626601+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:50:10.627984+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:10.628408+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:50:10.630804+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:50:10.634079+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:50:10.638207+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:50:10.664388+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:50:10.700210+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:51:23.157767+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:51:23.194924+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:51:23.195037+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:51:23.195117+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:51:23.195349+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:51:23.195429+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:51:23.195498+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:51:23.195572+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:51:23.213929+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:51:23.296286+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:51:23.343317+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:51:23.353180+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:51:23.354638+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:51:23.373005+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\User::getTotpSecret() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\User::getTotpSecret() at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:53)"} []
[2022-07-28T22:51:23.413750+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "getTotpSecret" of class "App\Entity\User". Did you mean to call "setTotpSecret"?" at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php line 53 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"getTotpSecret\" of class \"App\\Entity\\User\".\nDid you mean to call \"setTotpSecret\"? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:53)"} []
[2022-07-28T22:51:23.511789+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:51:23.512702+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:51:23.518865+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:51:23.519207+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:51:23.532559+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:51:23.533057+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:51:23.534165+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:51:23.534568+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:51:23.537072+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:51:23.540735+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:51:23.546019+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:51:23.547812+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:51:23.584198+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:51:23.631775+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:51:24.038687+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5da25f"},"request_uri":"http://192.168.0.167/_wdt/5da25f","method":"GET"} []
[2022-07-28T22:52:03.179999+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:52:03.217864+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:52:03.217991+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:52:03.218073+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:52:03.218144+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:52:03.218215+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:52:03.218282+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:52:03.218358+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:52:03.233380+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:52:03.318506+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:52:03.343270+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:52:03.352863+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:52:03.354321+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:52:03.379642+02:00] php.CRITICAL: Uncaught Error: Too few arguments to function App\Entity\User::getTotpSecret(), 0 passed in C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php on line 53 and exactly 1 expected {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\User::getTotpSecret(), 0 passed in C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php on line 53 and exactly 1 expected at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Entity\\User.php:248)"} []
[2022-07-28T22:52:03.404767+02:00] request.CRITICAL: Uncaught PHP Exception ArgumentCountError: "Too few arguments to function App\Entity\User::getTotpSecret(), 0 passed in C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php on line 53 and exactly 1 expected" at C:\xampp\htdocs\ecommerce\tablouri\src\Entity\User.php line 248 {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\User::getTotpSecret(), 0 passed in C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php on line 53 and exactly 1 expected at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Entity\\User.php:248)"} []
[2022-07-28T22:52:03.489335+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:52:03.490302+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:52:03.496396+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:03.496772+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:52:03.510125+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:03.510615+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:52:03.511854+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:03.512270+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:52:03.514656+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:52:03.518384+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:52:03.523340+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:03.525059+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:52:03.554454+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:52:03.597295+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:52:03.969886+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"12718b"},"request_uri":"http://192.168.0.167/_wdt/12718b","method":"GET"} []
[2022-07-28T22:52:27.063402+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:52:27.103336+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:52:27.103462+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:52:27.103545+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:52:27.103779+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:52:27.103860+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:52:27.103930+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:52:27.104007+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:52:27.120897+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:52:27.211106+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:52:27.235071+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:52:27.244545+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:52:27.245880+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:52:27.273128+02:00] php.CRITICAL: Uncaught Error: App\Entity\User::getTotpSecret(): Return value must be of type App\Entity\User, string returned {"exception":"[object] (TypeError(code: 0): App\\Entity\\User::getTotpSecret(): Return value must be of type App\\Entity\\User, string returned at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Entity\\User.php:250)"} []
[2022-07-28T22:52:27.301261+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "App\Entity\User::getTotpSecret(): Return value must be of type App\Entity\User, string returned" at C:\xampp\htdocs\ecommerce\tablouri\src\Entity\User.php line 250 {"exception":"[object] (TypeError(code: 0): App\\Entity\\User::getTotpSecret(): Return value must be of type App\\Entity\\User, string returned at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Entity\\User.php:250)"} []
[2022-07-28T22:52:27.385719+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:52:27.387010+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:52:27.394037+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:27.394648+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:52:27.408272+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:27.408718+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:52:27.409827+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:27.410184+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:52:27.412576+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:52:27.415704+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:52:27.419798+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:52:27.421439+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:52:27.447332+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:52:27.486636+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:52:27.778633+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42fc04"},"request_uri":"http://192.168.0.167/_wdt/42fc04","method":"GET"} []
[2022-07-28T22:54:50.433850+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:54:51.100675+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:54:51.116323+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:54:51.116436+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:54:51.116517+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:54:51.116588+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:54:51.116660+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:54:51.116729+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:54:51.116806+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:54:51.126785+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:54:51.163387+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:54:51.187568+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:54:51.197356+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:54:51.198762+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:54:51.256477+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:54:51.270401+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:54:51.271267+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:54:51.277443+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:51.277816+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:54:51.291013+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:51.291543+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:54:51.293772+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:51.294253+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:54:51.297086+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:54:51.300904+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:54:51.306687+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:51.359439+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:54:52.178367+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b01a01"},"request_uri":"http://192.168.0.167/_wdt/b01a01","method":"GET"} []
tication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:54:52.214460+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:54:52.214574+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:54:52.214655+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:54:52.214725+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:54:52.214795+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:54:52.214861+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:54:52.214934+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:54:52.232744+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:54:52.316353+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:54:52.342112+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:54:52.352266+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:54:52.353685+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:54:52.398833+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:54:52.563690+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:54:52.564703+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:54:52.571522+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:52.572418+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:54:52.587567+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:52.588065+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:54:52.589162+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:52.589692+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:54:52.592176+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:54:52.595806+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:54:52.601407+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:52.603289+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:54:52.641337+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:54:52.685232+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:54:53.103550+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:54:53.309027+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:54:53.320241+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:54:53.322773+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:54:53.339673+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:53.340165+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:54:53.353816+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:53.354255+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:54:53.355312+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:53.355627+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:54:53.357902+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:54:53.361570+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:54:53.366782+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:54:53.396970+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:54:53.436158+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:55:18.997093+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:55:19.096770+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:55:19.114135+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:55:19.114269+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:55:19.114353+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:55:19.114427+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:55:19.114503+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:55:19.114573+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:55:19.114653+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:55:19.125909+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:55:19.162805+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:55:19.189510+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:55:19.200261+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:55:19.201808+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:55:19.216161+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:55:19.255269+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:55:20.873041+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:55:21.083606+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:55:21.094793+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:55:21.097377+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:55:21.114834+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:21.115256+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:55:21.127303+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:21.127744+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:55:21.128844+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:21.129269+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:55:21.131700+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:55:21.135263+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:55:21.140276+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:21.172971+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:55:21.241083+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:55:26.053653+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:55:26.094551+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:55:26.094665+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:55:26.094743+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:55:26.094812+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:55:26.094883+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:55:26.094949+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:55:26.095023+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:55:26.113641+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:55:26.197060+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:55:26.233625+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:55:26.242882+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:55:26.244449+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:55:26.264243+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:55:26.289702+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:55:27.553139+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:55:27.767840+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:55:27.797184+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:55:27.799765+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:55:27.816323+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:27.816732+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:55:27.829698+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:27.830146+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:55:27.831489+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:27.831883+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:55:27.834282+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:55:27.837836+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:55:27.842595+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:27.874111+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:55:27.911484+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:55:45.730948+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:55:45.767452+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:55:45.767727+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:55:45.767812+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:55:45.767882+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:55:45.767953+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:55:45.768033+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:55:45.768113+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:55:45.786500+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:55:45.865648+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:55:45.900236+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:55:45.909766+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:55:45.911208+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:55:45.929056+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:55:45.955267+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:55:47.444001+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:55:47.614411+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:55:47.640571+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:55:47.642876+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:55:47.656211+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:47.656626+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:55:47.669685+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:47.670178+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:55:47.671283+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:47.671688+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:55:47.674311+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:55:47.677413+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:55:47.681302+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:55:47.707134+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:55:47.741735+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:57:27.481623+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:57:27.583326+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-28T22:57:27.598449+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:57:27.598557+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:57:27.598637+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:57:27.598708+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:57:27.598944+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:57:27.599020+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:57:27.599098+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:57:27.608953+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:57:27.642076+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:57:27.679260+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:57:27.688757+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:57:27.690016+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:57:27.749401+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:57:27.763181+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:57:27.764108+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:57:27.770207+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:27.770642+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:57:27.782541+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:27.783011+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:57:27.784276+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:27.784651+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:57:27.787555+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:57:27.791096+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:57:27.796418+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:27.842901+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:57:28.556952+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-28T22:57:28.591140+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-28T22:57:28.591255+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:57:28.591335+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-28T22:57:28.591404+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:57:28.591474+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-28T22:57:28.591718+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:57:28.591799+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-28T22:57:28.609348+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-28T22:57:28.647384+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63daef"},"request_uri":"http://192.168.0.167/_wdt/63daef","method":"GET"} []
[2022-07-28T22:57:28.688012+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:57:28.712293+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-28T22:57:28.721911+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-28T22:57:28.723365+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-28T22:57:28.767257+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-28T22:57:28.883037+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:57:28.883928+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:57:28.890025+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:28.890395+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:57:28.907566+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:28.908087+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:57:28.909331+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:28.909754+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:57:28.912154+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:57:28.915631+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:57:28.920462+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:28.922078+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-28T22:57:28.957299+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:57:28.999256+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T22:57:29.569442+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-28T22:57:29.767450+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-28T22:57:29.787403+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:57:29.790014+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-28T22:57:29.806719+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:29.807186+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-28T22:57:29.820553+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:29.821051+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-28T22:57:29.822353+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:29.822740+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-28T22:57:29.825086+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-28T22:57:29.828747+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T22:57:29.833705+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-28T22:57:29.864340+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-28T22:57:29.909611+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:31:34.708756+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:31:35.855986+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:31:35.885223+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T09:31:36.609357+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:31:37.349713+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:31:37.723273+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:31:37.874553+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:31:37.887456+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:31:38.060779+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:31:38.259505+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:38.262097+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:38.333040+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:38.333597+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:31:38.395450+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:38.395914+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:31:38.397802+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:38.398168+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:31:38.400532+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:31:38.440905+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:31:38.530995+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:38.738930+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:31:39.572697+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"338859"},"request_uri":"http://192.168.0.167/_wdt/338859","method":"GET"} []
[2022-07-29T09:31:40.317977+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T09:31:40.746572+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:31:40.771796+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:40.774463+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:40.791374+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:40.791806+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:31:40.803447+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:40.803914+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:31:40.805819+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:40.806288+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:31:40.808845+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:31:40.812318+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:31:40.817199+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:40.857386+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:31:40.892558+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:31:50.386673+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T09:31:50.399853+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T09:31:50.485512+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references interface "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticatorInterface" but no such service exists. Did you create a class that implements this interface?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references interface \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticatorInterface\" but no such service exists. Did you create a class that implements this interface? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T09:31:50.577349+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:31:50.609305+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:31:50.649977+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:31:50.658960+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:31:50.669979+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:50.670982+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:50.676629+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:50.677024+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:31:50.688315+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:50.688771+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:31:50.690188+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:50.690569+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:31:50.693061+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:31:50.696141+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:31:50.700270+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:50.702091+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:31:50.730584+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:31:50.765493+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:31:51.125116+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5a23b"},"request_uri":"http://192.168.0.167/_wdt/d5a23b","method":"GET"} []
[2022-07-29T09:31:56.622771+02:00] request.INFO: Matched route "app_logout". {"route":"app_logout","route_parameters":{"_route":"app_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"http://192.168.0.167/logout","method":"GET"} []
[2022-07-29T09:31:56.633485+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T09:31:56.712083+02:00] request.CRITICAL: Uncaught PHP Exception Exception: "logout() should never be reached" at C:\xampp\htdocs\ecommerce\tablouri\src\Controller\SecurityController.php line 37 {"exception":"[object] (Exception(code: 0): logout() should never be reached at C:\\xampp\\htdocs\\ecommerce\\tablouri\\src\\Controller\\SecurityController.php:37)"} []
[2022-07-29T09:31:56.788798+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:31:56.814705+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:31:56.834438+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:31:56.843178+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:31:56.855078+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:56.855952+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:31:56.862168+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:56.862602+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:31:56.884560+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:56.885088+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:31:56.886412+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:56.886784+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:31:56.889482+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:31:56.893197+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:31:56.898248+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:31:56.900475+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:31:56.926109+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:31:56.962655+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:31:57.264141+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"59dd3e"},"request_uri":"http://192.168.0.167/_wdt/59dd3e","method":"GET"} []
[2022-07-29T09:32:21.045758+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:21.146639+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:32:21.160760+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:21.160875+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:21.160951+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:21.161018+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:21.161090+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:32:21.206413+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:21.274881+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:32:21.338805+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:32:21.351914+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:32:21.353478+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:32:21.372419+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:21.386023+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:32:21.399393+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:21.400456+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:21.407162+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:21.407555+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:21.419856+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:21.420383+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:21.421647+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:21.422072+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:21.424534+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:21.428289+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:21.433755+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:21.481762+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:22.185744+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"798b99"},"request_uri":"http://192.168.0.167/_wdt/798b99","method":"GET"} []
[2022-07-29T09:32:22.472684+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T09:32:22.649097+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:22.673386+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:22.675672+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:22.689570+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:22.690047+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:22.701568+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:22.702055+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:22.703454+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:22.703841+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:22.706840+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:22.710525+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:22.714482+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:22.740309+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:22.771455+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:24.423171+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:32:24.447597+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:24.447711+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:24.447788+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:24.447857+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:24.447929+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:32:24.525165+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:24.596732+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:32:24.642692+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:32:24.651123+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:32:24.653524+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:32:24.655063+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:24.670736+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:32:24.680200+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:24.681056+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:24.686533+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:24.686856+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:24.698602+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:24.699067+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:24.700135+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:24.700472+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:24.702771+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:24.705919+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:24.709759+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:24.728573+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:24.743209+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:25.142272+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a00f0"},"request_uri":"http://192.168.0.167/_wdt/5a00f0","method":"GET"} []
[2022-07-29T09:32:28.491298+02:00] request.INFO: Matched route "app_logout". {"route":"app_logout","route_parameters":{"_route":"app_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"http://192.168.0.167/logout","method":"GET"} []
[2022-07-29T09:32:28.515450+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:28.515563+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:28.515639+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:28.515714+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:28.515789+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:32:28.543038+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:32:28.604919+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:28.638385+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:32:28.647980+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:32:28.648978+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:28.680678+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-29T09:32:28.717387+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:28.718338+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:28.723890+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:28.724261+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:28.736192+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:28.736653+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:28.737729+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:28.738118+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:28.740794+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:28.743947+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:28.747957+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:28.761052+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:28.774712+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:29.043993+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:32:29.066296+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:29.066406+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:29.066480+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:29.066547+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:29.066619+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:29.142763+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:29.197361+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:32:29.281367+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:29.282250+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:29.287589+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:29.287921+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:29.299877+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:29.300606+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:29.301874+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:29.302244+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:29.304561+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:29.307693+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:29.311484+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:29.329712+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:29.345049+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:29.677936+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db39f3"},"request_uri":"http://192.168.0.167/_wdt/db39f3","method":"GET"} []
[2022-07-29T09:32:30.946677+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-29T09:32:30.970840+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:30.970956+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:30.971035+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:30.971103+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:30.971358+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:31.093998+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:31.108583+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:31.111085+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:31.135626+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:31.136174+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:31.150207+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:31.152429+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:31.153707+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:31.154424+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:31.165614+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:31.169324+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:31.173494+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:31.196187+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:31.216610+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:31.530263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cb13b3"},"request_uri":"http://192.168.0.167/_wdt/cb13b3","method":"GET"} []
[2022-07-29T09:32:34.480549+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-29T09:32:34.510150+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:34.510263+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:34.510351+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:34.510667+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:34.883628+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:34.920339+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"abraca_admin@example.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"abraca_admin@example.com"},"types":{"1":2}} []
[2022-07-29T09:32:35.700745+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"abraca_admin@example.com\", roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:35.744351+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-29T09:32:35.745644+02:00] security.DEBUG: Remember-me was requested; setting cookie. [] []
[2022-07-29T09:32:35.775306+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:35.804458+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:32:35.824187+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:35.825136+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:35.831529+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:35.831962+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:35.844849+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:35.845378+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:35.846553+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:35.847149+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:35.849551+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:35.853154+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:35.858122+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:35.889024+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:36.267557+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:32:36.300539+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:36.300653+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:36.300731+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:36.300801+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:36.300878+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:32:36.405364+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:36.475458+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:32:36.525072+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:32:36.534413+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:32:36.535721+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:32:36.537132+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:36.552918+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:32:36.562890+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:36.563814+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:36.569466+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:36.569851+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:36.582975+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:36.583706+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:36.584832+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:36.585214+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:36.587619+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:36.590760+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:36.594684+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:36.618034+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:36.633225+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:37.024251+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"05f548"},"request_uri":"http://192.168.0.167/_wdt/05f548","method":"GET"} []
[2022-07-29T09:32:55.246570+02:00] request.INFO: Matched route "app_cart". {"route":"app_cart","route_parameters":{"_route":"app_cart","_controller":"App\\Controller\\CartController::cart"},"request_uri":"http://192.168.0.167/cart","method":"GET"} []
[2022-07-29T09:32:55.276442+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:32:55.276556+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:55.276634+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:32:55.276708+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:55.276782+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:32:55.325583+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:32:55.401441+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:32:55.436997+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:32:55.446596+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:32:55.447922+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:32:55.463942+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:32:55.476400+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:55.477287+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:32:55.483408+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:55.483761+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:32:55.500207+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:55.500667+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:32:55.501794+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:55.502160+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:32:55.504884+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:32:55.508673+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:32:55.513707+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:32:55.536036+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:32:55.558441+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:32:55.889580+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e26930"},"request_uri":"http://192.168.0.167/_wdt/e26930","method":"GET"} []
[2022-07-29T09:33:02.497995+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T09:33:02.521163+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:33:02.521273+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:33:02.521348+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:33:02.521417+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:33:02.521492+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:33:02.599001+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:33:02.729640+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T09:33:02.772239+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:33:02.778681+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:33:02.779914+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:33:02.780834+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:33:02.796238+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:33:02.807157+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:33:02.807993+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:33:02.813729+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:02.814138+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:33:02.827233+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:02.827674+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:33:02.828933+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:02.829295+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:33:02.831651+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:33:02.834794+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:33:02.838889+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:02.857536+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:33:02.872230+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:33:03.197549+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b72bc7"},"request_uri":"http://192.168.0.167/_wdt/b72bc7","method":"GET"} []
[2022-07-29T09:33:05.629607+02:00] request.INFO: Matched route "app_cart". {"route":"app_cart","route_parameters":{"_route":"app_cart","_controller":"App\\Controller\\CartController::cart"},"request_uri":"http://192.168.0.167/cart","method":"GET"} []
[2022-07-29T09:33:05.652374+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:33:05.652490+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:33:05.652573+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:33:05.652860+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:33:05.652941+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:33:05.693643+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:33:05.757150+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:33:05.796834+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:33:05.805149+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:33:05.806070+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:33:05.821073+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:33:05.831032+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:33:05.831895+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:33:05.837284+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:05.837604+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:33:05.848835+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:05.849343+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:33:05.850626+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:05.851056+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:33:05.853902+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:33:05.858263+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:33:05.862326+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:05.881175+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:33:05.896223+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:33:06.207180+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"003407"},"request_uri":"http://192.168.0.167/_wdt/003407","method":"GET"} []
[2022-07-29T09:33:10.487267+02:00] request.INFO: Matched route "app_comment". {"route":"app_comment","route_parameters":{"_route":"app_comment","_controller":"App\\Controller\\ProductPageController::comment"},"request_uri":"http://192.168.0.167/comment?comment=","method":"GET"} []
[2022-07-29T09:33:10.510865+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:33:10.510981+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:33:10.511063+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:33:10.511133+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:33:10.511208+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:33:10.555683+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:33:10.613106+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:33:10.651707+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:33:10.660163+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:33:10.660831+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:33:10.672259+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:33:10.673157+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:33:10.678700+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:10.679068+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:33:10.691868+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:10.692571+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:33:10.693651+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:10.694049+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:33:10.696486+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:33:10.699752+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:33:10.703725+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:33:10.717426+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:33:10.731764+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:34:16.829750+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:34:16.853323+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:34:16.853441+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:34:16.853517+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:34:16.853586+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:34:16.853666+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:34:16.934672+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:34:16.989658+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:34:17.035499+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:34:17.043982+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:34:17.045407+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:34:17.046343+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:34:17.061567+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:34:17.070790+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:34:17.071660+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:34:17.077174+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:17.077535+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:34:17.088743+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:17.089188+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:34:17.090320+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:17.090698+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:34:17.093078+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:34:17.096478+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:34:17.100396+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:17.118833+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:34:17.133787+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:34:17.452893+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f8f144"},"request_uri":"http://192.168.0.167/_wdt/f8f144","method":"GET"} []
[2022-07-29T09:34:19.274792+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T09:34:19.298458+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:34:19.298613+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:34:19.298693+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:34:19.298766+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:34:19.298845+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:34:19.380317+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:34:19.437788+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T09:34:19.487154+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:34:19.494394+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:34:19.495694+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:34:19.496636+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:34:19.514177+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:34:19.525334+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:34:19.526145+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:34:19.531846+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:19.532145+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:34:19.544977+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:19.545405+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:34:19.546416+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:19.546752+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:34:19.549193+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:34:19.552445+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:34:19.556330+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:34:19.574724+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:34:19.589090+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:34:19.956455+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d37ab"},"request_uri":"http://192.168.0.167/_wdt/5d37ab","method":"GET"} []
[2022-07-29T09:35:30.563513+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:35:30.596490+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:35:30.596605+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:35:30.596682+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:35:30.596753+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:35:30.596829+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:35:30.696956+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:35:30.761978+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:35:30.816490+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:35:30.826252+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:35:30.827619+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:35:30.828970+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:35:30.849582+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:35:30.862164+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:35:30.863087+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:35:30.869274+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:35:30.869647+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:35:30.882200+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:35:30.882720+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:35:30.883913+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:35:30.884338+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:35:30.887068+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:35:30.890685+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:35:30.895700+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:35:30.920462+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:35:30.938390+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:35:31.294116+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66e5f6"},"request_uri":"http://192.168.0.167/_wdt/66e5f6","method":"GET"} []
[2022-07-29T09:36:55.095015+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T09:36:55.118557+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:36:55.118670+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:36:55.118746+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:36:55.118814+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:36:55.119077+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:36:55.200377+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:36:55.270424+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T09:36:55.316552+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:36:55.322858+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:36:55.324020+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:36:55.324947+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:36:55.340169+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:36:55.349734+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:36:55.350808+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:36:55.359294+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:36:55.359653+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:36:55.371908+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:36:55.372629+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:36:55.373833+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:36:55.374201+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:36:55.376559+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:36:55.379866+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:36:55.384035+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:36:55.403023+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:36:55.419010+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:36:55.762463+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a5a8f6"},"request_uri":"http://192.168.0.167/_wdt/a5a8f6","method":"GET"} []
[2022-07-29T09:40:13.932028+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:13.932797+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:14.046748+02:00] request.INFO: Matched route "app_logout". {"route":"app_logout","route_parameters":{"_route":"app_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"http://192.168.0.167/logout","method":"GET"} []
[2022-07-29T09:40:14.060374+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:14.060469+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:14.060547+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:14.060617+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:14.060691+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:40:14.072776+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:40:14.106824+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:14.153021+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-29T09:40:14.163128+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"abraca_admin@example.com"} []
[2022-07-29T09:40:14.164326+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:14.168003+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-29T09:40:14.201460+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:14.204342+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:14.210930+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:14.211317+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:14.225714+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:14.226331+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:14.228208+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:14.228552+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:14.230884+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:14.234380+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:14.239705+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:14.294542+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:14.686845+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:40:14.721865+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:14.721981+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:14.722072+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:14.722151+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:14.722228+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:14.821928+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:14.894768+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:40:14.988113+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:14.989088+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:14.995027+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:14.995389+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:15.003592+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:15.004049+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:15.005267+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:15.005621+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:15.007902+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:15.011283+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:15.016018+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:15.039536+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:15.057421+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:15.472308+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c8c76"},"request_uri":"http://192.168.0.167/_wdt/0c8c76","method":"GET"} []
[2022-07-29T09:40:16.698151+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"GET"} []
[2022-07-29T09:40:16.722847+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:16.722958+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:16.723035+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:16.723295+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:16.723377+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:17.302520+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:18.576395+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:18.579098+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:18.585397+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:18.585785+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:18.597710+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:18.598215+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:18.599352+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:18.599777+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:18.602405+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:18.606117+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:18.611206+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:18.638597+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:18.664653+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:19.097927+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"085a91"},"request_uri":"http://192.168.0.167/_wdt/085a91","method":"GET"} []
[2022-07-29T09:40:31.933977+02:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://192.168.0.167/register","method":"POST"} []
[2022-07-29T09:40:31.976175+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:31.976288+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:31.976375+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:31.976446+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:31.976893+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:32.155462+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:33.592480+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 2 (parameters: array{"1":"stefy2222@stefy.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 2","params":{"1":"stefy2222@stefy.com"},"types":{"1":2}} []
[2022-07-29T09:40:34.294925+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-29T09:40:34.341715+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, first_name, password, is_verified, totp_secret) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"stefy2222@stefy.com","2":"[]","3":null,"4":"$2y$13$Uv7KXgJorBEntPx79VGs9eQHMS89S5.jrin2ZCMUuHJJX.G6ZY7ne","5":0,"6":null}, types: array{"1":2,"2":2,"3":2,"4":2,"5":5,"6":2}) {"sql":"INSERT INTO user (email, roles, first_name, password, is_verified, totp_secret) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"stefy2222@stefy.com","2":"[]","3":null,"4":"$2y$13$Uv7KXgJorBEntPx79VGs9eQHMS89S5.jrin2ZCMUuHJJX.G6ZY7ne","5":0,"6":null},"types":{"1":2,"2":2,"3":2,"4":2,"5":5,"6":2}} []
[2022-07-29T09:40:34.345359+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-29T09:40:34.406459+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:34.407375+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:34.413566+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:34.413978+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:34.426110+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:34.426607+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:34.427969+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:34.428395+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:34.430827+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:34.434580+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:34.439900+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:34.454289+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:34.478249+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:34.772994+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:40:34.795983+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:34.796094+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:34.796170+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:34.796240+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:34.796315+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:34.873147+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:34.928876+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:40:35.000799+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:35.001671+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:35.006990+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:35.007308+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:35.021532+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:35.022017+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:35.023324+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:35.023731+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:35.026191+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:35.029308+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:35.033213+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:35.055547+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:35.069043+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:35.430906+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fcf3b8"},"request_uri":"http://192.168.0.167/_wdt/fcf3b8","method":"GET"} []
[2022-07-29T09:40:46.009306+02:00] request.INFO: Matched route "app_verify_email". {"route":"app_verify_email","route_parameters":{"_route":"app_verify_email","_controller":"App\\Controller\\RegistrationController::verifyUserEmail"},"request_uri":"http://192.168.0.167/verify?expires=1659084034&id=22&signature=HnuiPFKiIiy5V6EEMHCjmPrpR9tLBglzUhK94qOSNYM%3D&token=VzzgeNEC1hE4AJImdvDtRh50BgX4wcQyrgn9N0%2FT8YY%3D","method":"GET"} []
[2022-07-29T09:40:46.039228+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:46.039343+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:46.039419+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:46.039495+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:46.039569+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:46.140272+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:46.182224+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"22"}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":"22"},"types":{"1":1}} []
[2022-07-29T09:40:46.196501+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-29T09:40:46.197705+02:00] doctrine.DEBUG: Executing statement: UPDATE user SET is_verified = ? WHERE id = ? (parameters: array{"1":1,"2":22}, types: array{"1":5,"2":1}) {"sql":"UPDATE user SET is_verified = ? WHERE id = ?","params":{"1":1,"2":22},"types":{"1":5,"2":1}} []
[2022-07-29T09:40:46.201470+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-29T09:40:46.248681+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:46.249578+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:46.255458+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.255797+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:46.267790+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.268296+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:46.269410+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.269808+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:46.272236+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:46.275728+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:46.280728+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.293704+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:46.311740+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:46.580221+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"GET"} []
[2022-07-29T09:40:46.602849+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:46.602960+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:46.603037+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:46.603107+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:46.603181+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:46.716273+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:46.740310+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:46.742634+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:46.756206+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.756630+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:46.765113+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.765607+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:46.766926+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.767332+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:46.769638+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:46.772596+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:46.776423+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:46.796500+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:46.809533+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:47.107323+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6f81db"},"request_uri":"http://192.168.0.167/_wdt/6f81db","method":"GET"} []
[2022-07-29T09:40:50.975663+02:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://192.168.0.167/login","method":"POST"} []
[2022-07-29T09:40:51.005072+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:51.005200+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:51.005287+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:51.005810+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:51.127608+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:51.171394+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"stefy2222@stefy.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"stefy2222@stefy.com"},"types":{"1":2}} []
[2022-07-29T09:40:51.824926+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"stefy2222@stefy.com\", roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:51.842023+02:00] security.DEBUG: Clearing remember-me cookie. {"name":"REMEMBERME"} []
[2022-07-29T09:40:51.843301+02:00] security.DEBUG: Remember-me was requested; setting cookie. [] []
[2022-07-29T09:40:51.844807+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:51.874018+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:40:51.893259+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:51.894103+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:51.900218+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:51.900655+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:51.913606+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:51.914950+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:51.916363+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:51.916745+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:51.919146+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:51.922864+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:51.927952+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:51.961120+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:52.325396+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:40:52.356322+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:40:52.356437+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:52.356513+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:40:52.356582+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:52.356657+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:40:52.454484+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:40:52.525227+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:40:52.577017+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:40:52.586299+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T09:40:52.587550+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T09:40:52.588816+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:40:52.604252+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:40:52.614288+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:52.615188+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:40:52.620546+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:52.620865+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:40:52.635416+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:52.636054+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:40:52.637212+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:52.637648+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:40:52.640197+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:40:52.643229+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:40:52.647146+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:40:52.669781+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:40:52.684785+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:40:53.041823+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"08596a"},"request_uri":"http://192.168.0.167/_wdt/08596a","method":"GET"} []
[2022-07-29T09:41:53.962166+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T09:41:53.985373+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:41:53.985478+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:41:53.985552+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:41:53.985619+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:41:53.985725+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:41:54.063281+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:41:54.110410+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T09:41:54.155311+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:41:54.161340+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T09:41:54.162526+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T09:41:54.163736+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:41:54.178724+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:41:54.188079+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:41:54.188957+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:41:54.194385+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:41:54.194721+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:41:54.206758+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:41:54.207203+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:41:54.208470+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:41:54.208812+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:41:54.211188+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:41:54.214346+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:41:54.218468+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:41:54.237125+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:41:54.251877+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:41:54.623148+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a179a"},"request_uri":"http://192.168.0.167/_wdt/7a179a","method":"GET"} []
[2022-07-29T09:42:08.383690+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T09:42:08.406792+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:42:08.407109+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:42:08.407191+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:42:08.407260+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:42:08.407332+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:42:08.484282+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:42:08.528107+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T09:42:08.571114+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:42:08.577301+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T09:42:08.578734+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T09:42:08.579647+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:42:08.594809+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:42:08.604392+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:42:08.605273+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:42:08.611009+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:42:08.611405+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:42:08.624518+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:42:08.625000+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:42:08.626051+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:42:08.626404+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:42:08.628919+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:42:08.632155+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:42:08.636184+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:42:08.654963+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:42:08.669996+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:42:08.982680+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"788322"},"request_uri":"http://192.168.0.167/_wdt/788322","method":"GET"} []
[2022-07-29T09:50:34.078267+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T09:50:34.133972+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:50:34.134086+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:50:34.134163+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:50:34.134233+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:50:34.134308+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:50:34.284216+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:50:34.355050+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T09:50:34.430819+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:50:34.444913+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T09:50:34.446595+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T09:50:34.448688+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:50:34.477895+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:50:34.495422+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:50:34.496598+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:50:34.505362+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:34.505788+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:50:34.521023+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:34.521503+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:50:34.522850+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:34.523236+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:50:34.525682+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:50:34.530050+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:50:34.536815+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:34.569711+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:50:34.592024+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:50:34.992568+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"90831f"},"request_uri":"http://192.168.0.167/_wdt/90831f","method":"GET"} []
[2022-07-29T09:50:36.315162+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T09:50:36.338187+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T09:50:36.338300+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:50:36.338377+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T09:50:36.338446+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:50:36.338521+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T09:50:36.419198+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T09:50:36.483871+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T09:50:36.526433+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2022-07-29T09:50:36.532576+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T09:50:36.533740+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T09:50:36.534626+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T09:50:36.549775+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T09:50:36.559154+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:50:36.560145+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T09:50:36.566552+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:36.566886+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T09:50:36.578181+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:36.578627+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T09:50:36.579796+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:36.580169+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T09:50:36.582776+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T09:50:36.586102+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T09:50:36.590256+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T09:50:36.609090+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T09:50:36.624323+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T09:50:36.972336+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc0565"},"request_uri":"http://192.168.0.167/_wdt/fc0565","method":"GET"} []
[2022-07-29T10:01:11.645103+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:02:08.873148+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T10:02:08.929733+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T10:02:08.930054+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:02:08.930613+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:02:08.930897+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:02:08.931010+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:02:09.118258+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:02:09.145759+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:02:11.033091+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load interface "TwoFactorInterface" from namespace "Scheb\TwoFactorBundle\Model\Totp". Did you forget a "use" statement for another namespace?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\security-core\User\UserInterface.php line 31 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load interface \"TwoFactorInterface\" from namespace \"Scheb\\TwoFactorBundle\\Model\\Totp\".\nDid you forget a \"use\" statement for another namespace? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:02:11.353275+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:02:13.216518+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:02:44.072391+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T10:02:44.104030+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T10:02:44.104171+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:02:44.104258+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:02:44.104328+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:02:44.104405+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:02:44.208891+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:02:44.240528+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:02:45.651885+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load interface "TwoFactorInterface" from namespace "Scheb\TwoFactorBundle\Model\Totp". Did you forget a "use" statement for another namespace?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\security-core\User\UserInterface.php line 31 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load interface \"TwoFactorInterface\" from namespace \"Scheb\\TwoFactorBundle\\Model\\Totp\".\nDid you forget a \"use\" statement for another namespace? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:02:45.805503+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:02:46.968184+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:03:05.584711+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T10:03:05.617533+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T10:03:05.617651+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:03:05.617729+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:03:05.617800+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:03:05.617878+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:03:05.718903+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:03:05.750241+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:03:06.853431+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load interface "TwoFactorInterface" from namespace "Scheb\TwoFactorBundle\Model\Totp". Did you forget a "use" statement for another namespace?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\security-core\User\UserInterface.php line 31 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load interface \"TwoFactorInterface\" from namespace \"Scheb\\TwoFactorBundle\\Model\\Totp\".\nDid you forget a \"use\" statement for another namespace? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:03:06.993696+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:03:08.136792+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:04:55.658012+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:04:57.894398+02:00] php.DEBUG: Warning: filemtime(): stat failed for C:\xampp\htdocs\ecommerce\tablouri\config\routes\scheb_2fa.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\config\\Resource\\FileResource.php","line":61,"trace":[{"file":"C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\config\\Resource\\SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2022-07-29T10:10:53.369142+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:11:33.039101+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:11:42.968936+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T10:11:43.003759+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T10:11:43.003889+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:11:43.003965+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:11:43.004032+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:11:43.004106+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:11:43.129907+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:11:43.147127+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:11:44.378230+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load interface "TwoFactorInterface" from namespace "Scheb\TwoFactorBundle\Model\Totp". Did you forget a "use" statement for another namespace?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\security-core\User\UserInterface.php line 31 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load interface \"TwoFactorInterface\" from namespace \"Scheb\\TwoFactorBundle\\Model\\Totp\".\nDid you forget a \"use\" statement for another namespace? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:11:44.581656+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:11:45.887004+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:13:16.962937+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:13:17.064594+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T10:13:17.081851+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:13:17.081974+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:13:17.082051+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:13:17.082117+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:13:17.082184+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:13:17.082247+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:13:17.082318+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:13:17.087297+02:00] php.CRITICAL: Uncaught Error: Interface "Scheb\TwoFactorBundle\Model\Totp\TwoFactorInterface" not found {"exception":"[object] (Error(code: 0): Interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TwoFactorInterface\" not found at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:13:18.364183+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load interface "TwoFactorInterface" from namespace "Scheb\TwoFactorBundle\Model\Totp". Did you forget a "use" statement for another namespace?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\security-core\User\UserInterface.php line 31 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load interface \"TwoFactorInterface\" from namespace \"Scheb\\TwoFactorBundle\\Model\\Totp\".\nDid you forget a \"use\" statement for another namespace? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\security-core\\User\\UserInterface.php:31)"} []
[2022-07-29T10:13:18.498245+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:13:18.510399+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:13:18.517589+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:13:18.536156+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:13:18.536588+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:13:18.556185+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:13:18.556674+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:13:18.559411+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:13:18.559756+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:13:18.562808+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:13:18.568472+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:13:18.590880+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:13:18.677107+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:13:19.034467+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a802dd"},"request_uri":"http://192.168.0.167/_wdt/a802dd","method":"GET"} []
[2022-07-29T10:16:16.759899+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T10:16:16.797250+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:16:16.797477+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:16:16.797564+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:16:16.797637+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:16:16.797710+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:16:16.797779+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:16:16.797855+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:16:16.810009+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:16:16.938389+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:16:16.984272+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"stefy2222@stefy.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"stefy2222@stefy.com"},"types":{"1":2}} []
[2022-07-29T10:16:17.003686+02:00] security.INFO: Remember-me cookie accepted. [] []
[2022-07-29T10:16:17.020536+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken":"RememberMeToken(user=\"stefy2222@stefy.com\", roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:16:17.032645+02:00] security.DEBUG: Remember me skipped: your authenticator does not support it. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator"} []
[2022-07-29T10:16:17.032764+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:16:17.099946+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T10:16:17.172039+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:16:17.185683+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:16:17.186806+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:16:17.194025+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:17.194448+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:16:17.208719+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:17.210863+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:16:17.213521+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:17.213946+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:16:17.216477+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:16:17.220056+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:16:17.225658+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:17.271551+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:16:18.219319+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7ec4a3"},"request_uri":"http://192.168.0.167/_wdt/7ec4a3","method":"GET"} []
[2022-07-29T10:16:18.960638+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T10:16:19.177217+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:16:19.205050+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:16:19.207781+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:16:19.224458+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:19.224957+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:16:19.236574+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:19.237006+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:16:19.238432+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:19.238775+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:16:19.241323+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:16:19.244867+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:16:19.249404+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:19.279183+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:16:19.313622+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:16:19.996073+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:16:20.025584+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:16:20.025697+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:16:20.025781+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:16:20.025852+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:16:20.025924+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:16:20.025991+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:16:20.026066+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:16:20.041167+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:16:20.117168+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:16:20.138655+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:16:20.147486+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:16:20.148743+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:16:20.180206+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticatorInterface" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticatorInterface\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T10:16:20.284414+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:16:20.285420+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:16:20.290877+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:20.291243+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:16:20.303498+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:20.303945+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:16:20.305064+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:20.305461+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:16:20.308052+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:16:20.316050+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:16:20.320067+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:16:20.321780+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:16:20.354175+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:16:20.391598+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:16:20.810728+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"739365"},"request_uri":"http://192.168.0.167/_wdt/739365","method":"GET"} []
[2022-07-29T10:17:00.484268+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:17:31.425312+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:18:14.725987+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:18:21.682418+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:18:21.720466+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:18:21.720603+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:18:21.720686+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:18:21.720764+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:18:21.720839+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:18:21.720909+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:18:21.720998+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:18:21.744134+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:18:21.828293+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:18:21.855207+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:18:21.866161+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:18:21.868196+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:18:21.925309+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references interface "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticatorInterface" but no such service exists. Did you create a class that implements this interface?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references interface \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticatorInterface\" but no such service exists. Did you create a class that implements this interface? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T10:18:22.082992+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:18:22.084676+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:18:22.090930+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:18:22.091312+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:18:22.107119+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:18:22.107719+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:18:22.110484+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:18:22.110867+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:18:22.113488+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:18:22.117438+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:18:22.122679+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:18:22.124482+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:18:22.166046+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:18:22.214394+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:18:22.642648+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d80c79"},"request_uri":"http://192.168.0.167/_wdt/d80c79","method":"GET"} []
[2022-07-29T10:19:08.696858+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:20:18.039167+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:20:18.076231+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:20:18.076346+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:20:18.076431+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:20:18.076518+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:20:18.076591+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:20:18.076666+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:20:18.076837+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:20:18.097966+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:20:18.182683+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:20:18.224143+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:20:18.234795+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:20:18.236567+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:20:18.283062+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references interface "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticatorInterface" but no such service exists. Did you create a class that implements this interface?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references interface \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticatorInterface\" but no such service exists. Did you create a class that implements this interface? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T10:20:18.431535+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:20:18.432462+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:20:18.439448+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:20:18.439788+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:20:18.451951+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:20:18.452470+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:20:18.454320+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:20:18.454730+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:20:18.457129+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:20:18.460764+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:20:18.466591+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:20:18.468287+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:20:18.511857+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:20:18.558994+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:20:18.966471+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"91d8d8"},"request_uri":"http://192.168.0.167/_wdt/91d8d8","method":"GET"} []
[2022-07-29T10:21:07.268041+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:21:07.366536+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:21:07.382274+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:21:07.382395+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:07.382575+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:07.382710+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:07.382785+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:07.382852+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:07.382928+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:21:07.396387+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:21:07.429919+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:21:07.470848+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:21:07.480700+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:21:07.482015+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:07.506622+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "App\Controller\TotpAuthenticatorInterface" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"App\\Controller\\TotpAuthenticatorInterface\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T10:21:07.616391+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:07.617895+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:07.626239+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:07.626727+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:21:07.641410+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:07.641912+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:21:07.643183+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:07.643590+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:21:07.646032+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:21:07.649542+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:21:07.654880+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:07.656540+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:21:07.732457+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:21:08.172523+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c3dcb"},"request_uri":"http://192.168.0.167/_wdt/6c3dcb","method":"GET"} []
[2022-07-29T10:21:25.659112+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:21:25.758788+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:21:25.774510+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:21:25.774622+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:25.774702+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:25.774772+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:25.774844+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:25.774912+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:25.774988+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:21:25.786346+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:21:25.822068+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:21:25.867576+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:21:25.877112+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:21:25.878438+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:25.940382+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:21:25.954175+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:25.955232+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:25.961606+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:25.962032+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:21:25.976996+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:25.977497+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:21:25.979087+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:25.979477+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:21:25.981887+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:21:25.985334+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:21:25.990642+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:26.037443+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:21:26.650375+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dda2c4"},"request_uri":"http://192.168.0.167/_wdt/dda2c4","method":"GET"} []
[2022-07-29T10:21:26.749334+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-29T10:21:26.786517+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:21:26.786686+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:26.786773+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:26.786864+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:26.786938+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:26.787007+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:26.787208+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:21:26.805380+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:21:26.887021+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:21:26.935077+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:21:26.944350+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:21:26.945832+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:26.990862+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T10:21:27.108256+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:27.109216+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:27.115471+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.115957+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:21:27.131208+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.131695+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:21:27.133010+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.133426+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:21:27.135958+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:21:27.139580+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:21:27.144486+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.146140+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:21:27.181652+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:21:27.224719+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:21:27.695697+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T10:21:27.898874+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:21:27.928786+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:27.931394+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:27.947400+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.947845+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:21:27.956317+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.956803+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:21:27.958047+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.958444+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:21:27.961052+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:21:27.964303+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:21:27.970281+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:27.997398+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:21:28.036758+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:21:31.820875+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T10:21:31.849683+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:21:31.849983+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:31.850075+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:21:31.850146+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:31.850225+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:21:31.850295+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:31.850573+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:21:31.868254+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:21:31.933939+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:21:31.978867+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:21:31.987680+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:21:31.989081+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:21:32.034888+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T10:21:32.084586+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:21:32.093783+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:32.094746+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:21:32.100289+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:32.100621+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:21:32.111895+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:32.112369+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:21:32.113783+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:32.114186+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:21:32.116962+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:21:32.121856+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:21:32.126041+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:21:32.145015+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:21:32.166379+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:21:32.594510+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f0c46"},"request_uri":"http://192.168.0.167/_wdt/0f0c46","method":"GET"} []
[2022-07-29T10:22:19.242094+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:22:19.348982+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T10:22:19.364584+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:22:19.364699+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:22:19.364779+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:22:19.364850+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:22:19.364922+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:22:19.364992+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:22:19.365069+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:22:19.374823+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:22:19.409712+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:22:19.433929+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:22:19.444250+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:22:19.445999+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:22:19.481957+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T10:22:19.549366+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:22:19.562468+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:22:19.563396+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:22:19.569458+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:19.569835+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:22:19.583266+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:19.583730+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:22:19.584773+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:19.585131+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:22:19.587853+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:22:19.591916+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:22:19.597912+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:19.645778+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:22:20.338133+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"15f6f8"},"request_uri":"http://192.168.0.167/_wdt/15f6f8","method":"GET"} []
[2022-07-29T10:22:21.103118+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T10:22:21.312795+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:22:21.335744+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:22:21.338236+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:22:21.356877+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:21.357301+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:22:21.372908+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:21.373408+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:22:21.374655+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:21.375056+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:22:21.377687+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:22:21.381211+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:22:21.386065+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:21.416354+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:22:21.457919+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:22:22.103596+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:22:22.132612+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:22:22.132769+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:22:22.132864+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:22:22.132942+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:22:22.133033+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:22:22.133185+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:22:22.133283+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:22:22.149803+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:22:22.213522+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:22:22.258410+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:22:22.267451+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:22:22.268778+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:22:22.311676+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references interface "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticatorInterface" but no such service exists. Did you create a class that implements this interface?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references interface \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticatorInterface\" but no such service exists. Did you create a class that implements this interface? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T10:22:22.391321+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:22:22.392244+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:22:22.397656+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:22.398066+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:22:22.411413+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:22.411854+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:22:22.413039+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:22.413470+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:22:22.415973+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:22:22.419104+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:22:22.423062+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:22:22.424775+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:22:22.454567+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:22:22.492367+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:22:22.821332+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc25ab"},"request_uri":"http://192.168.0.167/_wdt/cc25ab","method":"GET"} []
[2022-07-29T10:23:34.927523+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:23:35.079925+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:23:35.097530+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:23:35.097781+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:23:35.097903+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:23:35.097981+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:23:35.098058+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:23:35.098130+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:23:35.098215+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:23:35.109653+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:23:35.148209+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:23:35.174545+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:23:35.198718+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:23:35.200717+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:23:35.229801+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references interface "Scheb\TwoFactorBundle\Model\Totp\TotpConfigurationInterface" but no such service exists. Did you create a class that implements this interface?" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references interface \"Scheb\\TwoFactorBundle\\Model\\Totp\\TotpConfigurationInterface\" but no such service exists. Did you create a class that implements this interface? at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T10:23:35.322050+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:23:35.322992+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:23:35.328958+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:23:35.329285+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:23:35.343325+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:23:35.343827+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:23:35.345056+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:23:35.345450+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:23:35.347950+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:23:35.351416+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:23:35.356673+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:23:35.358484+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:23:35.432594+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:23:35.749948+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"580c5d"},"request_uri":"http://192.168.0.167/_wdt/580c5d","method":"GET"} []
[2022-07-29T10:24:02.017149+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:24:02.122532+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:24:02.140134+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:24:02.140251+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:24:02.140331+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:24:02.140401+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:24:02.140472+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:24:02.140546+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:24:02.140632+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:24:02.150505+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:24:02.183017+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:24:02.232959+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:24:02.242674+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:24:02.243948+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:24:02.272172+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T10:24:02.365668+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:02.367103+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:02.374015+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:02.374480+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:24:02.388338+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:02.389002+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:24:02.390140+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:02.390561+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:24:02.392988+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:24:02.396540+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:24:02.401791+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:02.403504+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:24:02.477703+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:24:02.906759+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a15e13"},"request_uri":"http://192.168.0.167/_wdt/a15e13","method":"GET"} []
[2022-07-29T10:24:25.482246+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:24:25.581700+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:24:25.599015+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:24:25.599398+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:24:25.599501+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:24:25.599569+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:24:25.599639+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:24:25.599705+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:24:25.599786+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:24:25.610063+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:24:25.643223+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:24:25.689110+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:24:25.698900+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:24:25.700167+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:24:25.761726+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:24:25.776050+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:25.776989+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:25.783122+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:25.783493+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:24:25.798021+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:25.798567+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:24:25.800140+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:25.800606+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:24:25.803548+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:24:25.807207+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:24:25.813157+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:25.861242+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:24:26.470316+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f0e046"},"request_uri":"http://192.168.0.167/_wdt/f0e046","method":"GET"} []
[2022-07-29T10:24:26.555440+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-29T10:24:26.592193+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:24:26.592311+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:24:26.592394+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:24:26.592466+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:24:26.592540+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:24:26.592608+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:24:26.592683+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:24:26.610960+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:24:26.694417+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:24:26.735352+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:24:26.744807+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:24:26.746244+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:24:26.791635+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T10:24:26.912987+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:26.913858+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:26.919893+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:26.920239+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:24:26.937566+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:26.938094+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:24:26.940055+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:26.940961+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:24:26.943684+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:24:26.947207+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:24:26.952015+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:26.953626+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:24:26.988363+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:24:27.033972+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:24:27.708303+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T10:24:27.915282+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:24:27.948835+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:27.951526+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:24:27.968875+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:27.969355+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:24:27.985653+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:27.986122+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:24:27.987164+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:27.987483+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:24:27.990132+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:24:27.993788+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:24:27.998718+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:24:28.028869+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:24:28.069393+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:25:10.754511+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:25:10.855288+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:25:10.873580+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:25:10.873701+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:10.873783+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:10.873855+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:10.873927+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:10.873996+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:10.874073+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:25:10.883790+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:25:10.918257+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:25:10.955745+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:25:10.965790+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:25:10.967055+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:11.032005+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:25:11.047245+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:11.048213+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:11.054883+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:11.055363+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:25:11.070285+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:11.070772+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:25:11.072013+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:11.072390+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:25:11.074794+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:25:11.078640+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:25:11.084299+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:11.136147+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:25:11.740335+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-29T10:25:11.768898+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:25:11.769022+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:11.769103+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:11.769175+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:11.769247+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:11.769315+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:11.769389+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:25:11.785569+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:25:11.848613+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43ac71"},"request_uri":"http://192.168.0.167/_wdt/43ac71","method":"GET"} []
[2022-07-29T10:25:11.851094+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:25:11.888661+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:25:11.897921+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:25:11.899244+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:11.936625+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T10:25:12.042490+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:12.043446+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:12.048862+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.049156+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:25:12.062061+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.062585+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:25:12.063728+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.064069+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:25:12.066404+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:25:12.069514+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:25:12.073499+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.075154+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:25:12.105501+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:25:12.143976+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:25:12.434072+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T10:25:12.688112+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:25:12.711590+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:12.714586+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:12.740388+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.749829+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:25:12.770553+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.770982+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:25:12.772017+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.772291+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:25:12.774657+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:25:12.778075+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:25:12.785680+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:12.818140+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:25:12.858794+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:25:48.880756+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:25:48.911441+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:25:48.911558+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:48.911637+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:48.911714+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:48.911793+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:48.911868+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:48.911940+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:25:48.926337+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:25:48.995614+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:25:49.042038+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:25:49.053321+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:25:49.054753+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:49.110065+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:25:49.121881+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:49.122830+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:49.129264+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:49.130165+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:25:49.145855+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:49.146372+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:25:49.147631+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:49.148077+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:25:49.150484+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:25:49.153750+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:25:49.157957+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:49.179339+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:25:49.205835+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:25:49.725285+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-29T10:25:49.752025+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:25:49.752156+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:49.752233+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:25:49.752310+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:49.752388+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:25:49.752452+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:49.752526+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:25:49.765554+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:25:49.830375+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:25:49.848607+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:25:49.857616+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:25:49.858574+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:25:49.892647+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T10:25:49.993616+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:49.994642+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:50.000198+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:50.000609+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:25:50.017249+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:50.017722+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:25:50.018824+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:50.019209+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:25:50.021799+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:25:50.024925+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:25:50.028967+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:50.030660+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:25:50.061961+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:25:50.098718+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:25:50.749165+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T10:25:51.043706+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:25:51.058309+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:51.061124+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:25:51.079458+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:51.080178+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:25:51.093986+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:51.094835+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:25:51.096764+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:51.097203+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:25:51.099957+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:25:51.104062+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:25:51.108129+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:25:51.137892+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:25:51.173719+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:26:11.067145+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:26:11.170146+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:26:11.185487+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:26:11.185593+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:26:11.185673+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:26:11.185745+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:26:11.185816+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:26:11.185884+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:26:11.185960+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:26:11.196038+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:26:11.230563+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:26:11.279395+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:26:11.288870+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:26:11.290161+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:26:11.322557+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T10:26:11.415964+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:26:11.416980+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:26:11.423104+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:26:11.423451+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:26:11.436933+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:26:11.437438+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:26:11.438747+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:26:11.439170+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:26:11.441517+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:26:11.445020+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:26:11.450398+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:26:11.452123+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:26:11.526407+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:26:11.903220+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd7d6a"},"request_uri":"http://192.168.0.167/_wdt/fd7d6a","method":"GET"} []
[2022-07-29T10:28:15.320511+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T10:28:15.421042+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T10:28:15.436281+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T10:28:15.436559+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:28:15.436648+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T10:28:15.436720+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:28:15.436798+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T10:28:15.436877+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:28:15.436962+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T10:28:15.448211+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T10:28:15.483178+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T10:28:15.518577+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T10:28:15.528357+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T10:28:15.529623+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T10:28:15.558323+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T10:28:15.648483+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:28:15.649560+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T10:28:15.655668+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:28:15.656087+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T10:28:15.669997+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:28:15.670523+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T10:28:15.671756+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:28:15.672150+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T10:28:15.674841+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T10:28:15.678502+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T10:28:15.684004+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T10:28:15.685757+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T10:28:15.759482+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T10:28:16.197262+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e093b3"},"request_uri":"http://192.168.0.167/_wdt/e093b3","method":"GET"} []
[2022-07-29T12:06:56.813223+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:06:56.937095+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T12:06:56.953102+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2022-07-29T12:06:56.953214+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T12:06:56.953294+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Scheb\\TwoFactorBundle\\Security\\Http\\Authenticator\\TwoFactorAuthenticator"} []
[2022-07-29T12:06:56.953365+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:06:56.953436+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:06:56.953504+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:06:56.953580+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:06:56.964341+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:06:57.001778+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:06:57.027521+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:06:57.037966+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:06:57.039301+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:06:57.070765+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T12:06:57.190333+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:06:57.192975+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:06:57.199305+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:06:57.199669+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:06:57.213790+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:06:57.214214+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:06:57.215967+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:06:57.216437+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:06:57.219148+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:06:57.222739+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:06:57.228695+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:06:57.230895+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:06:57.314714+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:06:57.768498+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"09b21f"},"request_uri":"http://192.168.0.167/_wdt/09b21f","method":"GET"} []
[2022-07-29T12:10:25.248470+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:11:38.321670+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:11:38.325512+02:00] php.DEBUG: Warning: filemtime(): stat failed for C:\xampp\htdocs\ecommerce\tablouri\config\routes\scheb_2fa.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\config\\Resource\\FileResource.php","line":61,"trace":[{"file":"C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\config\\Resource\\SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2022-07-29T12:11:38.425796+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T12:11:38.441408+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:11:38.441545+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:11:38.441624+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:11:38.441693+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:11:38.441770+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:11:38.475319+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T12:11:38.596094+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:11:38.628445+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:11:38.678585+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:11:38.688414+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:11:38.689240+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:11:38.703562+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:11:38.704639+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:11:38.710750+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:38.711174+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:11:38.729367+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:38.730236+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:11:38.732347+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:38.732759+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:11:38.735222+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:11:38.738731+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:11:38.744692+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:38.746723+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:11:38.818568+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:11:39.232777+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"522168"},"request_uri":"http://192.168.0.167/_wdt/522168","method":"GET"} []
[2022-07-29T12:11:57.777193+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:11:57.875003+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T12:11:57.888624+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:11:57.888746+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:11:57.888826+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:11:57.888896+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:11:57.888975+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:11:57.921468+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T12:11:58.009223+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:11:58.043034+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:11:58.089306+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:11:58.098866+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:11:58.099932+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:11:58.113789+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:11:58.114764+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:11:58.121253+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:58.121720+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:11:58.136164+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:58.136618+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:11:58.137774+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:58.138194+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:11:58.141563+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:11:58.145512+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:11:58.150867+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:11:58.152968+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:11:58.224065+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:11:58.671810+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"14a7f8"},"request_uri":"http://192.168.0.167/_wdt/14a7f8","method":"GET"} []
[2022-07-29T12:13:05.438775+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T12:13:05.473949+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:13:05.474064+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:13:05.474141+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:13:05.474211+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:13:05.474287+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:13:05.570857+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T12:13:05.687610+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:13:05.721401+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:13:05.757150+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:13:05.766566+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:13:05.767643+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:13:05.785197+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:13:05.786107+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:13:05.792284+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:05.792723+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:13:05.806934+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:05.807417+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:13:05.808558+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:05.809039+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:13:05.811368+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:13:05.814728+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:13:05.819778+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:05.821702+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:13:05.860587+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:13:05.904929+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:13:06.333003+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8fa1ab"},"request_uri":"http://192.168.0.167/_wdt/8fa1ab","method":"GET"} []
[2022-07-29T12:13:21.745268+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T12:13:21.775450+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:13:21.775564+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:13:21.775641+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:13:21.775827+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:13:21.775908+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:13:21.869926+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $totpAuthenticator of "App\Controller\SecurityController::enable2fa()": it references class "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" but no such service exists." at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\dependency-injection\Container.php line 377 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $totpAuthenticator of \"App\\Controller\\SecurityController::enable2fa()\": it references class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\Totp\\TotpAuthenticator\" but no such service exists. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\dependency-injection\\Container.php:377)"} []
[2022-07-29T12:13:21.965846+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:13:21.996577+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:13:22.019987+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:13:22.031682+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:13:22.032687+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:13:22.047856+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:13:22.048783+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:13:22.054945+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:22.055339+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:13:22.068812+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:22.069309+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:13:22.070351+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:22.070691+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:13:22.073036+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:13:22.076445+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:13:22.081437+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:13:22.083410+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:13:22.115975+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:13:22.153616+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:13:22.556502+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"338ae4"},"request_uri":"http://192.168.0.167/_wdt/338ae4","method":"GET"} []
[2022-07-29T12:15:03.015722+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:15:03.112414+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T12:15:03.125937+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:15:03.126050+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:15:03.126128+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:15:03.126197+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:15:03.126272+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:15:03.149306+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:15:03.181230+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:15:03.215007+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:15:03.230579+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:15:03.231789+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:15:03.283472+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:15:03.299654+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:15:03.301534+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:15:03.308581+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:03.308974+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:15:03.322509+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:03.323030+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:15:03.324548+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:03.324900+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:15:03.327441+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:15:03.331126+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:15:03.336350+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:03.385450+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:15:04.242485+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba93ce"},"request_uri":"http://192.168.0.167/_wdt/ba93ce","method":"GET"} []
[2022-07-29T12:15:04.310379+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-29T12:15:04.341536+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:15:04.341648+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:15:04.341726+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:15:04.341796+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:15:04.341873+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:15:04.393067+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T12:15:04.512984+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:15:04.591188+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:15:04.624863+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:15:04.634159+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:15:04.635261+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:15:04.649801+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:15:04.650792+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:15:04.656950+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:04.657375+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:15:04.672391+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:04.673083+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:15:04.675510+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:04.675917+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:15:04.678421+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:15:04.683982+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:15:04.688990+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:04.690958+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:15:04.736592+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:15:04.774333+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:15:05.177452+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T12:15:05.357484+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:15:05.384507+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:15:05.387729+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:15:05.402189+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:05.402665+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:15:05.414284+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:05.414750+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:15:05.415866+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:05.416251+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:15:05.418733+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:15:05.421959+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:15:05.425778+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:15:05.454259+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:15:05.486344+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:26:48.756572+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:28:05.287205+02:00] request.INFO: Matched route "app_2fa_enable". {"route":"app_2fa_enable","route_parameters":{"_route":"app_2fa_enable","_controller":"App\\Controller\\SecurityController::enable2fa"},"request_uri":"http://192.168.0.167/authenticate/2fa/enable","method":"GET"} []
[2022-07-29T12:28:05.322117+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:28:05.322233+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:28:05.322308+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:28:05.322376+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:28:05.322449+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:28:05.443819+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:28:05.488822+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:28:05.520802+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:28:05.534268+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:28:05.535633+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:28:05.581248+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:28:05.599218+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:28:05.600506+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:28:05.609409+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:05.609793+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:28:05.626821+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:05.627273+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:28:05.629865+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:05.630228+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:28:05.632766+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:28:05.638043+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:28:05.644908+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:05.670715+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:28:05.689457+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:28:06.117081+02:00] request.INFO: Matched route "app_qr_code". {"route":"app_qr_code","route_parameters":{"_route":"app_qr_code","_controller":"App\\Controller\\SecurityController::displayGoogleAuthenticatorQrCode"},"request_uri":"http://192.168.0.167/authentication/2fa/qr-code","method":"GET"} []
[2022-07-29T12:28:06.140943+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:28:06.141072+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:28:06.141152+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:28:06.141225+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:28:06.141313+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:28:06.177558+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "Scheb\TwoFactorBundle\Security\TwoFactor\QrCode\QrCodeGenerator" does not exist" at C:\xampp\htdocs\ecommerce\tablouri\vendor\doctrine\persistence\src\Persistence\AbstractManagerRegistry.php line 171 {"exception":"[object] (ReflectionException(code: -1): Class \"Scheb\\TwoFactorBundle\\Security\\TwoFactor\\QrCode\\QrCodeGenerator\" does not exist at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\doctrine\\persistence\\src\\Persistence\\AbstractManagerRegistry.php:171)"} []
[2022-07-29T12:28:06.349603+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:28:06.365206+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d01214"},"request_uri":"http://192.168.0.167/_wdt/d01214","method":"GET"} []
[2022-07-29T12:28:06.426986+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:28:06.453312+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:28:06.463558+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:28:06.464542+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:28:06.480735+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:28:06.483023+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:28:06.489412+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:06.489823+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:28:06.501263+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:06.501711+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:28:06.503509+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:06.503866+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:28:06.506612+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:28:06.510408+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:28:06.515550+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:06.517593+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:28:06.560745+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:28:06.602592+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:28:07.071879+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/favicon.ico" (from "http://192.168.0.167/authenticate/2fa/enable")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/favicon.ico\" (from \"http://192.168.0.167/authenticate/2fa/enable\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T12:28:07.300830+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:28:07.314674+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:28:07.317629+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:28:07.335325+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:07.335743+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:28:07.348358+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:07.348851+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:28:07.350687+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:07.351108+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:28:07.353562+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:28:07.358063+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:28:07.363160+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:28:07.396182+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:28:07.432492+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:31:01.092769+02:00] request.INFO: Matched route "app_homepage". {"route":"app_homepage","route_parameters":{"_route":"app_homepage","_controller":"App\\Controller\\HomepageController::homepage"},"request_uri":"http://192.168.0.167/","method":"GET"} []
[2022-07-29T12:31:01.127186+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:31:01.127304+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:31:01.127384+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:31:01.127458+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:31:01.127538+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:31:01.128991+02:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:31:01.160960+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://192.168.0.167/authenticate/2fa/enable" (from "http://192.168.0.167/")" at C:\xampp\htdocs\ecommerce\tablouri\vendor\symfony\http-kernel\EventListener\RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://192.168.0.167/authenticate/2fa/enable\" (from \"http://192.168.0.167/\") at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/authenticate/2fa/enable/\". at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:74)"} []
[2022-07-29T12:31:01.221556+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:31:01.294292+02:00] doctrine.DEBUG: Executing query: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL ORDER BY p0_.added_at DESC"} []
[2022-07-29T12:31:01.351050+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:31:01.362127+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:31:01.365331+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:31:01.382922+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.383406+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:31:01.398698+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.399755+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:31:01.402893+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.403339+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:31:01.406024+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:31:01.409604+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:31:01.416673+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.425104+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:31:01.438739+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:31:01.440228+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:31:01.441579+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:31:01.464290+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:31:01.478799+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:31:01.479856+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:31:01.486767+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.487328+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:31:01.490729+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:31:01.500035+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.500522+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:31:01.501722+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.502033+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:31:01.504457+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:31:01.508117+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:31:01.513089+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:31:01.539364+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:31:01.558597+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:31:02.062135+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"18869f"},"request_uri":"http://192.168.0.167/_wdt/18869f","method":"GET"} []
[2022-07-29T12:33:16.983687+02:00] request.INFO: Matched route "app_product_page". {"route":"app_product_page","route_parameters":{"_route":"app_product_page","_controller":"App\\Controller\\ProductPageController::productPage","slug":"repellendus-qui-facere-modi-perferendis-magni-illo-ullam"},"request_uri":"http://192.168.0.167/product-page/repellendus-qui-facere-modi-perferendis-magni-illo-ullam","method":"GET"} []
[2022-07-29T12:33:17.015274+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":2} []
[2022-07-29T12:33:17.015385+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:33:17.015462+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2022-07-29T12:33:17.015532+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:33:17.015605+02:00] security.DEBUG: Remember-me cookie detected. [] []
[2022-07-29T12:33:17.117366+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"tablouri","charset":"utf8mb4"}} []
[2022-07-29T12:33:17.179407+02:00] doctrine.DEBUG: Executing statement: SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC (parameters: array{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"}, types: array{"1":2}) {"sql":"SELECT p0_.id AS id_0, p0_.title AS title_1, p0_.description AS description_2, p0_.added_at AS added_at_3, p0_.updated_at AS updated_at_4, p0_.deleted_at AS deleted_at_5, p0_.slug AS slug_6, c1_.id AS id_7, c1_.content AS content_8, c1_.added_at AS added_at_9, c1_.updated_at AS updated_at_10, c1_.deleted_at AS deleted_at_11, u2_.id AS id_12, u2_.email AS email_13, u2_.roles AS roles_14, u2_.first_name AS first_name_15, u2_.password AS password_16, u2_.is_verified AS is_verified_17, u2_.totp_secret AS totp_secret_18 FROM product p0_ LEFT JOIN product_comment p3_ ON p0_.id = p3_.product_id LEFT JOIN comment c1_ ON c1_.id = p3_.comment_id INNER JOIN comment_user c4_ ON c1_.id = c4_.comment_id INNER JOIN user u2_ ON u2_.id = c4_.user_id WHERE p0_.deleted_at IS NULL AND p0_.slug LIKE ? ORDER BY p0_.added_at DESC","params":{"1":"%repellendus-qui-facere-modi-perferendis-magni-illo-ullam%"},"types":{"1":2}} []
[2022-07-29T12:33:17.235000+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken"} []
[2022-07-29T12:33:17.242199+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ? (parameters: array{"1":22}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.first_name AS first_name_4, t0.password AS password_5, t0.is_verified AS is_verified_6, t0.totp_secret AS totp_secret_7 FROM user t0 WHERE t0.id = ?","params":{"1":22},"types":{"1":1}} []
[2022-07-29T12:33:17.243568+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"stefy2222@stefy.com"} []
[2022-07-29T12:33:17.244859+02:00] security.DEBUG: Skipping the "Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" authenticator as it did not support the request. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2022-07-29T12:33:17.264825+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2022-07-29T12:33:17.276880+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:33:17.277830+02:00] doctrine.DEBUG: Executing query: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' {"sql":"SHOW FULL TABLES WHERE Table_type = 'BASE TABLE'"} []
[2022-07-29T12:33:17.284014+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:33:17.284400+02:00] doctrine.DEBUG: Executing query: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC {"sql":"SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'tablouri' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC"} []
[2022-07-29T12:33:17.298340+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:33:17.298818+02:00] doctrine.DEBUG: Executing query: SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION {"sql":"SELECT k.CONSTRAINT_NAME, k.COLUMN_NAME, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME /*!50116 , c.UPDATE_RULE, c.DELETE_RULE */ FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE k /*!50116 INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_NAME = 'doctrine_migration_versions' AND k.TABLE_SCHEMA = 'tablouri' /*!50116 AND c.CONSTRAINT_SCHEMA = 'tablouri' */ORDER BY k.ORDINAL_POSITION"} []
[2022-07-29T12:33:17.300096+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:33:17.300514+02:00] doctrine.DEBUG: Executing query: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC {"sql":"SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'tablouri' ORDER BY SEQ_IN_INDEX ASC"} []
[2022-07-29T12:33:17.303001+02:00] doctrine.DEBUG: Executing query: SELECT t.ENGINE,        t.AUTO_INCREMENT,        t.TABLE_COMMENT,        t.CREATE_OPTIONS,        t.TABLE_COLLATION,        ccsa.CHARACTER_SET_NAME FROM information_schema.TABLES t     INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa         ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' {"sql":"SELECT t.ENGINE,\n       t.AUTO_INCREMENT,\n       t.TABLE_COMMENT,\n       t.CREATE_OPTIONS,\n       t.TABLE_COLLATION,\n       ccsa.CHARACTER_SET_NAME\nFROM information_schema.TABLES t\n    INNER JOIN information_schema.`COLLATION_CHARACTER_SET_APPLICABILITY` ccsa\n        ON ccsa.COLLATION_NAME = t.TABLE_COLLATION\nWHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions'"} []
[2022-07-29T12:33:17.306546+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:33:17.311477+02:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2022-07-29T12:33:17.336551+02:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\CheckVerifiedUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\EventDispatcher\\EventSubscriberInterface::getSubscribedEvents()\" might add \"array\" as a native return type declaration in the future. Do the same in implementation \"App\\EventSubscriber\\CheckVerifiedUserSubscriber\" now to avoid errors or add an explicit @return annotation to suppress this message. at C:\\xampp\\htdocs\\ecommerce\\tablouri\\vendor\\symfony\\error-handler\\DebugClassLoader.php:330)"} []
[2022-07-29T12:33:17.353794+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:33:17.734827+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f91f2"},"request_uri":"http://192.168.0.167/_wdt/0f91f2","method":"GET"} []
